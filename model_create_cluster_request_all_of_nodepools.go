/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// CreateClusterRequestAllOfNodepools struct for CreateClusterRequestAllOfNodepools
type CreateClusterRequestAllOfNodepools struct {
	// GKE only, set to true to enable autoscaling, requires min_nodes and max_nodes to be set.
	Autoscaling *bool `json:"autoscaling,omitempty"`
	// The minimum number of nodes the autoscaler should maintain. On EKS nodepools if this value is not provided it will implicitly be set equal to nodes value
	MinNodes *int32 `json:"min_nodes,omitempty"`
	// The maximum number of nodes the autoscaler should maintain. On EKS nodepools if this value is not provided it will implicitly be set equal to nodes value
	MaxNodes *int32 `json:"max_nodes,omitempty"`
	// The number of nodes to provision for the cluster
	Nodes int32 `json:"nodes"`
	// Name or ID of size to use for the nodes. If not provided, the t3.medium(EKS), e2-medium(GKE) size will be used
	Size *string `json:"size,omitempty"`
	// Size of the disk attached to each node, specified in GB.
	DiskSize *int32 `json:"disk_size,omitempty"`
	// Type of the disk attached to each node. Defaults to pd-standard(GKE), gp3(EKS)
	DiskType *string `json:"disk_type,omitempty"`
	// Google specific parameter.Whether the nodes are created as preemptible machines. Defaults to false
	Preemptible *bool `json:"preemptible,omitempty"`
}

// NewCreateClusterRequestAllOfNodepools instantiates a new CreateClusterRequestAllOfNodepools object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterRequestAllOfNodepools(nodes int32, ) *CreateClusterRequestAllOfNodepools {
	this := CreateClusterRequestAllOfNodepools{}
	var autoscaling bool = false
	this.Autoscaling = &autoscaling
	this.Nodes = nodes
	var diskSize int32 = 20
	this.DiskSize = &diskSize
	return &this
}

// NewCreateClusterRequestAllOfNodepoolsWithDefaults instantiates a new CreateClusterRequestAllOfNodepools object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterRequestAllOfNodepoolsWithDefaults() *CreateClusterRequestAllOfNodepools {
	this := CreateClusterRequestAllOfNodepools{}
	var autoscaling bool = false
	this.Autoscaling = &autoscaling
	var diskSize int32 = 20
	this.DiskSize = &diskSize
	return &this
}

// GetAutoscaling returns the Autoscaling field value if set, zero value otherwise.
func (o *CreateClusterRequestAllOfNodepools) GetAutoscaling() bool {
	if o == nil || o.Autoscaling == nil {
		var ret bool
		return ret
	}
	return *o.Autoscaling
}

// GetAutoscalingOk returns a tuple with the Autoscaling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequestAllOfNodepools) GetAutoscalingOk() (*bool, bool) {
	if o == nil || o.Autoscaling == nil {
		return nil, false
	}
	return o.Autoscaling, true
}

// HasAutoscaling returns a boolean if a field has been set.
func (o *CreateClusterRequestAllOfNodepools) HasAutoscaling() bool {
	if o != nil && o.Autoscaling != nil {
		return true
	}

	return false
}

// SetAutoscaling gets a reference to the given bool and assigns it to the Autoscaling field.
func (o *CreateClusterRequestAllOfNodepools) SetAutoscaling(v bool) {
	o.Autoscaling = &v
}

// GetMinNodes returns the MinNodes field value if set, zero value otherwise.
func (o *CreateClusterRequestAllOfNodepools) GetMinNodes() int32 {
	if o == nil || o.MinNodes == nil {
		var ret int32
		return ret
	}
	return *o.MinNodes
}

// GetMinNodesOk returns a tuple with the MinNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequestAllOfNodepools) GetMinNodesOk() (*int32, bool) {
	if o == nil || o.MinNodes == nil {
		return nil, false
	}
	return o.MinNodes, true
}

// HasMinNodes returns a boolean if a field has been set.
func (o *CreateClusterRequestAllOfNodepools) HasMinNodes() bool {
	if o != nil && o.MinNodes != nil {
		return true
	}

	return false
}

// SetMinNodes gets a reference to the given int32 and assigns it to the MinNodes field.
func (o *CreateClusterRequestAllOfNodepools) SetMinNodes(v int32) {
	o.MinNodes = &v
}

// GetMaxNodes returns the MaxNodes field value if set, zero value otherwise.
func (o *CreateClusterRequestAllOfNodepools) GetMaxNodes() int32 {
	if o == nil || o.MaxNodes == nil {
		var ret int32
		return ret
	}
	return *o.MaxNodes
}

// GetMaxNodesOk returns a tuple with the MaxNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequestAllOfNodepools) GetMaxNodesOk() (*int32, bool) {
	if o == nil || o.MaxNodes == nil {
		return nil, false
	}
	return o.MaxNodes, true
}

// HasMaxNodes returns a boolean if a field has been set.
func (o *CreateClusterRequestAllOfNodepools) HasMaxNodes() bool {
	if o != nil && o.MaxNodes != nil {
		return true
	}

	return false
}

// SetMaxNodes gets a reference to the given int32 and assigns it to the MaxNodes field.
func (o *CreateClusterRequestAllOfNodepools) SetMaxNodes(v int32) {
	o.MaxNodes = &v
}

// GetNodes returns the Nodes field value
func (o *CreateClusterRequestAllOfNodepools) GetNodes() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *CreateClusterRequestAllOfNodepools) GetNodesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Nodes, true
}

// SetNodes sets field value
func (o *CreateClusterRequestAllOfNodepools) SetNodes(v int32) {
	o.Nodes = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateClusterRequestAllOfNodepools) GetSize() string {
	if o == nil || o.Size == nil {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequestAllOfNodepools) GetSizeOk() (*string, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateClusterRequestAllOfNodepools) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *CreateClusterRequestAllOfNodepools) SetSize(v string) {
	o.Size = &v
}

// GetDiskSize returns the DiskSize field value if set, zero value otherwise.
func (o *CreateClusterRequestAllOfNodepools) GetDiskSize() int32 {
	if o == nil || o.DiskSize == nil {
		var ret int32
		return ret
	}
	return *o.DiskSize
}

// GetDiskSizeOk returns a tuple with the DiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequestAllOfNodepools) GetDiskSizeOk() (*int32, bool) {
	if o == nil || o.DiskSize == nil {
		return nil, false
	}
	return o.DiskSize, true
}

// HasDiskSize returns a boolean if a field has been set.
func (o *CreateClusterRequestAllOfNodepools) HasDiskSize() bool {
	if o != nil && o.DiskSize != nil {
		return true
	}

	return false
}

// SetDiskSize gets a reference to the given int32 and assigns it to the DiskSize field.
func (o *CreateClusterRequestAllOfNodepools) SetDiskSize(v int32) {
	o.DiskSize = &v
}

// GetDiskType returns the DiskType field value if set, zero value otherwise.
func (o *CreateClusterRequestAllOfNodepools) GetDiskType() string {
	if o == nil || o.DiskType == nil {
		var ret string
		return ret
	}
	return *o.DiskType
}

// GetDiskTypeOk returns a tuple with the DiskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequestAllOfNodepools) GetDiskTypeOk() (*string, bool) {
	if o == nil || o.DiskType == nil {
		return nil, false
	}
	return o.DiskType, true
}

// HasDiskType returns a boolean if a field has been set.
func (o *CreateClusterRequestAllOfNodepools) HasDiskType() bool {
	if o != nil && o.DiskType != nil {
		return true
	}

	return false
}

// SetDiskType gets a reference to the given string and assigns it to the DiskType field.
func (o *CreateClusterRequestAllOfNodepools) SetDiskType(v string) {
	o.DiskType = &v
}

// GetPreemptible returns the Preemptible field value if set, zero value otherwise.
func (o *CreateClusterRequestAllOfNodepools) GetPreemptible() bool {
	if o == nil || o.Preemptible == nil {
		var ret bool
		return ret
	}
	return *o.Preemptible
}

// GetPreemptibleOk returns a tuple with the Preemptible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequestAllOfNodepools) GetPreemptibleOk() (*bool, bool) {
	if o == nil || o.Preemptible == nil {
		return nil, false
	}
	return o.Preemptible, true
}

// HasPreemptible returns a boolean if a field has been set.
func (o *CreateClusterRequestAllOfNodepools) HasPreemptible() bool {
	if o != nil && o.Preemptible != nil {
		return true
	}

	return false
}

// SetPreemptible gets a reference to the given bool and assigns it to the Preemptible field.
func (o *CreateClusterRequestAllOfNodepools) SetPreemptible(v bool) {
	o.Preemptible = &v
}

func (o CreateClusterRequestAllOfNodepools) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Autoscaling != nil {
		toSerialize["autoscaling"] = o.Autoscaling
	}
	if o.MinNodes != nil {
		toSerialize["min_nodes"] = o.MinNodes
	}
	if o.MaxNodes != nil {
		toSerialize["max_nodes"] = o.MaxNodes
	}
	if true {
		toSerialize["nodes"] = o.Nodes
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.DiskSize != nil {
		toSerialize["disk_size"] = o.DiskSize
	}
	if o.DiskType != nil {
		toSerialize["disk_type"] = o.DiskType
	}
	if o.Preemptible != nil {
		toSerialize["preemptible"] = o.Preemptible
	}
	return json.Marshal(toSerialize)
}

type NullableCreateClusterRequestAllOfNodepools struct {
	value *CreateClusterRequestAllOfNodepools
	isSet bool
}

func (v NullableCreateClusterRequestAllOfNodepools) Get() *CreateClusterRequestAllOfNodepools {
	return v.value
}

func (v *NullableCreateClusterRequestAllOfNodepools) Set(val *CreateClusterRequestAllOfNodepools) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClusterRequestAllOfNodepools) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClusterRequestAllOfNodepools) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClusterRequestAllOfNodepools(val *CreateClusterRequestAllOfNodepools) *NullableCreateClusterRequestAllOfNodepools {
	return &NullableCreateClusterRequestAllOfNodepools{value: val, isSet: true}
}

func (v NullableCreateClusterRequestAllOfNodepools) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClusterRequestAllOfNodepools) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


