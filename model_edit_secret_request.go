/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// EditSecretRequest struct for EditSecretRequest
type EditSecretRequest struct {
	Secret map[string]interface{} `json:"secret"`
}

// NewEditSecretRequest instantiates a new EditSecretRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditSecretRequest(secret map[string]interface{}, ) *EditSecretRequest {
	this := EditSecretRequest{}
	this.Secret = secret
	return &this
}

// NewEditSecretRequestWithDefaults instantiates a new EditSecretRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditSecretRequestWithDefaults() *EditSecretRequest {
	this := EditSecretRequest{}
	return &this
}

// GetSecret returns the Secret field value
func (o *EditSecretRequest) GetSecret() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *EditSecretRequest) GetSecretOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *EditSecretRequest) SetSecret(v map[string]interface{}) {
	o.Secret = v
}

func (o EditSecretRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["secret"] = o.Secret
	}
	return json.Marshal(toSerialize)
}

type NullableEditSecretRequest struct {
	value *EditSecretRequest
	isSet bool
}

func (v NullableEditSecretRequest) Get() *EditSecretRequest {
	return v.value
}

func (v *NullableEditSecretRequest) Set(val *EditSecretRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEditSecretRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEditSecretRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditSecretRequest(val *EditSecretRequest) *NullableEditSecretRequest {
	return &NullableEditSecretRequest{value: val, isSet: true}
}

func (v NullableEditSecretRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditSecretRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


