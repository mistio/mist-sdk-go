/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// AddKeyRequestAnyOf1 struct for AddKeyRequestAnyOf1
type AddKeyRequestAnyOf1 struct {
	// The key's name
	Name string `json:"name"`
	// Generate a keypair instead of providing one
	Generate bool `json:"generate"`
	// Return generated key without actually adding it
	Dry *bool `json:"dry,omitempty"`
}

// NewAddKeyRequestAnyOf1 instantiates a new AddKeyRequestAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddKeyRequestAnyOf1(name string, generate bool, ) *AddKeyRequestAnyOf1 {
	this := AddKeyRequestAnyOf1{}
	this.Name = name
	this.Generate = generate
	return &this
}

// NewAddKeyRequestAnyOf1WithDefaults instantiates a new AddKeyRequestAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddKeyRequestAnyOf1WithDefaults() *AddKeyRequestAnyOf1 {
	this := AddKeyRequestAnyOf1{}
	return &this
}

// GetName returns the Name field value
func (o *AddKeyRequestAnyOf1) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddKeyRequestAnyOf1) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddKeyRequestAnyOf1) SetName(v string) {
	o.Name = v
}

// GetGenerate returns the Generate field value
func (o *AddKeyRequestAnyOf1) GetGenerate() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Generate
}

// GetGenerateOk returns a tuple with the Generate field value
// and a boolean to check if the value has been set.
func (o *AddKeyRequestAnyOf1) GetGenerateOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Generate, true
}

// SetGenerate sets field value
func (o *AddKeyRequestAnyOf1) SetGenerate(v bool) {
	o.Generate = v
}

// GetDry returns the Dry field value if set, zero value otherwise.
func (o *AddKeyRequestAnyOf1) GetDry() bool {
	if o == nil || o.Dry == nil {
		var ret bool
		return ret
	}
	return *o.Dry
}

// GetDryOk returns a tuple with the Dry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddKeyRequestAnyOf1) GetDryOk() (*bool, bool) {
	if o == nil || o.Dry == nil {
		return nil, false
	}
	return o.Dry, true
}

// HasDry returns a boolean if a field has been set.
func (o *AddKeyRequestAnyOf1) HasDry() bool {
	if o != nil && o.Dry != nil {
		return true
	}

	return false
}

// SetDry gets a reference to the given bool and assigns it to the Dry field.
func (o *AddKeyRequestAnyOf1) SetDry(v bool) {
	o.Dry = &v
}

func (o AddKeyRequestAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["generate"] = o.Generate
	}
	if o.Dry != nil {
		toSerialize["dry"] = o.Dry
	}
	return json.Marshal(toSerialize)
}

type NullableAddKeyRequestAnyOf1 struct {
	value *AddKeyRequestAnyOf1
	isSet bool
}

func (v NullableAddKeyRequestAnyOf1) Get() *AddKeyRequestAnyOf1 {
	return v.value
}

func (v *NullableAddKeyRequestAnyOf1) Set(val *AddKeyRequestAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableAddKeyRequestAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableAddKeyRequestAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddKeyRequestAnyOf1(val *AddKeyRequestAnyOf1) *NullableAddKeyRequestAnyOf1 {
	return &NullableAddKeyRequestAnyOf1{value: val, isSet: true}
}

func (v NullableAddKeyRequestAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddKeyRequestAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


