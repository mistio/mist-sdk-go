/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// RunScriptResponse struct for RunScriptResponse
type RunScriptResponse struct {
	JobId *string `json:"job_id,omitempty"`
}

// NewRunScriptResponse instantiates a new RunScriptResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunScriptResponse() *RunScriptResponse {
	this := RunScriptResponse{}
	return &this
}

// NewRunScriptResponseWithDefaults instantiates a new RunScriptResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunScriptResponseWithDefaults() *RunScriptResponse {
	this := RunScriptResponse{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *RunScriptResponse) GetJobId() string {
	if o == nil || o.JobId == nil {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunScriptResponse) GetJobIdOk() (*string, bool) {
	if o == nil || o.JobId == nil {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *RunScriptResponse) HasJobId() bool {
	if o != nil && o.JobId != nil {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *RunScriptResponse) SetJobId(v string) {
	o.JobId = &v
}

func (o RunScriptResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobId != nil {
		toSerialize["job_id"] = o.JobId
	}
	return json.Marshal(toSerialize)
}

type NullableRunScriptResponse struct {
	value *RunScriptResponse
	isSet bool
}

func (v NullableRunScriptResponse) Get() *RunScriptResponse {
	return v.value
}

func (v *NullableRunScriptResponse) Set(val *RunScriptResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRunScriptResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRunScriptResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunScriptResponse(val *RunScriptResponse) *NullableRunScriptResponse {
	return &NullableRunScriptResponse{value: val, isSet: true}
}

func (v NullableRunScriptResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunScriptResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


