/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// TagResourcesRequestResources struct for TagResourcesRequestResources
type TagResourcesRequestResources struct {
	ResourceId string `json:"resource_id"`
	ResourceType ResourceType `json:"resource_type"`
	Tag []TagResourcesRequestTag `json:"tag"`
}

// NewTagResourcesRequestResources instantiates a new TagResourcesRequestResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagResourcesRequestResources(resourceId string, resourceType ResourceType, tag []TagResourcesRequestTag, ) *TagResourcesRequestResources {
	this := TagResourcesRequestResources{}
	this.ResourceId = resourceId
	this.ResourceType = resourceType
	this.Tag = tag
	return &this
}

// NewTagResourcesRequestResourcesWithDefaults instantiates a new TagResourcesRequestResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagResourcesRequestResourcesWithDefaults() *TagResourcesRequestResources {
	this := TagResourcesRequestResources{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *TagResourcesRequestResources) GetResourceId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *TagResourcesRequestResources) GetResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *TagResourcesRequestResources) SetResourceId(v string) {
	o.ResourceId = v
}

// GetResourceType returns the ResourceType field value
func (o *TagResourcesRequestResources) GetResourceType() ResourceType {
	if o == nil  {
		var ret ResourceType
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *TagResourcesRequestResources) GetResourceTypeOk() (*ResourceType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *TagResourcesRequestResources) SetResourceType(v ResourceType) {
	o.ResourceType = v
}

// GetTag returns the Tag field value
func (o *TagResourcesRequestResources) GetTag() []TagResourcesRequestTag {
	if o == nil  {
		var ret []TagResourcesRequestTag
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *TagResourcesRequestResources) GetTagOk() (*[]TagResourcesRequestTag, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *TagResourcesRequestResources) SetTag(v []TagResourcesRequestTag) {
	o.Tag = v
}

func (o TagResourcesRequestResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resource_id"] = o.ResourceId
	}
	if true {
		toSerialize["resource_type"] = o.ResourceType
	}
	if true {
		toSerialize["tag"] = o.Tag
	}
	return json.Marshal(toSerialize)
}

type NullableTagResourcesRequestResources struct {
	value *TagResourcesRequestResources
	isSet bool
}

func (v NullableTagResourcesRequestResources) Get() *TagResourcesRequestResources {
	return v.value
}

func (v *NullableTagResourcesRequestResources) Set(val *TagResourcesRequestResources) {
	v.value = val
	v.isSet = true
}

func (v NullableTagResourcesRequestResources) IsSet() bool {
	return v.isSet
}

func (v *NullableTagResourcesRequestResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagResourcesRequestResources(val *TagResourcesRequestResources) *NullableTagResourcesRequestResources {
	return &NullableTagResourcesRequestResources{value: val, isSet: true}
}

func (v NullableTagResourcesRequestResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagResourcesRequestResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


