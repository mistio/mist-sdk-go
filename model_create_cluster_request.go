/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// CreateClusterRequest struct for CreateClusterRequest
type CreateClusterRequest struct {
	// The name of the cluster to create
	Name string `json:"name"`
	// The cloud the cluster belongs to
	Cloud *string `json:"cloud,omitempty"`
	Provider *ClusterProviders `json:"provider,omitempty"`
	// Google specific parameter(Required).Name or ID of the location to create the cluster in
	Location *string `json:"location,omitempty"`
	Nodepools *[]CreateClusterRequestAllOfNodepools `json:"nodepools,omitempty"`
}

// NewCreateClusterRequest instantiates a new CreateClusterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterRequest(name string, ) *CreateClusterRequest {
	this := CreateClusterRequest{}
	this.Name = name
	return &this
}

// NewCreateClusterRequestWithDefaults instantiates a new CreateClusterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterRequestWithDefaults() *CreateClusterRequest {
	this := CreateClusterRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateClusterRequest) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateClusterRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateClusterRequest) SetName(v string) {
	o.Name = v
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *CreateClusterRequest) GetCloud() string {
	if o == nil || o.Cloud == nil {
		var ret string
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequest) GetCloudOk() (*string, bool) {
	if o == nil || o.Cloud == nil {
		return nil, false
	}
	return o.Cloud, true
}

// HasCloud returns a boolean if a field has been set.
func (o *CreateClusterRequest) HasCloud() bool {
	if o != nil && o.Cloud != nil {
		return true
	}

	return false
}

// SetCloud gets a reference to the given string and assigns it to the Cloud field.
func (o *CreateClusterRequest) SetCloud(v string) {
	o.Cloud = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *CreateClusterRequest) GetProvider() ClusterProviders {
	if o == nil || o.Provider == nil {
		var ret ClusterProviders
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequest) GetProviderOk() (*ClusterProviders, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *CreateClusterRequest) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given ClusterProviders and assigns it to the Provider field.
func (o *CreateClusterRequest) SetProvider(v ClusterProviders) {
	o.Provider = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *CreateClusterRequest) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequest) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *CreateClusterRequest) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *CreateClusterRequest) SetLocation(v string) {
	o.Location = &v
}

// GetNodepools returns the Nodepools field value if set, zero value otherwise.
func (o *CreateClusterRequest) GetNodepools() []CreateClusterRequestAllOfNodepools {
	if o == nil || o.Nodepools == nil {
		var ret []CreateClusterRequestAllOfNodepools
		return ret
	}
	return *o.Nodepools
}

// GetNodepoolsOk returns a tuple with the Nodepools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterRequest) GetNodepoolsOk() (*[]CreateClusterRequestAllOfNodepools, bool) {
	if o == nil || o.Nodepools == nil {
		return nil, false
	}
	return o.Nodepools, true
}

// HasNodepools returns a boolean if a field has been set.
func (o *CreateClusterRequest) HasNodepools() bool {
	if o != nil && o.Nodepools != nil {
		return true
	}

	return false
}

// SetNodepools gets a reference to the given []CreateClusterRequestAllOfNodepools and assigns it to the Nodepools field.
func (o *CreateClusterRequest) SetNodepools(v []CreateClusterRequestAllOfNodepools) {
	o.Nodepools = &v
}

func (o CreateClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Cloud != nil {
		toSerialize["cloud"] = o.Cloud
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Nodepools != nil {
		toSerialize["nodepools"] = o.Nodepools
	}
	return json.Marshal(toSerialize)
}

type NullableCreateClusterRequest struct {
	value *CreateClusterRequest
	isSet bool
}

func (v NullableCreateClusterRequest) Get() *CreateClusterRequest {
	return v.value
}

func (v *NullableCreateClusterRequest) Set(val *CreateClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClusterRequest(val *CreateClusterRequest) *NullableCreateClusterRequest {
	return &NullableCreateClusterRequest{value: val, isSet: true}
}

func (v NullableCreateClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


