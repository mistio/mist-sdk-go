/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// OrgResourcesCount struct for OrgResourcesCount
type OrgResourcesCount struct {
	CloudsCount *int32 `json:"clouds_count,omitempty"`
	ClustersCount *int32 `json:"clusters_count,omitempty"`
	MachinesCount *int32 `json:"machines_count,omitempty"`
	VolumesCount *int32 `json:"volumes_count,omitempty"`
	BucketsCount *int32 `json:"buckets_count,omitempty"`
	NetworksCount *int32 `json:"networks_count,omitempty"`
	ZonesCount *int32 `json:"zones_count,omitempty"`
	KeysCount *int32 `json:"keys_count,omitempty"`
	ImagesCount *int32 `json:"images_count,omitempty"`
	TemplatesCount *int32 `json:"templates_count,omitempty"`
	TunnelsCount *int32 `json:"tunnels_count,omitempty"`
	SchedulesCount *int32 `json:"schedules_count,omitempty"`
	RulesCount *int32 `json:"rules_count,omitempty"`
	TeamsCount *int32 `json:"teams_count,omitempty"`
}

// NewOrgResourcesCount instantiates a new OrgResourcesCount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgResourcesCount() *OrgResourcesCount {
	this := OrgResourcesCount{}
	return &this
}

// NewOrgResourcesCountWithDefaults instantiates a new OrgResourcesCount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgResourcesCountWithDefaults() *OrgResourcesCount {
	this := OrgResourcesCount{}
	return &this
}

// GetCloudsCount returns the CloudsCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetCloudsCount() int32 {
	if o == nil || o.CloudsCount == nil {
		var ret int32
		return ret
	}
	return *o.CloudsCount
}

// GetCloudsCountOk returns a tuple with the CloudsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetCloudsCountOk() (*int32, bool) {
	if o == nil || o.CloudsCount == nil {
		return nil, false
	}
	return o.CloudsCount, true
}

// HasCloudsCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasCloudsCount() bool {
	if o != nil && o.CloudsCount != nil {
		return true
	}

	return false
}

// SetCloudsCount gets a reference to the given int32 and assigns it to the CloudsCount field.
func (o *OrgResourcesCount) SetCloudsCount(v int32) {
	o.CloudsCount = &v
}

// GetClustersCount returns the ClustersCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetClustersCount() int32 {
	if o == nil || o.ClustersCount == nil {
		var ret int32
		return ret
	}
	return *o.ClustersCount
}

// GetClustersCountOk returns a tuple with the ClustersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetClustersCountOk() (*int32, bool) {
	if o == nil || o.ClustersCount == nil {
		return nil, false
	}
	return o.ClustersCount, true
}

// HasClustersCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasClustersCount() bool {
	if o != nil && o.ClustersCount != nil {
		return true
	}

	return false
}

// SetClustersCount gets a reference to the given int32 and assigns it to the ClustersCount field.
func (o *OrgResourcesCount) SetClustersCount(v int32) {
	o.ClustersCount = &v
}

// GetMachinesCount returns the MachinesCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetMachinesCount() int32 {
	if o == nil || o.MachinesCount == nil {
		var ret int32
		return ret
	}
	return *o.MachinesCount
}

// GetMachinesCountOk returns a tuple with the MachinesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetMachinesCountOk() (*int32, bool) {
	if o == nil || o.MachinesCount == nil {
		return nil, false
	}
	return o.MachinesCount, true
}

// HasMachinesCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasMachinesCount() bool {
	if o != nil && o.MachinesCount != nil {
		return true
	}

	return false
}

// SetMachinesCount gets a reference to the given int32 and assigns it to the MachinesCount field.
func (o *OrgResourcesCount) SetMachinesCount(v int32) {
	o.MachinesCount = &v
}

// GetVolumesCount returns the VolumesCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetVolumesCount() int32 {
	if o == nil || o.VolumesCount == nil {
		var ret int32
		return ret
	}
	return *o.VolumesCount
}

// GetVolumesCountOk returns a tuple with the VolumesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetVolumesCountOk() (*int32, bool) {
	if o == nil || o.VolumesCount == nil {
		return nil, false
	}
	return o.VolumesCount, true
}

// HasVolumesCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasVolumesCount() bool {
	if o != nil && o.VolumesCount != nil {
		return true
	}

	return false
}

// SetVolumesCount gets a reference to the given int32 and assigns it to the VolumesCount field.
func (o *OrgResourcesCount) SetVolumesCount(v int32) {
	o.VolumesCount = &v
}

// GetBucketsCount returns the BucketsCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetBucketsCount() int32 {
	if o == nil || o.BucketsCount == nil {
		var ret int32
		return ret
	}
	return *o.BucketsCount
}

// GetBucketsCountOk returns a tuple with the BucketsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetBucketsCountOk() (*int32, bool) {
	if o == nil || o.BucketsCount == nil {
		return nil, false
	}
	return o.BucketsCount, true
}

// HasBucketsCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasBucketsCount() bool {
	if o != nil && o.BucketsCount != nil {
		return true
	}

	return false
}

// SetBucketsCount gets a reference to the given int32 and assigns it to the BucketsCount field.
func (o *OrgResourcesCount) SetBucketsCount(v int32) {
	o.BucketsCount = &v
}

// GetNetworksCount returns the NetworksCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetNetworksCount() int32 {
	if o == nil || o.NetworksCount == nil {
		var ret int32
		return ret
	}
	return *o.NetworksCount
}

// GetNetworksCountOk returns a tuple with the NetworksCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetNetworksCountOk() (*int32, bool) {
	if o == nil || o.NetworksCount == nil {
		return nil, false
	}
	return o.NetworksCount, true
}

// HasNetworksCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasNetworksCount() bool {
	if o != nil && o.NetworksCount != nil {
		return true
	}

	return false
}

// SetNetworksCount gets a reference to the given int32 and assigns it to the NetworksCount field.
func (o *OrgResourcesCount) SetNetworksCount(v int32) {
	o.NetworksCount = &v
}

// GetZonesCount returns the ZonesCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetZonesCount() int32 {
	if o == nil || o.ZonesCount == nil {
		var ret int32
		return ret
	}
	return *o.ZonesCount
}

// GetZonesCountOk returns a tuple with the ZonesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetZonesCountOk() (*int32, bool) {
	if o == nil || o.ZonesCount == nil {
		return nil, false
	}
	return o.ZonesCount, true
}

// HasZonesCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasZonesCount() bool {
	if o != nil && o.ZonesCount != nil {
		return true
	}

	return false
}

// SetZonesCount gets a reference to the given int32 and assigns it to the ZonesCount field.
func (o *OrgResourcesCount) SetZonesCount(v int32) {
	o.ZonesCount = &v
}

// GetKeysCount returns the KeysCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetKeysCount() int32 {
	if o == nil || o.KeysCount == nil {
		var ret int32
		return ret
	}
	return *o.KeysCount
}

// GetKeysCountOk returns a tuple with the KeysCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetKeysCountOk() (*int32, bool) {
	if o == nil || o.KeysCount == nil {
		return nil, false
	}
	return o.KeysCount, true
}

// HasKeysCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasKeysCount() bool {
	if o != nil && o.KeysCount != nil {
		return true
	}

	return false
}

// SetKeysCount gets a reference to the given int32 and assigns it to the KeysCount field.
func (o *OrgResourcesCount) SetKeysCount(v int32) {
	o.KeysCount = &v
}

// GetImagesCount returns the ImagesCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetImagesCount() int32 {
	if o == nil || o.ImagesCount == nil {
		var ret int32
		return ret
	}
	return *o.ImagesCount
}

// GetImagesCountOk returns a tuple with the ImagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetImagesCountOk() (*int32, bool) {
	if o == nil || o.ImagesCount == nil {
		return nil, false
	}
	return o.ImagesCount, true
}

// HasImagesCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasImagesCount() bool {
	if o != nil && o.ImagesCount != nil {
		return true
	}

	return false
}

// SetImagesCount gets a reference to the given int32 and assigns it to the ImagesCount field.
func (o *OrgResourcesCount) SetImagesCount(v int32) {
	o.ImagesCount = &v
}

// GetTemplatesCount returns the TemplatesCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetTemplatesCount() int32 {
	if o == nil || o.TemplatesCount == nil {
		var ret int32
		return ret
	}
	return *o.TemplatesCount
}

// GetTemplatesCountOk returns a tuple with the TemplatesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetTemplatesCountOk() (*int32, bool) {
	if o == nil || o.TemplatesCount == nil {
		return nil, false
	}
	return o.TemplatesCount, true
}

// HasTemplatesCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasTemplatesCount() bool {
	if o != nil && o.TemplatesCount != nil {
		return true
	}

	return false
}

// SetTemplatesCount gets a reference to the given int32 and assigns it to the TemplatesCount field.
func (o *OrgResourcesCount) SetTemplatesCount(v int32) {
	o.TemplatesCount = &v
}

// GetTunnelsCount returns the TunnelsCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetTunnelsCount() int32 {
	if o == nil || o.TunnelsCount == nil {
		var ret int32
		return ret
	}
	return *o.TunnelsCount
}

// GetTunnelsCountOk returns a tuple with the TunnelsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetTunnelsCountOk() (*int32, bool) {
	if o == nil || o.TunnelsCount == nil {
		return nil, false
	}
	return o.TunnelsCount, true
}

// HasTunnelsCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasTunnelsCount() bool {
	if o != nil && o.TunnelsCount != nil {
		return true
	}

	return false
}

// SetTunnelsCount gets a reference to the given int32 and assigns it to the TunnelsCount field.
func (o *OrgResourcesCount) SetTunnelsCount(v int32) {
	o.TunnelsCount = &v
}

// GetSchedulesCount returns the SchedulesCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetSchedulesCount() int32 {
	if o == nil || o.SchedulesCount == nil {
		var ret int32
		return ret
	}
	return *o.SchedulesCount
}

// GetSchedulesCountOk returns a tuple with the SchedulesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetSchedulesCountOk() (*int32, bool) {
	if o == nil || o.SchedulesCount == nil {
		return nil, false
	}
	return o.SchedulesCount, true
}

// HasSchedulesCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasSchedulesCount() bool {
	if o != nil && o.SchedulesCount != nil {
		return true
	}

	return false
}

// SetSchedulesCount gets a reference to the given int32 and assigns it to the SchedulesCount field.
func (o *OrgResourcesCount) SetSchedulesCount(v int32) {
	o.SchedulesCount = &v
}

// GetRulesCount returns the RulesCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetRulesCount() int32 {
	if o == nil || o.RulesCount == nil {
		var ret int32
		return ret
	}
	return *o.RulesCount
}

// GetRulesCountOk returns a tuple with the RulesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetRulesCountOk() (*int32, bool) {
	if o == nil || o.RulesCount == nil {
		return nil, false
	}
	return o.RulesCount, true
}

// HasRulesCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasRulesCount() bool {
	if o != nil && o.RulesCount != nil {
		return true
	}

	return false
}

// SetRulesCount gets a reference to the given int32 and assigns it to the RulesCount field.
func (o *OrgResourcesCount) SetRulesCount(v int32) {
	o.RulesCount = &v
}

// GetTeamsCount returns the TeamsCount field value if set, zero value otherwise.
func (o *OrgResourcesCount) GetTeamsCount() int32 {
	if o == nil || o.TeamsCount == nil {
		var ret int32
		return ret
	}
	return *o.TeamsCount
}

// GetTeamsCountOk returns a tuple with the TeamsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgResourcesCount) GetTeamsCountOk() (*int32, bool) {
	if o == nil || o.TeamsCount == nil {
		return nil, false
	}
	return o.TeamsCount, true
}

// HasTeamsCount returns a boolean if a field has been set.
func (o *OrgResourcesCount) HasTeamsCount() bool {
	if o != nil && o.TeamsCount != nil {
		return true
	}

	return false
}

// SetTeamsCount gets a reference to the given int32 and assigns it to the TeamsCount field.
func (o *OrgResourcesCount) SetTeamsCount(v int32) {
	o.TeamsCount = &v
}

func (o OrgResourcesCount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudsCount != nil {
		toSerialize["clouds_count"] = o.CloudsCount
	}
	if o.ClustersCount != nil {
		toSerialize["clusters_count"] = o.ClustersCount
	}
	if o.MachinesCount != nil {
		toSerialize["machines_count"] = o.MachinesCount
	}
	if o.VolumesCount != nil {
		toSerialize["volumes_count"] = o.VolumesCount
	}
	if o.BucketsCount != nil {
		toSerialize["buckets_count"] = o.BucketsCount
	}
	if o.NetworksCount != nil {
		toSerialize["networks_count"] = o.NetworksCount
	}
	if o.ZonesCount != nil {
		toSerialize["zones_count"] = o.ZonesCount
	}
	if o.KeysCount != nil {
		toSerialize["keys_count"] = o.KeysCount
	}
	if o.ImagesCount != nil {
		toSerialize["images_count"] = o.ImagesCount
	}
	if o.TemplatesCount != nil {
		toSerialize["templates_count"] = o.TemplatesCount
	}
	if o.TunnelsCount != nil {
		toSerialize["tunnels_count"] = o.TunnelsCount
	}
	if o.SchedulesCount != nil {
		toSerialize["schedules_count"] = o.SchedulesCount
	}
	if o.RulesCount != nil {
		toSerialize["rules_count"] = o.RulesCount
	}
	if o.TeamsCount != nil {
		toSerialize["teams_count"] = o.TeamsCount
	}
	return json.Marshal(toSerialize)
}

type NullableOrgResourcesCount struct {
	value *OrgResourcesCount
	isSet bool
}

func (v NullableOrgResourcesCount) Get() *OrgResourcesCount {
	return v.value
}

func (v *NullableOrgResourcesCount) Set(val *OrgResourcesCount) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgResourcesCount) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgResourcesCount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgResourcesCount(val *OrgResourcesCount) *NullableOrgResourcesCount {
	return &NullableOrgResourcesCount{value: val, isSet: true}
}

func (v NullableOrgResourcesCount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgResourcesCount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


