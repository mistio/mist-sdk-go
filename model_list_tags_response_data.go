/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// ListTagsResponseData struct for ListTagsResponseData
type ListTagsResponseData struct {
	Tag *Tag `json:"tag,omitempty"`
	Resources *map[string][]string `json:"resources,omitempty"`
}

// NewListTagsResponseData instantiates a new ListTagsResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTagsResponseData() *ListTagsResponseData {
	this := ListTagsResponseData{}
	return &this
}

// NewListTagsResponseDataWithDefaults instantiates a new ListTagsResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTagsResponseDataWithDefaults() *ListTagsResponseData {
	this := ListTagsResponseData{}
	return &this
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *ListTagsResponseData) GetTag() Tag {
	if o == nil || o.Tag == nil {
		var ret Tag
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTagsResponseData) GetTagOk() (*Tag, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ListTagsResponseData) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given Tag and assigns it to the Tag field.
func (o *ListTagsResponseData) SetTag(v Tag) {
	o.Tag = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ListTagsResponseData) GetResources() map[string][]string {
	if o == nil || o.Resources == nil {
		var ret map[string][]string
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTagsResponseData) GetResourcesOk() (*map[string][]string, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ListTagsResponseData) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given map[string][]string and assigns it to the Resources field.
func (o *ListTagsResponseData) SetResources(v map[string][]string) {
	o.Resources = &v
}

func (o ListTagsResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableListTagsResponseData struct {
	value *ListTagsResponseData
	isSet bool
}

func (v NullableListTagsResponseData) Get() *ListTagsResponseData {
	return v.value
}

func (v *NullableListTagsResponseData) Set(val *ListTagsResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableListTagsResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableListTagsResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTagsResponseData(val *ListTagsResponseData) *NullableListTagsResponseData {
	return &NullableListTagsResponseData{value: val, isSet: true}
}

func (v NullableListTagsResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTagsResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


