/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// CreateSubnetRequestAllOf struct for CreateSubnetRequestAllOf
type CreateSubnetRequestAllOf struct {
	// Specify subnet name
	Name string `json:"name"`
	// Specify cloud to provision on
	Cloud string `json:"cloud"`
	// Assign tags to provisioned network
	Tags *map[string]interface{} `json:"tags,omitempty"`
	Cidr string `json:"cidr"`
	Provider SupportedSubnetProviders `json:"provider"`
}

// NewCreateSubnetRequestAllOf instantiates a new CreateSubnetRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubnetRequestAllOf(name string, cloud string, cidr string, provider SupportedSubnetProviders, ) *CreateSubnetRequestAllOf {
	this := CreateSubnetRequestAllOf{}
	this.Name = name
	this.Cloud = cloud
	this.Cidr = cidr
	this.Provider = provider
	return &this
}

// NewCreateSubnetRequestAllOfWithDefaults instantiates a new CreateSubnetRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubnetRequestAllOfWithDefaults() *CreateSubnetRequestAllOf {
	this := CreateSubnetRequestAllOf{}
	return &this
}

// GetName returns the Name field value
func (o *CreateSubnetRequestAllOf) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequestAllOf) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateSubnetRequestAllOf) SetName(v string) {
	o.Name = v
}

// GetCloud returns the Cloud field value
func (o *CreateSubnetRequestAllOf) GetCloud() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequestAllOf) GetCloudOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *CreateSubnetRequestAllOf) SetCloud(v string) {
	o.Cloud = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateSubnetRequestAllOf) GetTags() map[string]interface{} {
	if o == nil || o.Tags == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequestAllOf) GetTagsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateSubnetRequestAllOf) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]interface{} and assigns it to the Tags field.
func (o *CreateSubnetRequestAllOf) SetTags(v map[string]interface{}) {
	o.Tags = &v
}

// GetCidr returns the Cidr field value
func (o *CreateSubnetRequestAllOf) GetCidr() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequestAllOf) GetCidrOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *CreateSubnetRequestAllOf) SetCidr(v string) {
	o.Cidr = v
}

// GetProvider returns the Provider field value
func (o *CreateSubnetRequestAllOf) GetProvider() SupportedSubnetProviders {
	if o == nil  {
		var ret SupportedSubnetProviders
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *CreateSubnetRequestAllOf) GetProviderOk() (*SupportedSubnetProviders, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *CreateSubnetRequestAllOf) SetProvider(v SupportedSubnetProviders) {
	o.Provider = v
}

func (o CreateSubnetRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["cloud"] = o.Cloud
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["cidr"] = o.Cidr
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSubnetRequestAllOf struct {
	value *CreateSubnetRequestAllOf
	isSet bool
}

func (v NullableCreateSubnetRequestAllOf) Get() *CreateSubnetRequestAllOf {
	return v.value
}

func (v *NullableCreateSubnetRequestAllOf) Set(val *CreateSubnetRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubnetRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubnetRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubnetRequestAllOf(val *CreateSubnetRequestAllOf) *NullableCreateSubnetRequestAllOf {
	return &NullableCreateSubnetRequestAllOf{value: val, isSet: true}
}

func (v NullableCreateSubnetRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubnetRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


