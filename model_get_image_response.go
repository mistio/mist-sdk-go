/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// GetImageResponse struct for GetImageResponse
type GetImageResponse struct {
	Data *Image `json:"data,omitempty"`
	Meta *ResponseMetadata `json:"meta,omitempty"`
}

// NewGetImageResponse instantiates a new GetImageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetImageResponse() *GetImageResponse {
	this := GetImageResponse{}
	return &this
}

// NewGetImageResponseWithDefaults instantiates a new GetImageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetImageResponseWithDefaults() *GetImageResponse {
	this := GetImageResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetImageResponse) GetData() Image {
	if o == nil || o.Data == nil {
		var ret Image
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImageResponse) GetDataOk() (*Image, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetImageResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given Image and assigns it to the Data field.
func (o *GetImageResponse) SetData(v Image) {
	o.Data = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GetImageResponse) GetMeta() ResponseMetadata {
	if o == nil || o.Meta == nil {
		var ret ResponseMetadata
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImageResponse) GetMetaOk() (*ResponseMetadata, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *GetImageResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ResponseMetadata and assigns it to the Meta field.
func (o *GetImageResponse) SetMeta(v ResponseMetadata) {
	o.Meta = &v
}

func (o GetImageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableGetImageResponse struct {
	value *GetImageResponse
	isSet bool
}

func (v NullableGetImageResponse) Get() *GetImageResponse {
	return v.value
}

func (v *NullableGetImageResponse) Set(val *GetImageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetImageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetImageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetImageResponse(val *GetImageResponse) *NullableGetImageResponse {
	return &NullableGetImageResponse{value: val, isSet: true}
}

func (v NullableGetImageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetImageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


