/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// AmazonSubnetRequest struct for AmazonSubnetRequest
type AmazonSubnetRequest struct {
	Provider string `json:"provider"`
	AvailabilityZone string `json:"availability_zone"`
}

// NewAmazonSubnetRequest instantiates a new AmazonSubnetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmazonSubnetRequest(provider string, availabilityZone string, ) *AmazonSubnetRequest {
	this := AmazonSubnetRequest{}
	this.Provider = provider
	this.AvailabilityZone = availabilityZone
	return &this
}

// NewAmazonSubnetRequestWithDefaults instantiates a new AmazonSubnetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmazonSubnetRequestWithDefaults() *AmazonSubnetRequest {
	this := AmazonSubnetRequest{}
	return &this
}

// GetProvider returns the Provider field value
func (o *AmazonSubnetRequest) GetProvider() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *AmazonSubnetRequest) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *AmazonSubnetRequest) SetProvider(v string) {
	o.Provider = v
}

// GetAvailabilityZone returns the AvailabilityZone field value
func (o *AmazonSubnetRequest) GetAvailabilityZone() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
func (o *AmazonSubnetRequest) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *AmazonSubnetRequest) SetAvailabilityZone(v string) {
	o.AvailabilityZone = v
}

func (o AmazonSubnetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["availability_zone"] = o.AvailabilityZone
	}
	return json.Marshal(toSerialize)
}

type NullableAmazonSubnetRequest struct {
	value *AmazonSubnetRequest
	isSet bool
}

func (v NullableAmazonSubnetRequest) Get() *AmazonSubnetRequest {
	return v.value
}

func (v *NullableAmazonSubnetRequest) Set(val *AmazonSubnetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAmazonSubnetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAmazonSubnetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmazonSubnetRequest(val *AmazonSubnetRequest) *NullableAmazonSubnetRequest {
	return &NullableAmazonSubnetRequest{value: val, isSet: true}
}

func (v NullableAmazonSubnetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmazonSubnetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


