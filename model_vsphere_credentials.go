/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// VsphereCredentials struct for VsphereCredentials
type VsphereCredentials struct {
	// Your vSphere/vCenter host
	Host string `json:"host"`
	// Your username
	Username string `json:"username"`
	// Your password
	Password string `json:"password"`
	// CA certificate
	CaCertFile *string `json:"ca_cert_file,omitempty"`
}

// NewVsphereCredentials instantiates a new VsphereCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVsphereCredentials(host string, username string, password string, ) *VsphereCredentials {
	this := VsphereCredentials{}
	this.Host = host
	this.Username = username
	this.Password = password
	return &this
}

// NewVsphereCredentialsWithDefaults instantiates a new VsphereCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVsphereCredentialsWithDefaults() *VsphereCredentials {
	this := VsphereCredentials{}
	return &this
}

// GetHost returns the Host field value
func (o *VsphereCredentials) GetHost() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *VsphereCredentials) GetHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *VsphereCredentials) SetHost(v string) {
	o.Host = v
}

// GetUsername returns the Username field value
func (o *VsphereCredentials) GetUsername() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *VsphereCredentials) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *VsphereCredentials) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *VsphereCredentials) GetPassword() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *VsphereCredentials) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *VsphereCredentials) SetPassword(v string) {
	o.Password = v
}

// GetCaCertFile returns the CaCertFile field value if set, zero value otherwise.
func (o *VsphereCredentials) GetCaCertFile() string {
	if o == nil || o.CaCertFile == nil {
		var ret string
		return ret
	}
	return *o.CaCertFile
}

// GetCaCertFileOk returns a tuple with the CaCertFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereCredentials) GetCaCertFileOk() (*string, bool) {
	if o == nil || o.CaCertFile == nil {
		return nil, false
	}
	return o.CaCertFile, true
}

// HasCaCertFile returns a boolean if a field has been set.
func (o *VsphereCredentials) HasCaCertFile() bool {
	if o != nil && o.CaCertFile != nil {
		return true
	}

	return false
}

// SetCaCertFile gets a reference to the given string and assigns it to the CaCertFile field.
func (o *VsphereCredentials) SetCaCertFile(v string) {
	o.CaCertFile = &v
}

func (o VsphereCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["host"] = o.Host
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if o.CaCertFile != nil {
		toSerialize["ca_cert_file"] = o.CaCertFile
	}
	return json.Marshal(toSerialize)
}

type NullableVsphereCredentials struct {
	value *VsphereCredentials
	isSet bool
}

func (v NullableVsphereCredentials) Get() *VsphereCredentials {
	return v.value
}

func (v *NullableVsphereCredentials) Set(val *VsphereCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableVsphereCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableVsphereCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVsphereCredentials(val *VsphereCredentials) *NullableVsphereCredentials {
	return &NullableVsphereCredentials{value: val, isSet: true}
}

func (v NullableVsphereCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVsphereCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


