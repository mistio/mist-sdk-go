/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// AddScheduleRequestReminderWhen struct for AddScheduleRequestReminderWhen
type AddScheduleRequestReminderWhen struct {
	Value *int32 `json:"value,omitempty"`
	Unit *string `json:"unit,omitempty"`
}

// NewAddScheduleRequestReminderWhen instantiates a new AddScheduleRequestReminderWhen object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddScheduleRequestReminderWhen() *AddScheduleRequestReminderWhen {
	this := AddScheduleRequestReminderWhen{}
	return &this
}

// NewAddScheduleRequestReminderWhenWithDefaults instantiates a new AddScheduleRequestReminderWhen object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddScheduleRequestReminderWhenWithDefaults() *AddScheduleRequestReminderWhen {
	this := AddScheduleRequestReminderWhen{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AddScheduleRequestReminderWhen) GetValue() int32 {
	if o == nil || o.Value == nil {
		var ret int32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddScheduleRequestReminderWhen) GetValueOk() (*int32, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AddScheduleRequestReminderWhen) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given int32 and assigns it to the Value field.
func (o *AddScheduleRequestReminderWhen) SetValue(v int32) {
	o.Value = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *AddScheduleRequestReminderWhen) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddScheduleRequestReminderWhen) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *AddScheduleRequestReminderWhen) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *AddScheduleRequestReminderWhen) SetUnit(v string) {
	o.Unit = &v
}

func (o AddScheduleRequestReminderWhen) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableAddScheduleRequestReminderWhen struct {
	value *AddScheduleRequestReminderWhen
	isSet bool
}

func (v NullableAddScheduleRequestReminderWhen) Get() *AddScheduleRequestReminderWhen {
	return v.value
}

func (v *NullableAddScheduleRequestReminderWhen) Set(val *AddScheduleRequestReminderWhen) {
	v.value = val
	v.isSet = true
}

func (v NullableAddScheduleRequestReminderWhen) IsSet() bool {
	return v.isSet
}

func (v *NullableAddScheduleRequestReminderWhen) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddScheduleRequestReminderWhen(val *AddScheduleRequestReminderWhen) *NullableAddScheduleRequestReminderWhen {
	return &NullableAddScheduleRequestReminderWhen{value: val, isSet: true}
}

func (v NullableAddScheduleRequestReminderWhen) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddScheduleRequestReminderWhen) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


