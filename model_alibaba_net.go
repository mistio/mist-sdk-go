/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// AlibabaNet struct for AlibabaNet
type AlibabaNet struct {
	// Name or ID of an existing network to associate the machine with. If not provided, one existing network will be selected.
	Network *string `json:"network,omitempty"`
	// Name or ID of an existing or new subnet(switch) to launch the machine into. If not provided a default 'mistio' subnet will be created.
	Subnet *string `json:"subnet,omitempty"`
	// Name of the security group to assign to the machine. If not provided a default 'mistio' security group will be created.
	SecurityGroup *string `json:"security_group,omitempty"`
}

// NewAlibabaNet instantiates a new AlibabaNet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlibabaNet() *AlibabaNet {
	this := AlibabaNet{}
	return &this
}

// NewAlibabaNetWithDefaults instantiates a new AlibabaNet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlibabaNetWithDefaults() *AlibabaNet {
	this := AlibabaNet{}
	return &this
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *AlibabaNet) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlibabaNet) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *AlibabaNet) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *AlibabaNet) SetNetwork(v string) {
	o.Network = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *AlibabaNet) GetSubnet() string {
	if o == nil || o.Subnet == nil {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlibabaNet) GetSubnetOk() (*string, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *AlibabaNet) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *AlibabaNet) SetSubnet(v string) {
	o.Subnet = &v
}

// GetSecurityGroup returns the SecurityGroup field value if set, zero value otherwise.
func (o *AlibabaNet) GetSecurityGroup() string {
	if o == nil || o.SecurityGroup == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroup
}

// GetSecurityGroupOk returns a tuple with the SecurityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlibabaNet) GetSecurityGroupOk() (*string, bool) {
	if o == nil || o.SecurityGroup == nil {
		return nil, false
	}
	return o.SecurityGroup, true
}

// HasSecurityGroup returns a boolean if a field has been set.
func (o *AlibabaNet) HasSecurityGroup() bool {
	if o != nil && o.SecurityGroup != nil {
		return true
	}

	return false
}

// SetSecurityGroup gets a reference to the given string and assigns it to the SecurityGroup field.
func (o *AlibabaNet) SetSecurityGroup(v string) {
	o.SecurityGroup = &v
}

func (o AlibabaNet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.Subnet != nil {
		toSerialize["subnet"] = o.Subnet
	}
	if o.SecurityGroup != nil {
		toSerialize["security_group"] = o.SecurityGroup
	}
	return json.Marshal(toSerialize)
}

type NullableAlibabaNet struct {
	value *AlibabaNet
	isSet bool
}

func (v NullableAlibabaNet) Get() *AlibabaNet {
	return v.value
}

func (v *NullableAlibabaNet) Set(val *AlibabaNet) {
	v.value = val
	v.isSet = true
}

func (v NullableAlibabaNet) IsSet() bool {
	return v.isSet
}

func (v *NullableAlibabaNet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlibabaNet(val *AlibabaNet) *NullableAlibabaNet {
	return &NullableAlibabaNet{value: val, isSet: true}
}

func (v NullableAlibabaNet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlibabaNet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


