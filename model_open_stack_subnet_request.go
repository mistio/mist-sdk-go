/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// OpenStackSubnetRequest struct for OpenStackSubnetRequest
type OpenStackSubnetRequest struct {
	Provider string `json:"provider"`
	GatewayIp *string `json:"gateway_ip,omitempty"`
	IpVersion *string `json:"ip_version,omitempty"`
	EnableDhcp *bool `json:"enable_dhcp,omitempty"`
	AllocationPools *map[string]interface{} `json:"allocation_pools,omitempty"`
}

// NewOpenStackSubnetRequest instantiates a new OpenStackSubnetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenStackSubnetRequest(provider string, ) *OpenStackSubnetRequest {
	this := OpenStackSubnetRequest{}
	this.Provider = provider
	return &this
}

// NewOpenStackSubnetRequestWithDefaults instantiates a new OpenStackSubnetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenStackSubnetRequestWithDefaults() *OpenStackSubnetRequest {
	this := OpenStackSubnetRequest{}
	return &this
}

// GetProvider returns the Provider field value
func (o *OpenStackSubnetRequest) GetProvider() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *OpenStackSubnetRequest) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *OpenStackSubnetRequest) SetProvider(v string) {
	o.Provider = v
}

// GetGatewayIp returns the GatewayIp field value if set, zero value otherwise.
func (o *OpenStackSubnetRequest) GetGatewayIp() string {
	if o == nil || o.GatewayIp == nil {
		var ret string
		return ret
	}
	return *o.GatewayIp
}

// GetGatewayIpOk returns a tuple with the GatewayIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackSubnetRequest) GetGatewayIpOk() (*string, bool) {
	if o == nil || o.GatewayIp == nil {
		return nil, false
	}
	return o.GatewayIp, true
}

// HasGatewayIp returns a boolean if a field has been set.
func (o *OpenStackSubnetRequest) HasGatewayIp() bool {
	if o != nil && o.GatewayIp != nil {
		return true
	}

	return false
}

// SetGatewayIp gets a reference to the given string and assigns it to the GatewayIp field.
func (o *OpenStackSubnetRequest) SetGatewayIp(v string) {
	o.GatewayIp = &v
}

// GetIpVersion returns the IpVersion field value if set, zero value otherwise.
func (o *OpenStackSubnetRequest) GetIpVersion() string {
	if o == nil || o.IpVersion == nil {
		var ret string
		return ret
	}
	return *o.IpVersion
}

// GetIpVersionOk returns a tuple with the IpVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackSubnetRequest) GetIpVersionOk() (*string, bool) {
	if o == nil || o.IpVersion == nil {
		return nil, false
	}
	return o.IpVersion, true
}

// HasIpVersion returns a boolean if a field has been set.
func (o *OpenStackSubnetRequest) HasIpVersion() bool {
	if o != nil && o.IpVersion != nil {
		return true
	}

	return false
}

// SetIpVersion gets a reference to the given string and assigns it to the IpVersion field.
func (o *OpenStackSubnetRequest) SetIpVersion(v string) {
	o.IpVersion = &v
}

// GetEnableDhcp returns the EnableDhcp field value if set, zero value otherwise.
func (o *OpenStackSubnetRequest) GetEnableDhcp() bool {
	if o == nil || o.EnableDhcp == nil {
		var ret bool
		return ret
	}
	return *o.EnableDhcp
}

// GetEnableDhcpOk returns a tuple with the EnableDhcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackSubnetRequest) GetEnableDhcpOk() (*bool, bool) {
	if o == nil || o.EnableDhcp == nil {
		return nil, false
	}
	return o.EnableDhcp, true
}

// HasEnableDhcp returns a boolean if a field has been set.
func (o *OpenStackSubnetRequest) HasEnableDhcp() bool {
	if o != nil && o.EnableDhcp != nil {
		return true
	}

	return false
}

// SetEnableDhcp gets a reference to the given bool and assigns it to the EnableDhcp field.
func (o *OpenStackSubnetRequest) SetEnableDhcp(v bool) {
	o.EnableDhcp = &v
}

// GetAllocationPools returns the AllocationPools field value if set, zero value otherwise.
func (o *OpenStackSubnetRequest) GetAllocationPools() map[string]interface{} {
	if o == nil || o.AllocationPools == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.AllocationPools
}

// GetAllocationPoolsOk returns a tuple with the AllocationPools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackSubnetRequest) GetAllocationPoolsOk() (*map[string]interface{}, bool) {
	if o == nil || o.AllocationPools == nil {
		return nil, false
	}
	return o.AllocationPools, true
}

// HasAllocationPools returns a boolean if a field has been set.
func (o *OpenStackSubnetRequest) HasAllocationPools() bool {
	if o != nil && o.AllocationPools != nil {
		return true
	}

	return false
}

// SetAllocationPools gets a reference to the given map[string]interface{} and assigns it to the AllocationPools field.
func (o *OpenStackSubnetRequest) SetAllocationPools(v map[string]interface{}) {
	o.AllocationPools = &v
}

func (o OpenStackSubnetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if o.GatewayIp != nil {
		toSerialize["gateway_ip"] = o.GatewayIp
	}
	if o.IpVersion != nil {
		toSerialize["ip_version"] = o.IpVersion
	}
	if o.EnableDhcp != nil {
		toSerialize["enable_dhcp"] = o.EnableDhcp
	}
	if o.AllocationPools != nil {
		toSerialize["allocation_pools"] = o.AllocationPools
	}
	return json.Marshal(toSerialize)
}

type NullableOpenStackSubnetRequest struct {
	value *OpenStackSubnetRequest
	isSet bool
}

func (v NullableOpenStackSubnetRequest) Get() *OpenStackSubnetRequest {
	return v.value
}

func (v *NullableOpenStackSubnetRequest) Set(val *OpenStackSubnetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenStackSubnetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenStackSubnetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenStackSubnetRequest(val *OpenStackSubnetRequest) *NullableOpenStackSubnetRequest {
	return &NullableOpenStackSubnetRequest{value: val, isSet: true}
}

func (v NullableOpenStackSubnetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenStackSubnetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


