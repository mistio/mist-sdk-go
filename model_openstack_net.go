/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// OpenstackNet struct for OpenstackNet
type OpenstackNet struct {
	// Name or Openstack UUID of the security groups to assign to the machine
	SecurityGroups *[]string `json:"security_groups,omitempty"`
	// Name or ID of the networks to launch the machine into. Required parameter when there are multiple networks defined for the tenant
	Networks *[]string `json:"networks,omitempty"`
	// Assign a floating IP to the machine, defaults to True for Openstack and False for Vexxhost
	AssociateFloatingIp *bool `json:"associate_floating_ip,omitempty"`
}

// NewOpenstackNet instantiates a new OpenstackNet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenstackNet() *OpenstackNet {
	this := OpenstackNet{}
	return &this
}

// NewOpenstackNetWithDefaults instantiates a new OpenstackNet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenstackNetWithDefaults() *OpenstackNet {
	this := OpenstackNet{}
	return &this
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *OpenstackNet) GetSecurityGroups() []string {
	if o == nil || o.SecurityGroups == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackNet) GetSecurityGroupsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *OpenstackNet) HasSecurityGroups() bool {
	if o != nil && o.SecurityGroups != nil {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *OpenstackNet) SetSecurityGroups(v []string) {
	o.SecurityGroups = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *OpenstackNet) GetNetworks() []string {
	if o == nil || o.Networks == nil {
		var ret []string
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackNet) GetNetworksOk() (*[]string, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *OpenstackNet) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []string and assigns it to the Networks field.
func (o *OpenstackNet) SetNetworks(v []string) {
	o.Networks = &v
}

// GetAssociateFloatingIp returns the AssociateFloatingIp field value if set, zero value otherwise.
func (o *OpenstackNet) GetAssociateFloatingIp() bool {
	if o == nil || o.AssociateFloatingIp == nil {
		var ret bool
		return ret
	}
	return *o.AssociateFloatingIp
}

// GetAssociateFloatingIpOk returns a tuple with the AssociateFloatingIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackNet) GetAssociateFloatingIpOk() (*bool, bool) {
	if o == nil || o.AssociateFloatingIp == nil {
		return nil, false
	}
	return o.AssociateFloatingIp, true
}

// HasAssociateFloatingIp returns a boolean if a field has been set.
func (o *OpenstackNet) HasAssociateFloatingIp() bool {
	if o != nil && o.AssociateFloatingIp != nil {
		return true
	}

	return false
}

// SetAssociateFloatingIp gets a reference to the given bool and assigns it to the AssociateFloatingIp field.
func (o *OpenstackNet) SetAssociateFloatingIp(v bool) {
	o.AssociateFloatingIp = &v
}

func (o OpenstackNet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecurityGroups != nil {
		toSerialize["security_groups"] = o.SecurityGroups
	}
	if o.Networks != nil {
		toSerialize["networks"] = o.Networks
	}
	if o.AssociateFloatingIp != nil {
		toSerialize["associate_floating_ip"] = o.AssociateFloatingIp
	}
	return json.Marshal(toSerialize)
}

type NullableOpenstackNet struct {
	value *OpenstackNet
	isSet bool
}

func (v NullableOpenstackNet) Get() *OpenstackNet {
	return v.value
}

func (v *NullableOpenstackNet) Set(val *OpenstackNet) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenstackNet) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenstackNet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenstackNet(val *OpenstackNet) *NullableOpenstackNet {
	return &NullableOpenstackNet{value: val, isSet: true}
}

func (v NullableOpenstackNet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenstackNet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


