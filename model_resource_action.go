/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// ResourceAction struct for ResourceAction
type ResourceAction struct {
	Type string `json:"type"`
	// the type of the action to be executed 
	Action string `json:"action"`
}

// NewResourceAction instantiates a new ResourceAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceAction(type_ string, action string) *ResourceAction {
	this := ResourceAction{}
	this.Type = type_
	this.Action = action
	return &this
}

// NewResourceActionWithDefaults instantiates a new ResourceAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceActionWithDefaults() *ResourceAction {
	this := ResourceAction{}
	return &this
}

// GetType returns the Type field value
func (o *ResourceAction) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ResourceAction) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ResourceAction) SetType(v string) {
	o.Type = v
}

// GetAction returns the Action field value
func (o *ResourceAction) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ResourceAction) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ResourceAction) SetAction(v string) {
	o.Action = v
}

func (o ResourceAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["action"] = o.Action
	}
	return json.Marshal(toSerialize)
}

type NullableResourceAction struct {
	value *ResourceAction
	isSet bool
}

func (v NullableResourceAction) Get() *ResourceAction {
	return v.value
}

func (v *NullableResourceAction) Set(val *ResourceAction) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceAction) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceAction(val *ResourceAction) *NullableResourceAction {
	return &NullableResourceAction{value: val, isSet: true}
}

func (v NullableResourceAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


