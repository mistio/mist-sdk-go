/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// AddScheduleRequestReminder struct for AddScheduleRequestReminder
type AddScheduleRequestReminder struct {
	// The reminder message to be sent
	Message *string `json:"message,omitempty"`
	ReminderWhen *AddScheduleRequestReminderReminderWhen `json:"reminder_when,omitempty"`
}

// NewAddScheduleRequestReminder instantiates a new AddScheduleRequestReminder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddScheduleRequestReminder() *AddScheduleRequestReminder {
	this := AddScheduleRequestReminder{}
	return &this
}

// NewAddScheduleRequestReminderWithDefaults instantiates a new AddScheduleRequestReminder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddScheduleRequestReminderWithDefaults() *AddScheduleRequestReminder {
	this := AddScheduleRequestReminder{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AddScheduleRequestReminder) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddScheduleRequestReminder) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AddScheduleRequestReminder) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AddScheduleRequestReminder) SetMessage(v string) {
	o.Message = &v
}

// GetReminderWhen returns the ReminderWhen field value if set, zero value otherwise.
func (o *AddScheduleRequestReminder) GetReminderWhen() AddScheduleRequestReminderReminderWhen {
	if o == nil || o.ReminderWhen == nil {
		var ret AddScheduleRequestReminderReminderWhen
		return ret
	}
	return *o.ReminderWhen
}

// GetReminderWhenOk returns a tuple with the ReminderWhen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddScheduleRequestReminder) GetReminderWhenOk() (*AddScheduleRequestReminderReminderWhen, bool) {
	if o == nil || o.ReminderWhen == nil {
		return nil, false
	}
	return o.ReminderWhen, true
}

// HasReminderWhen returns a boolean if a field has been set.
func (o *AddScheduleRequestReminder) HasReminderWhen() bool {
	if o != nil && o.ReminderWhen != nil {
		return true
	}

	return false
}

// SetReminderWhen gets a reference to the given AddScheduleRequestReminderReminderWhen and assigns it to the ReminderWhen field.
func (o *AddScheduleRequestReminder) SetReminderWhen(v AddScheduleRequestReminderReminderWhen) {
	o.ReminderWhen = &v
}

func (o AddScheduleRequestReminder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.ReminderWhen != nil {
		toSerialize["reminder_when"] = o.ReminderWhen
	}
	return json.Marshal(toSerialize)
}

type NullableAddScheduleRequestReminder struct {
	value *AddScheduleRequestReminder
	isSet bool
}

func (v NullableAddScheduleRequestReminder) Get() *AddScheduleRequestReminder {
	return v.value
}

func (v *NullableAddScheduleRequestReminder) Set(val *AddScheduleRequestReminder) {
	v.value = val
	v.isSet = true
}

func (v NullableAddScheduleRequestReminder) IsSet() bool {
	return v.isSet
}

func (v *NullableAddScheduleRequestReminder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddScheduleRequestReminder(val *AddScheduleRequestReminder) *NullableAddScheduleRequestReminder {
	return &NullableAddScheduleRequestReminder{value: val, isSet: true}
}

func (v NullableAddScheduleRequestReminder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddScheduleRequestReminder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


