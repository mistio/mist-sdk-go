/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// CloudFeatures The cloud features that should be enabled
type CloudFeatures struct {
	// Enable compute services
	Compute *bool `json:"compute,omitempty"`
	// Enable DNS services
	Dns *bool `json:"dns,omitempty"`
	// Enable container services
	Container *bool `json:"container,omitempty"`
}

// NewCloudFeatures instantiates a new CloudFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudFeatures() *CloudFeatures {
	this := CloudFeatures{}
	var compute bool = true
	this.Compute = &compute
	var dns bool = false
	this.Dns = &dns
	var container bool = false
	this.Container = &container
	return &this
}

// NewCloudFeaturesWithDefaults instantiates a new CloudFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudFeaturesWithDefaults() *CloudFeatures {
	this := CloudFeatures{}
	var compute bool = true
	this.Compute = &compute
	var dns bool = false
	this.Dns = &dns
	var container bool = false
	this.Container = &container
	return &this
}

// GetCompute returns the Compute field value if set, zero value otherwise.
func (o *CloudFeatures) GetCompute() bool {
	if o == nil || o.Compute == nil {
		var ret bool
		return ret
	}
	return *o.Compute
}

// GetComputeOk returns a tuple with the Compute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFeatures) GetComputeOk() (*bool, bool) {
	if o == nil || o.Compute == nil {
		return nil, false
	}
	return o.Compute, true
}

// HasCompute returns a boolean if a field has been set.
func (o *CloudFeatures) HasCompute() bool {
	if o != nil && o.Compute != nil {
		return true
	}

	return false
}

// SetCompute gets a reference to the given bool and assigns it to the Compute field.
func (o *CloudFeatures) SetCompute(v bool) {
	o.Compute = &v
}

// GetDns returns the Dns field value if set, zero value otherwise.
func (o *CloudFeatures) GetDns() bool {
	if o == nil || o.Dns == nil {
		var ret bool
		return ret
	}
	return *o.Dns
}

// GetDnsOk returns a tuple with the Dns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFeatures) GetDnsOk() (*bool, bool) {
	if o == nil || o.Dns == nil {
		return nil, false
	}
	return o.Dns, true
}

// HasDns returns a boolean if a field has been set.
func (o *CloudFeatures) HasDns() bool {
	if o != nil && o.Dns != nil {
		return true
	}

	return false
}

// SetDns gets a reference to the given bool and assigns it to the Dns field.
func (o *CloudFeatures) SetDns(v bool) {
	o.Dns = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *CloudFeatures) GetContainer() bool {
	if o == nil || o.Container == nil {
		var ret bool
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFeatures) GetContainerOk() (*bool, bool) {
	if o == nil || o.Container == nil {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *CloudFeatures) HasContainer() bool {
	if o != nil && o.Container != nil {
		return true
	}

	return false
}

// SetContainer gets a reference to the given bool and assigns it to the Container field.
func (o *CloudFeatures) SetContainer(v bool) {
	o.Container = &v
}

func (o CloudFeatures) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Compute != nil {
		toSerialize["compute"] = o.Compute
	}
	if o.Dns != nil {
		toSerialize["dns"] = o.Dns
	}
	if o.Container != nil {
		toSerialize["container"] = o.Container
	}
	return json.Marshal(toSerialize)
}

type NullableCloudFeatures struct {
	value *CloudFeatures
	isSet bool
}

func (v NullableCloudFeatures) Get() *CloudFeatures {
	return v.value
}

func (v *NullableCloudFeatures) Set(val *CloudFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudFeatures(val *CloudFeatures) *NullableCloudFeatures {
	return &NullableCloudFeatures{value: val, isSet: true}
}

func (v NullableCloudFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


