/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// LinodeNet struct for LinodeNet
type LinodeNet struct {
	// Assign a private IPv4 address, defaults to True
	PrivateIp *bool `json:"private_ip,omitempty"`
}

// NewLinodeNet instantiates a new LinodeNet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinodeNet() *LinodeNet {
	this := LinodeNet{}
	return &this
}

// NewLinodeNetWithDefaults instantiates a new LinodeNet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinodeNetWithDefaults() *LinodeNet {
	this := LinodeNet{}
	return &this
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *LinodeNet) GetPrivateIp() bool {
	if o == nil || o.PrivateIp == nil {
		var ret bool
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinodeNet) GetPrivateIpOk() (*bool, bool) {
	if o == nil || o.PrivateIp == nil {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *LinodeNet) HasPrivateIp() bool {
	if o != nil && o.PrivateIp != nil {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given bool and assigns it to the PrivateIp field.
func (o *LinodeNet) SetPrivateIp(v bool) {
	o.PrivateIp = &v
}

func (o LinodeNet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrivateIp != nil {
		toSerialize["private_ip"] = o.PrivateIp
	}
	return json.Marshal(toSerialize)
}

type NullableLinodeNet struct {
	value *LinodeNet
	isSet bool
}

func (v NullableLinodeNet) Get() *LinodeNet {
	return v.value
}

func (v *NullableLinodeNet) Set(val *LinodeNet) {
	v.value = val
	v.isSet = true
}

func (v NullableLinodeNet) IsSet() bool {
	return v.isSet
}

func (v *NullableLinodeNet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinodeNet(val *LinodeNet) *NullableLinodeNet {
	return &NullableLinodeNet{value: val, isSet: true}
}

func (v NullableLinodeNet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinodeNet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


