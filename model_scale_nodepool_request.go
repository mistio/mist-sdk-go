/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// ScaleNodepoolRequest To scale a GKE nodepool without autoscaling set only the desired_nodes parameter. On GKE nodepools with autoscaling, set min_nodes,max_nodes. Enabling/Disabling autoscaling is only supported on GKE nodepools. min_nodes, max_nodes parameters are required to enable autoscaling. To disable autoscaling set only enable_autoscaling to false. For EKS nodepools set the min_nodes, desired_nodes, max_nodes parameters.
type ScaleNodepoolRequest struct {
	// Enable/Disable autoscaling for the specified GKE nodepool.
	Autoscaling *bool `json:"autoscaling,omitempty"`
	// The number of nodes that the nodepool should maintain
	DesiredNodes *int32 `json:"desired_nodes,omitempty"`
	// Minimum number of nodes for the specified nodepool
	MinNodes *int32 `json:"min_nodes,omitempty"`
	// Maximum number of nodes for the specified nodepool
	MaxNodes *int32 `json:"max_nodes,omitempty"`
}

// NewScaleNodepoolRequest instantiates a new ScaleNodepoolRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScaleNodepoolRequest() *ScaleNodepoolRequest {
	this := ScaleNodepoolRequest{}
	return &this
}

// NewScaleNodepoolRequestWithDefaults instantiates a new ScaleNodepoolRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScaleNodepoolRequestWithDefaults() *ScaleNodepoolRequest {
	this := ScaleNodepoolRequest{}
	return &this
}

// GetAutoscaling returns the Autoscaling field value if set, zero value otherwise.
func (o *ScaleNodepoolRequest) GetAutoscaling() bool {
	if o == nil || o.Autoscaling == nil {
		var ret bool
		return ret
	}
	return *o.Autoscaling
}

// GetAutoscalingOk returns a tuple with the Autoscaling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleNodepoolRequest) GetAutoscalingOk() (*bool, bool) {
	if o == nil || o.Autoscaling == nil {
		return nil, false
	}
	return o.Autoscaling, true
}

// HasAutoscaling returns a boolean if a field has been set.
func (o *ScaleNodepoolRequest) HasAutoscaling() bool {
	if o != nil && o.Autoscaling != nil {
		return true
	}

	return false
}

// SetAutoscaling gets a reference to the given bool and assigns it to the Autoscaling field.
func (o *ScaleNodepoolRequest) SetAutoscaling(v bool) {
	o.Autoscaling = &v
}

// GetDesiredNodes returns the DesiredNodes field value if set, zero value otherwise.
func (o *ScaleNodepoolRequest) GetDesiredNodes() int32 {
	if o == nil || o.DesiredNodes == nil {
		var ret int32
		return ret
	}
	return *o.DesiredNodes
}

// GetDesiredNodesOk returns a tuple with the DesiredNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleNodepoolRequest) GetDesiredNodesOk() (*int32, bool) {
	if o == nil || o.DesiredNodes == nil {
		return nil, false
	}
	return o.DesiredNodes, true
}

// HasDesiredNodes returns a boolean if a field has been set.
func (o *ScaleNodepoolRequest) HasDesiredNodes() bool {
	if o != nil && o.DesiredNodes != nil {
		return true
	}

	return false
}

// SetDesiredNodes gets a reference to the given int32 and assigns it to the DesiredNodes field.
func (o *ScaleNodepoolRequest) SetDesiredNodes(v int32) {
	o.DesiredNodes = &v
}

// GetMinNodes returns the MinNodes field value if set, zero value otherwise.
func (o *ScaleNodepoolRequest) GetMinNodes() int32 {
	if o == nil || o.MinNodes == nil {
		var ret int32
		return ret
	}
	return *o.MinNodes
}

// GetMinNodesOk returns a tuple with the MinNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleNodepoolRequest) GetMinNodesOk() (*int32, bool) {
	if o == nil || o.MinNodes == nil {
		return nil, false
	}
	return o.MinNodes, true
}

// HasMinNodes returns a boolean if a field has been set.
func (o *ScaleNodepoolRequest) HasMinNodes() bool {
	if o != nil && o.MinNodes != nil {
		return true
	}

	return false
}

// SetMinNodes gets a reference to the given int32 and assigns it to the MinNodes field.
func (o *ScaleNodepoolRequest) SetMinNodes(v int32) {
	o.MinNodes = &v
}

// GetMaxNodes returns the MaxNodes field value if set, zero value otherwise.
func (o *ScaleNodepoolRequest) GetMaxNodes() int32 {
	if o == nil || o.MaxNodes == nil {
		var ret int32
		return ret
	}
	return *o.MaxNodes
}

// GetMaxNodesOk returns a tuple with the MaxNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleNodepoolRequest) GetMaxNodesOk() (*int32, bool) {
	if o == nil || o.MaxNodes == nil {
		return nil, false
	}
	return o.MaxNodes, true
}

// HasMaxNodes returns a boolean if a field has been set.
func (o *ScaleNodepoolRequest) HasMaxNodes() bool {
	if o != nil && o.MaxNodes != nil {
		return true
	}

	return false
}

// SetMaxNodes gets a reference to the given int32 and assigns it to the MaxNodes field.
func (o *ScaleNodepoolRequest) SetMaxNodes(v int32) {
	o.MaxNodes = &v
}

func (o ScaleNodepoolRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Autoscaling != nil {
		toSerialize["autoscaling"] = o.Autoscaling
	}
	if o.DesiredNodes != nil {
		toSerialize["desired_nodes"] = o.DesiredNodes
	}
	if o.MinNodes != nil {
		toSerialize["min_nodes"] = o.MinNodes
	}
	if o.MaxNodes != nil {
		toSerialize["max_nodes"] = o.MaxNodes
	}
	return json.Marshal(toSerialize)
}

type NullableScaleNodepoolRequest struct {
	value *ScaleNodepoolRequest
	isSet bool
}

func (v NullableScaleNodepoolRequest) Get() *ScaleNodepoolRequest {
	return v.value
}

func (v *NullableScaleNodepoolRequest) Set(val *ScaleNodepoolRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableScaleNodepoolRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableScaleNodepoolRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScaleNodepoolRequest(val *ScaleNodepoolRequest) *NullableScaleNodepoolRequest {
	return &NullableScaleNodepoolRequest{value: val, isSet: true}
}

func (v NullableScaleNodepoolRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScaleNodepoolRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


