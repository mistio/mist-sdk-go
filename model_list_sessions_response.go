/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// ListSessionsResponse struct for ListSessionsResponse
type ListSessionsResponse struct {
	Data []map[string]interface{} `json:"data,omitempty"`
	Meta *ResponseMetadata `json:"meta,omitempty"`
}

// NewListSessionsResponse instantiates a new ListSessionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSessionsResponse() *ListSessionsResponse {
	this := ListSessionsResponse{}
	return &this
}

// NewListSessionsResponseWithDefaults instantiates a new ListSessionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSessionsResponseWithDefaults() *ListSessionsResponse {
	this := ListSessionsResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListSessionsResponse) GetData() []map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSessionsResponse) GetDataOk() ([]map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListSessionsResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []map[string]interface{} and assigns it to the Data field.
func (o *ListSessionsResponse) SetData(v []map[string]interface{}) {
	o.Data = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListSessionsResponse) GetMeta() ResponseMetadata {
	if o == nil || o.Meta == nil {
		var ret ResponseMetadata
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSessionsResponse) GetMetaOk() (*ResponseMetadata, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListSessionsResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ResponseMetadata and assigns it to the Meta field.
func (o *ListSessionsResponse) SetMeta(v ResponseMetadata) {
	o.Meta = &v
}

func (o ListSessionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableListSessionsResponse struct {
	value *ListSessionsResponse
	isSet bool
}

func (v NullableListSessionsResponse) Get() *ListSessionsResponse {
	return v.value
}

func (v *NullableListSessionsResponse) Set(val *ListSessionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSessionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSessionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSessionsResponse(val *ListSessionsResponse) *NullableListSessionsResponse {
	return &NullableListSessionsResponse{value: val, isSet: true}
}

func (v NullableListSessionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSessionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


