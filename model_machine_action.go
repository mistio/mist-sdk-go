/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// MachineAction struct for MachineAction
type MachineAction struct {
	// the action to be performed 
	Action string `json:"action"`
}

// NewMachineAction instantiates a new MachineAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineAction(action string, ) *MachineAction {
	this := MachineAction{}
	this.Action = action
	return &this
}

// NewMachineActionWithDefaults instantiates a new MachineAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineActionWithDefaults() *MachineAction {
	this := MachineAction{}
	return &this
}

// GetAction returns the Action field value
func (o *MachineAction) GetAction() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *MachineAction) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *MachineAction) SetAction(v string) {
	o.Action = v
}

func (o MachineAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	return json.Marshal(toSerialize)
}

type NullableMachineAction struct {
	value *MachineAction
	isSet bool
}

func (v NullableMachineAction) Get() *MachineAction {
	return v.value
}

func (v *NullableMachineAction) Set(val *MachineAction) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineAction) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineAction(val *MachineAction) *NullableMachineAction {
	return &NullableMachineAction{value: val, isSet: true}
}

func (v NullableMachineAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


