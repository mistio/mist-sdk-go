/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// WebHookAction struct for WebHookAction
type WebHookAction struct {
	// the HTTP method to be executed by the webhook
	Method string `json:"method"`
	// the URL of the endpoint that is called by the webhook
	Url string `json:"url"`
	// the query string parameters of the HTTP request
	Params *string `json:"params,omitempty"`
	// the body of the HTTP request
	Data *string `json:"data,omitempty"`
	// the JSON body of the HTTP request
	Json *string `json:"json,omitempty"`
	// the HTTP headers of the request
	Headers *string `json:"headers,omitempty"`
}

// NewWebHookAction instantiates a new WebHookAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebHookAction(method string, url string) *WebHookAction {
	this := WebHookAction{}
	this.Method = method
	this.Url = url
	return &this
}

// NewWebHookActionWithDefaults instantiates a new WebHookAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebHookActionWithDefaults() *WebHookAction {
	this := WebHookAction{}
	return &this
}

// GetMethod returns the Method field value
func (o *WebHookAction) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *WebHookAction) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *WebHookAction) SetMethod(v string) {
	o.Method = v
}

// GetUrl returns the Url field value
func (o *WebHookAction) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebHookAction) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebHookAction) SetUrl(v string) {
	o.Url = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *WebHookAction) GetParams() string {
	if o == nil || o.Params == nil {
		var ret string
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebHookAction) GetParamsOk() (*string, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *WebHookAction) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given string and assigns it to the Params field.
func (o *WebHookAction) SetParams(v string) {
	o.Params = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *WebHookAction) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebHookAction) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *WebHookAction) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *WebHookAction) SetData(v string) {
	o.Data = &v
}

// GetJson returns the Json field value if set, zero value otherwise.
func (o *WebHookAction) GetJson() string {
	if o == nil || o.Json == nil {
		var ret string
		return ret
	}
	return *o.Json
}

// GetJsonOk returns a tuple with the Json field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebHookAction) GetJsonOk() (*string, bool) {
	if o == nil || o.Json == nil {
		return nil, false
	}
	return o.Json, true
}

// HasJson returns a boolean if a field has been set.
func (o *WebHookAction) HasJson() bool {
	if o != nil && o.Json != nil {
		return true
	}

	return false
}

// SetJson gets a reference to the given string and assigns it to the Json field.
func (o *WebHookAction) SetJson(v string) {
	o.Json = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *WebHookAction) GetHeaders() string {
	if o == nil || o.Headers == nil {
		var ret string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebHookAction) GetHeadersOk() (*string, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *WebHookAction) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given string and assigns it to the Headers field.
func (o *WebHookAction) SetHeaders(v string) {
	o.Headers = &v
}

func (o WebHookAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["method"] = o.Method
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Json != nil {
		toSerialize["json"] = o.Json
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	return json.Marshal(toSerialize)
}

type NullableWebHookAction struct {
	value *WebHookAction
	isSet bool
}

func (v NullableWebHookAction) Get() *WebHookAction {
	return v.value
}

func (v *NullableWebHookAction) Set(val *WebHookAction) {
	v.value = val
	v.isSet = true
}

func (v NullableWebHookAction) IsSet() bool {
	return v.isSet
}

func (v *NullableWebHookAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebHookAction(val *WebHookAction) *NullableWebHookAction {
	return &NullableWebHookAction{value: val, isSet: true}
}

func (v NullableWebHookAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebHookAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


