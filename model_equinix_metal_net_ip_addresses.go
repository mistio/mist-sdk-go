/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// EquinixMetalNetIpAddresses struct for EquinixMetalNetIpAddresses
type EquinixMetalNetIpAddresses struct {
	// Address Family for IP Address(IPv4, IPv6)
	AddressFamily int32 `json:"address_family"`
	// Address Type for IP Address
	Public bool `json:"public"`
	// Cidr Size for the IP Block created. Valid values depend on the operating system being provisioned. (28..32 for IPv4 addresses, 124..127 for IPv6 addresses)
	Cidr int32 `json:"cidr"`
}

// NewEquinixMetalNetIpAddresses instantiates a new EquinixMetalNetIpAddresses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEquinixMetalNetIpAddresses(addressFamily int32, public bool, cidr int32, ) *EquinixMetalNetIpAddresses {
	this := EquinixMetalNetIpAddresses{}
	this.AddressFamily = addressFamily
	this.Public = public
	this.Cidr = cidr
	return &this
}

// NewEquinixMetalNetIpAddressesWithDefaults instantiates a new EquinixMetalNetIpAddresses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEquinixMetalNetIpAddressesWithDefaults() *EquinixMetalNetIpAddresses {
	this := EquinixMetalNetIpAddresses{}
	return &this
}

// GetAddressFamily returns the AddressFamily field value
func (o *EquinixMetalNetIpAddresses) GetAddressFamily() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.AddressFamily
}

// GetAddressFamilyOk returns a tuple with the AddressFamily field value
// and a boolean to check if the value has been set.
func (o *EquinixMetalNetIpAddresses) GetAddressFamilyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AddressFamily, true
}

// SetAddressFamily sets field value
func (o *EquinixMetalNetIpAddresses) SetAddressFamily(v int32) {
	o.AddressFamily = v
}

// GetPublic returns the Public field value
func (o *EquinixMetalNetIpAddresses) GetPublic() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Public
}

// GetPublicOk returns a tuple with the Public field value
// and a boolean to check if the value has been set.
func (o *EquinixMetalNetIpAddresses) GetPublicOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Public, true
}

// SetPublic sets field value
func (o *EquinixMetalNetIpAddresses) SetPublic(v bool) {
	o.Public = v
}

// GetCidr returns the Cidr field value
func (o *EquinixMetalNetIpAddresses) GetCidr() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *EquinixMetalNetIpAddresses) GetCidrOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *EquinixMetalNetIpAddresses) SetCidr(v int32) {
	o.Cidr = v
}

func (o EquinixMetalNetIpAddresses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address_family"] = o.AddressFamily
	}
	if true {
		toSerialize["public"] = o.Public
	}
	if true {
		toSerialize["cidr"] = o.Cidr
	}
	return json.Marshal(toSerialize)
}

type NullableEquinixMetalNetIpAddresses struct {
	value *EquinixMetalNetIpAddresses
	isSet bool
}

func (v NullableEquinixMetalNetIpAddresses) Get() *EquinixMetalNetIpAddresses {
	return v.value
}

func (v *NullableEquinixMetalNetIpAddresses) Set(val *EquinixMetalNetIpAddresses) {
	v.value = val
	v.isSet = true
}

func (v NullableEquinixMetalNetIpAddresses) IsSet() bool {
	return v.isSet
}

func (v *NullableEquinixMetalNetIpAddresses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEquinixMetalNetIpAddresses(val *EquinixMetalNetIpAddresses) *NullableEquinixMetalNetIpAddresses {
	return &NullableEquinixMetalNetIpAddresses{value: val, isSet: true}
}

func (v NullableEquinixMetalNetIpAddresses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEquinixMetalNetIpAddresses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


