/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// Window struct for Window
type Window struct {
	// units of time, e.g. \"seconds\"
	Period string `json:"period"`
	// a positive integer denoting the start of the search window in terms of \"now() - start\" 
	Start int32 `json:"start"`
	// a positive integer, where stop < start, denoting the end of the search window. Defaults to now 
	Stop *int32 `json:"stop,omitempty"`
}

// NewWindow instantiates a new Window object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWindow(period string, start int32, ) *Window {
	this := Window{}
	this.Period = period
	this.Start = start
	var stop int32 = 0
	this.Stop = &stop
	return &this
}

// NewWindowWithDefaults instantiates a new Window object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWindowWithDefaults() *Window {
	this := Window{}
	var stop int32 = 0
	this.Stop = &stop
	return &this
}

// GetPeriod returns the Period field value
func (o *Window) GetPeriod() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *Window) GetPeriodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *Window) SetPeriod(v string) {
	o.Period = v
}

// GetStart returns the Start field value
func (o *Window) GetStart() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *Window) GetStartOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *Window) SetStart(v int32) {
	o.Start = v
}

// GetStop returns the Stop field value if set, zero value otherwise.
func (o *Window) GetStop() int32 {
	if o == nil || o.Stop == nil {
		var ret int32
		return ret
	}
	return *o.Stop
}

// GetStopOk returns a tuple with the Stop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Window) GetStopOk() (*int32, bool) {
	if o == nil || o.Stop == nil {
		return nil, false
	}
	return o.Stop, true
}

// HasStop returns a boolean if a field has been set.
func (o *Window) HasStop() bool {
	if o != nil && o.Stop != nil {
		return true
	}

	return false
}

// SetStop gets a reference to the given int32 and assigns it to the Stop field.
func (o *Window) SetStop(v int32) {
	o.Stop = &v
}

func (o Window) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["period"] = o.Period
	}
	if true {
		toSerialize["start"] = o.Start
	}
	if o.Stop != nil {
		toSerialize["stop"] = o.Stop
	}
	return json.Marshal(toSerialize)
}

type NullableWindow struct {
	value *Window
	isSet bool
}

func (v NullableWindow) Get() *Window {
	return v.value
}

func (v *NullableWindow) Set(val *Window) {
	v.value = val
	v.isSet = true
}

func (v NullableWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWindow(val *Window) *NullableWindow {
	return &NullableWindow{value: val, isSet: true}
}

func (v NullableWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


