/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// CreateMachineResponseOneOf1 struct for CreateMachineResponseOneOf1
type CreateMachineResponseOneOf1 struct {
	Plan map[string]interface{} `json:"plan,omitempty"`
}

// NewCreateMachineResponseOneOf1 instantiates a new CreateMachineResponseOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMachineResponseOneOf1() *CreateMachineResponseOneOf1 {
	this := CreateMachineResponseOneOf1{}
	return &this
}

// NewCreateMachineResponseOneOf1WithDefaults instantiates a new CreateMachineResponseOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMachineResponseOneOf1WithDefaults() *CreateMachineResponseOneOf1 {
	this := CreateMachineResponseOneOf1{}
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *CreateMachineResponseOneOf1) GetPlan() map[string]interface{} {
	if o == nil || o.Plan == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMachineResponseOneOf1) GetPlanOk() (map[string]interface{}, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *CreateMachineResponseOneOf1) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given map[string]interface{} and assigns it to the Plan field.
func (o *CreateMachineResponseOneOf1) SetPlan(v map[string]interface{}) {
	o.Plan = v
}

func (o CreateMachineResponseOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMachineResponseOneOf1 struct {
	value *CreateMachineResponseOneOf1
	isSet bool
}

func (v NullableCreateMachineResponseOneOf1) Get() *CreateMachineResponseOneOf1 {
	return v.value
}

func (v *NullableCreateMachineResponseOneOf1) Set(val *CreateMachineResponseOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMachineResponseOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMachineResponseOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMachineResponseOneOf1(val *CreateMachineResponseOneOf1) *NullableCreateMachineResponseOneOf1 {
	return &NullableCreateMachineResponseOneOf1{value: val, isSet: true}
}

func (v NullableCreateMachineResponseOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMachineResponseOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


