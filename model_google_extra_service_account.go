/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// GoogleExtraServiceAccount struct for GoogleExtraServiceAccount
type GoogleExtraServiceAccount struct {
	// The email address of the service account.
	Email *string `json:"email,omitempty"`
	// A list of scopes to be made available for this machine.
	Scopes []string `json:"scopes,omitempty"`
}

// NewGoogleExtraServiceAccount instantiates a new GoogleExtraServiceAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleExtraServiceAccount() *GoogleExtraServiceAccount {
	this := GoogleExtraServiceAccount{}
	return &this
}

// NewGoogleExtraServiceAccountWithDefaults instantiates a new GoogleExtraServiceAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleExtraServiceAccountWithDefaults() *GoogleExtraServiceAccount {
	this := GoogleExtraServiceAccount{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GoogleExtraServiceAccount) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleExtraServiceAccount) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GoogleExtraServiceAccount) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GoogleExtraServiceAccount) SetEmail(v string) {
	o.Email = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *GoogleExtraServiceAccount) GetScopes() []string {
	if o == nil || o.Scopes == nil {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleExtraServiceAccount) GetScopesOk() ([]string, bool) {
	if o == nil || o.Scopes == nil {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *GoogleExtraServiceAccount) HasScopes() bool {
	if o != nil && o.Scopes != nil {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *GoogleExtraServiceAccount) SetScopes(v []string) {
	o.Scopes = v
}

func (o GoogleExtraServiceAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	return json.Marshal(toSerialize)
}

type NullableGoogleExtraServiceAccount struct {
	value *GoogleExtraServiceAccount
	isSet bool
}

func (v NullableGoogleExtraServiceAccount) Get() *GoogleExtraServiceAccount {
	return v.value
}

func (v *NullableGoogleExtraServiceAccount) Set(val *GoogleExtraServiceAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleExtraServiceAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleExtraServiceAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleExtraServiceAccount(val *GoogleExtraServiceAccount) *NullableGoogleExtraServiceAccount {
	return &NullableGoogleExtraServiceAccount{value: val, isSet: true}
}

func (v NullableGoogleExtraServiceAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleExtraServiceAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


