/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// VSphereNet struct for VSphereNet
type VSphereNet struct {
	// Name or ID of the network to launch the machine into
	Network *string `json:"network,omitempty"`
}

// NewVSphereNet instantiates a new VSphereNet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVSphereNet() *VSphereNet {
	this := VSphereNet{}
	return &this
}

// NewVSphereNetWithDefaults instantiates a new VSphereNet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVSphereNetWithDefaults() *VSphereNet {
	this := VSphereNet{}
	return &this
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *VSphereNet) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VSphereNet) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *VSphereNet) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *VSphereNet) SetNetwork(v string) {
	o.Network = &v
}

func (o VSphereNet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	return json.Marshal(toSerialize)
}

type NullableVSphereNet struct {
	value *VSphereNet
	isSet bool
}

func (v NullableVSphereNet) Get() *VSphereNet {
	return v.value
}

func (v *NullableVSphereNet) Set(val *VSphereNet) {
	v.value = val
	v.isSet = true
}

func (v NullableVSphereNet) IsSet() bool {
	return v.isSet
}

func (v *NullableVSphereNet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVSphereNet(val *VSphereNet) *NullableVSphereNet {
	return &NullableVSphereNet{value: val, isSet: true}
}

func (v NullableVSphereNet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVSphereNet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


