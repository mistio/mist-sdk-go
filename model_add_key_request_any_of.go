/*
Mist API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
Contact: api@mist.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// AddKeyRequestAnyOf struct for AddKeyRequestAnyOf
type AddKeyRequestAnyOf struct {
	// The key's name
	Name string `json:"name"`
	// The private key
	Private string `json:"private"`
	// The signed public key, when using signed ssh keys
	Certificate *string `json:"certificate,omitempty"`
}

// NewAddKeyRequestAnyOf instantiates a new AddKeyRequestAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddKeyRequestAnyOf(name string, private string) *AddKeyRequestAnyOf {
	this := AddKeyRequestAnyOf{}
	this.Name = name
	this.Private = private
	return &this
}

// NewAddKeyRequestAnyOfWithDefaults instantiates a new AddKeyRequestAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddKeyRequestAnyOfWithDefaults() *AddKeyRequestAnyOf {
	this := AddKeyRequestAnyOf{}
	return &this
}

// GetName returns the Name field value
func (o *AddKeyRequestAnyOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddKeyRequestAnyOf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddKeyRequestAnyOf) SetName(v string) {
	o.Name = v
}

// GetPrivate returns the Private field value
func (o *AddKeyRequestAnyOf) GetPrivate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Private
}

// GetPrivateOk returns a tuple with the Private field value
// and a boolean to check if the value has been set.
func (o *AddKeyRequestAnyOf) GetPrivateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Private, true
}

// SetPrivate sets field value
func (o *AddKeyRequestAnyOf) SetPrivate(v string) {
	o.Private = v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *AddKeyRequestAnyOf) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddKeyRequestAnyOf) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *AddKeyRequestAnyOf) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *AddKeyRequestAnyOf) SetCertificate(v string) {
	o.Certificate = &v
}

func (o AddKeyRequestAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["private"] = o.Private
	}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	return json.Marshal(toSerialize)
}

type NullableAddKeyRequestAnyOf struct {
	value *AddKeyRequestAnyOf
	isSet bool
}

func (v NullableAddKeyRequestAnyOf) Get() *AddKeyRequestAnyOf {
	return v.value
}

func (v *NullableAddKeyRequestAnyOf) Set(val *AddKeyRequestAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddKeyRequestAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddKeyRequestAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddKeyRequestAnyOf(val *AddKeyRequestAnyOf) *NullableAddKeyRequestAnyOf {
	return &NullableAddKeyRequestAnyOf{value: val, isSet: true}
}

func (v NullableAddKeyRequestAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddKeyRequestAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


