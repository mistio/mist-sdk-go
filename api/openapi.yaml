openapi: 3.0.3
info:
  contact:
    email: api@mist.io
    name: Mist API Team
  title: Mist API
  version: 2.0.0
  x-cli-name: Mist CLI
servers:
- description: Mist Hosted Service
  url: https://mist.io/
paths:
  /api/v2/clouds:
    get:
      description: List clouds owned by the active org. READ permission required on
        cloud.
      operationId: list-clouds
      parameters:
      - description: Only return results matching search filter
        examples:
          Filter by cloud provider:
            value: provider:amazon
          Filter by name:
            value: name:LXD1
          Composite filter:
            value: provider:packet AND status:enabled
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          (default) Automatically replace all foreign key ids with referenced resource name:
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference creator by email, owner by name:
            value: creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCloudsResponse'
          description: List clouds response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:cloud
      - CookieAuth:
        - read:cloud
      summary: List clouds
      tags:
      - clouds
      x-cli-table-default:
      - name
      - provider
      - tags
      x-cli-table-extended:
      - id
      - name
      - provider
      - tags
      - owned_by
      - created_by
    post:
      description: Adds a new cloud and returns the cloud's id. ADD permission required
        on cloud.
      operationId: add-cloud
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCloudRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Cloud added succesfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - add:cloud
      - CookieAuth:
        - add:cloud
      summary: Add cloud
      tags:
      - clouds
  /api/v2/clouds/{cloud}:
    delete:
      description: Remove target cloud
      operationId: remove-cloud
      parameters:
      - example: example-cloud
        explode: false
        in: path
        name: cloud
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Cloud removed successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Cloud not found
      security:
      - ApiKeyAuth:
        - remove:cloud
      - CookieAuth:
        - remove:cloud
      summary: Remove cloud
      tags:
      - clouds
    get:
      description: Get details about target cloud
      operationId: get-cloud
      parameters:
      - example: example-cloud
        explode: false
        in: path
        name: cloud
        required: true
        schema:
          type: string
        style: simple
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          Automatically replace all foreign key ids with referenced resource name:
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference creator by email, owner by name:
            value: creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCloudResponse'
          description: Cloud returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Cloud not found
      security:
      - ApiKeyAuth:
        - read:cloud
      - CookieAuth:
        - read:cloud
      summary: Get cloud
      tags:
      - clouds
      x-cli-table-default:
      - name
      - provider
      - tags
      x-cli-table-extended:
      - id
      - name
      - provider
      - tags
      - owned_by
      - created_by
    put:
      description: Update target cloud name or credentials
      operationId: edit-cloud
      parameters:
      - example: example-cloud
        explode: false
        in: path
        name: cloud
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCloudRequest'
      responses:
        "200":
          description: Cloud updated successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Cloud not found
      security:
      - ApiKeyAuth:
        - edit:cloud
      - CookieAuth:
        - edit:cloud
      summary: Edit cloud
      tags:
      - clouds
  /api/v2/clusters:
    get:
      description: List clusters
      operationId: list-clusters
      parameters:
      - examples:
          Filter by cloud id:
            value: 0194030499e74b02bdf68fa7130fb0b2
          Filter by cloud name:
            value: OSP10-new
          Filter by cloud provider:
            value: provider:digitalocean
        explode: true
        in: query
        name: cloud
        required: false
        schema:
          type: string
        style: form
      - description: Only return results matching search filter
        examples:
          Filter by cluster created_by attribute:
            value: created_by:csk
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
          description: List clusters response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:cluster
        - read:cloud
      - CookieAuth:
        - read:cluster
        - read:cloud
      summary: List clusters
      tags:
      - clusters
      x-cli-table-default:
      - name
      - cloud
      - total_nodes
      - tags
      x-cli-table-extended:
      - id
      - name
      - cloud
      - total_nodes
      - total_cpus
      - total_ram
      - tags
      - owned_by
      - created_by
    post:
      description: Create a new cluster and return the cluster's id
      operationId: create-cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
      responses:
        "200":
          description: Cluster creation successful
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - create:cluster
        - read:cloud
        - create_resources:cloud
      - CookieAuth:
        - create:cluster
        - read:cloud
        - create_resources:cloud
      summary: Create cluster
      tags:
      - clusters
  /api/v2/clusters/{cluster}:
    delete:
      description: Destroy target clusters
      operationId: destroy-cluster
      parameters:
      - example: example-cluster
        explode: false
        in: path
        name: cluster
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Cluster destruction successful
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Cluster not found
      security:
      - ApiKeyAuth:
        - read:cloud
        - destroy:cluster
      - CookieAuth:
        - read:cloud
        - destroy:cluster
      summary: Destroy cluster
      tags:
      - clusters
    get:
      description: Get details about target cluster
      operationId: get-cluster
      parameters:
      - example: example-cluster
        explode: false
        in: path
        name: cluster
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterResponse'
          description: Cluster returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Cluster not found
      security:
      - ApiKeyAuth:
        - read:cluster
        - read:cloud
      - CookieAuth:
        - read:cluster
        - read:cloud
      summary: Get cluster
      tags:
      - clusters
      x-cli-table-default:
      - name
      - cloud
      - total_nodes
      - tags
      x-cli-table-extended:
      - id
      - name
      - cloud
      - total_nodes
      - total_cpus
      - total_ram
      - tags
      - owned_by
      - created_by
  /api/v2/datapoints:
    get:
      description: Get datapoints for a specific query
      operationId: get-datapoints
      parameters:
      - example: example-query
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - example: example-tags
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - example: example-tags
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - example: example-start
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - example: example-end
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      - example: example-step
        explode: true
        in: query
        name: step
        required: false
        schema:
          type: string
        style: form
      - example: example-time
        explode: true
        in: query
        name: time
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatapointsResponse'
          description: Datapoints returned successfully
        "400":
          description: Bad Request
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "422":
          description: Unprocessable Entity
        "503":
          description: Service Unavailable
      security:
      - ApiKeyAuth:
        - read:cloud
        - read:machine
      - CookieAuth:
        - read:cloud
        - read:machine
      summary: Get datapoints
      tags:
      - datapoints
  /api/v2/images:
    get:
      description: List images owned by the active org. READ permission required on
        image & cloud.
      operationId: list-images
      parameters:
      - examples:
          Filter by cloud id:
            value: 0194030499e74b02bdf68fa7130fb0b2
          Filter by cloud name:
            value: OSP10-new
          Filter by cloud provider:
            value: provider:digitalocean
        explode: true
        in: query
        name: cloud
        required: false
        schema:
          type: string
        style: form
      - description: Only return results matching search filter
        examples:
          Filter by OS type:
            value: os_type:windows
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImagesResponse'
          description: List images response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:image
        - read:cloud
      - CookieAuth:
        - read:image
        - read:cloud
      summary: List images
      tags:
      - images
      x-cli-table-default:
      - starred
      - name
      - cloud
      - os_type
      - tags
      x-cli-table-extended:
      - starred
      - id
      - external_id
      - name
      - cloud
      - os_type
      - tags
      - owned_by
      - created_by
  /api/v2/images/{image}:
    get:
      description: Get details about target image
      operationId: get-image
      parameters:
      - explode: false
        in: path
        name: image
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImageResponse'
          description: Image returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Image not found
      security:
      - ApiKeyAuth:
        - read:image
        - read:cloud
      - CookieAuth:
        - read:image
        - read:cloud
      summary: Get image
      tags:
      - images
      x-cli-table-default:
      - starred
      - name
      - cloud
      - os_type
      - tags
      x-cli-table-extended:
      - starred
      - id
      - external_id
      - name
      - cloud
      - os_type
      - tags
      - owned_by
      - created_by
  /api/v2/jobs/{job_id}:
    get:
      description: "null"
      operationId: get-job
      parameters:
      - explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobResponse'
          description: Job returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Job not found
      security:
      - ApiKeyAuth:
        - read:job
      - CookieAuth:
        - read:job
      summary: Get job
      tags:
      - jobs
  /api/v2/keys:
    get:
      description: List keys owned by the active org. READ permission required on
        key.
      operationId: list-keys
      parameters:
      - description: Only return results matching search filter
        examples:
          Filter by key type:
            value: type:ssh
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          (default) Automatically replace all foreign key ids with referenced resource name:
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference creator by email, owner by name:
            value: creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKeysResponse'
          description: List keys response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:key
      - CookieAuth:
        - read:key
      summary: List keys
      tags:
      - keys
      x-cli-table-default:
      - name
      - default
      - tags
      x-cli-table-extended:
      - id
      - name
      - default
      - tags
      - owned_by
      - created_by
    post:
      description: Adds a new key and returns the key's id. ADD permission required
        on key.
      operationId: add-key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddKeyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddKeyResponse'
          description: Key added succesfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - add:key
      - CookieAuth:
        - add:key
      summary: Add key
      tags:
      - keys
  /api/v2/keys/{key}:
    delete:
      description: Delete target key
      operationId: delete-key
      parameters:
      - example: example-key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: key deleted successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Key not found
      security:
      - ApiKeyAuth:
        - delete:key
      - CookieAuth:
        - delete:key
      summary: Delete key
      tags:
      - keys
    get:
      description: Get details about target key
      operationId: get-key
      parameters:
      - example: example-key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - description: Return the private key. Requires READ_PRIVATE permission on key.
        explode: true
        in: query
        name: private
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          (default) Automatically replace all foreign key ids with referenced resource name:
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference creator by email, owner by name:
            value: creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKeyResponse'
          description: Key returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Key not found
      security:
      - ApiKeyAuth:
        - read:key
      - CookieAuth:
        - read:key
      summary: Get key
      tags:
      - keys
      x-cli-table-default:
      - name
      - default
      - tags
      x-cli-table-extended:
      - id
      - name
      - default
      - tags
      - owned_by
      - created_by
    put:
      description: Edit target key
      operationId: edit-key
      parameters:
      - example: example-key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - description: New key name
        example: renamed-example-key
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Set as default
        explode: true
        in: query
        name: default
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          description: Key successfully updated
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Key not found
      security:
      - ApiKeyAuth:
        - edit:key
      - CookieAuth:
        - edit:key
      summary: Edit key
      tags:
      - keys
  /api/v2/locations:
    get:
      description: List locations owned by the active org. READ permission required
        on location & cloud.
      operationId: list-locations
      parameters:
      - examples:
          Filter by cloud id:
            value: 0194030499e74b02bdf68fa7130fb0b2
          Filter by cloud name:
            value: OSP10-new
          Filter by cloud provider:
            value: provider:digitalocean
        explode: true
        in: query
        name: cloud
        required: false
        schema:
          type: string
        style: form
      - description: Only return results matching search filter
        examples:
          Filter by location name:
            value: cinet3
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: List locations response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:cloud
      - CookieAuth:
        - read:cloud
      summary: List locations
      tags:
      - locations
      x-cli-table-default:
      - name
      - cloud
      x-cli-table-extended:
      - id
      - name
      - cloud
      - external_id
      - machines
  /api/v2/locations/{location}:
    get:
      description: Get details about target location
      operationId: get-location
      parameters:
      - explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLocationResponse'
          description: Location returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Location not found
      security:
      - ApiKeyAuth:
        - read:cloud
      - CookieAuth:
        - read:cloud
      summary: Get location
      tags:
      - locations
      x-cli-table-default:
      - name
      - cloud
      x-cli-table-extended:
      - id
      - name
      - cloud
      - locations
      - external_id
      - machines
  /api/v2/machines:
    get:
      description: List machines owned by the active org. READ permission required
        on machine & cloud.
      operationId: list-machines
      parameters:
      - examples:
          Filter by cloud id:
            value: 0194030499e74b02bdf68fa7130fb0b2
          Filter by cloud name:
            value: OSP10-new
          Filter by cloud provider:
            value: provider:digitalocean
        explode: true
        in: query
        name: cloud
        required: false
        schema:
          type: string
        style: form
      - description: Only return results matching search filter
        examples:
          Filter by machine type:
            value: state:running
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMachinesResponse'
          description: List machines response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:machine
        - read:cloud
      - CookieAuth:
        - read:machine
        - read:cloud
      summary: List machines
      tags:
      - machines
      x-cli-table-default:
      - name
      - cloud
      - state
      - tags
      x-cli-table-extended:
      - id
      - name
      - state
      - cloud
      - external_id
      - public_ips
      - tags
      - owned_by
      - created_by
    post:
      description: Creates one or more machines on the specified cloud. If async is
        true, a jobId will be returned. READ permission required on cloud. CREATE_RESOURCES
        permission required on cloud. READ permission required on location. CREATE_RESOURCES
        permission required on location. CREATE permission required on machine. RUN
        permission required on script. READ permission required on key.
      operationId: create-machine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMachineRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMachineResponse'
          description: Machine provisioning started
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - create:machine
        - read:cloud
        - create_resources:cloud
        - read:location
        - create_resources:location
        - read:image
        - create_resources:image
        - read:script
        - read:key
      - CookieAuth:
        - create:machine
        - read:cloud
        - create_resources:cloud
        - read:location
        - create_resources:location
        - read:image
        - create_resources:image
        - read:script
        - read:key
      summary: Create machine
      tags:
      - machines
  /api/v2/machines/{machine}:
    get:
      description: Get details about target machine
      operationId: get-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMachineResponse'
          description: Machine returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
      security:
      - ApiKeyAuth:
        - read:machine
        - read:cloud
      - CookieAuth:
        - read:machine
        - read:cloud
      summary: Get machine
      tags:
      - machines
      x-cli-table-default:
      - name
      - cloud
      - state
      - tags
      x-cli-table-extended:
      - id
      - name
      - state
      - cloud
      - external_id
      - public_ips
      - tags
      - owned_by
      - created_by
    put:
      description: Edit target machine
      operationId: edit-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      - description: New machine name
        example: renamed-example-machine
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Machine successfully updated
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
      security:
      - ApiKeyAuth:
        - edit:machine
      - CookieAuth:
        - edit:machine
      summary: Edit machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/associate-key:
    put:
      description: Associate a key with a machine.
      operationId: associate-key
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyMachineAssociation'
      responses:
        "200":
          description: Association successful
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine or Key not found
        "422":
          description: Action not supported on target machine
        "503":
          description: Could not connect to target machine
      security:
      - ApiKeyAuth:
        - associate_key:machine
        - read:cloud
        - read_private:key
      - CookieAuth:
        - associate_key:machine
        - read:cloud
        - read_private:key
      summary: Associate a key with a machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/clone:
    post:
      description: Clone target machine
      operationId: clone-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine clone issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - clone:machine
      - CookieAuth:
        - clone:machine
      summary: Clone machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/console:
    post:
      description: Open VNC console on target machine
      operationId: console
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine console opened successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - console:machine
      - CookieAuth:
        - console:machine
      summary: Open console
      tags:
      - machines
  /api/v2/machines/{machine}/actions/destroy:
    post:
      description: Destroy target machine
      operationId: destroy-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine destroy issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - destroy:machine
      - CookieAuth:
        - destroy:machine
      summary: Destroy machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/disassociate-key:
    delete:
      description: Disassociate a key from a machine.
      operationId: disassociate-key
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyMachineDisassociation'
      responses:
        "200":
          description: Disassociation successful
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine or Key not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - disassociate_key:machine
        - read:cloud
      - CookieAuth:
        - disassociate_key:machine
        - read:cloud
      summary: Disassociate a key from a machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/expose:
    post:
      description: Expose target machine
      operationId: expose-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine expose issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - expose:machine
      - CookieAuth:
        - expose:machine
      summary: Expose machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/reboot:
    post:
      description: Reboot target machine
      operationId: reboot-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine reboot issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - reboot:machine
      - CookieAuth:
        - reboot:machine
      summary: Reboot machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/rename:
    post:
      description: Rename target machine
      operationId: rename-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine renamed successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - rename:machine
      - CookieAuth:
        - rename:machine
      summary: Rename machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/resize:
    post:
      description: Resize target machine
      operationId: resize-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine resize issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - resize:machine
      - CookieAuth:
        - resize:machine
      summary: Resize machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/resume:
    post:
      description: Resume target machine
      operationId: resume-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine resume issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - resume:machine
      - CookieAuth:
        - resume:machine
      summary: Resume machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/ssh:
    post:
      description: Open secure shell on target machine
      operationId: ssh
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "302":
          description: Redirect to machine shell
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - read:cloud
        - read:machine
        - ssh:machine
      - CookieAuth:
        - read:cloud
        - read:machine
        - ssh:machine
      summary: Open secure shell
      tags:
      - machines
    x-cli-ignore: true
  /api/v2/machines/{machine}/actions/start:
    post:
      description: Start target machine
      operationId: start-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine start issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - start:machine
      - CookieAuth:
        - start:machine
      summary: Start machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/stop:
    post:
      description: Stop target machine
      operationId: stop-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine stop issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - stop:machine
      - CookieAuth:
        - stop:machine
      summary: Stop machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/suspend:
    post:
      description: Suspend target machine
      operationId: suspend-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine suspend issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - suspend:machine
      - CookieAuth:
        - suspend:machine
      summary: Suspend machine
      tags:
      - machines
  /api/v2/machines/{machine}/actions/undefine:
    post:
      description: Undefine target machine
      operationId: undefine-machine
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Machine undefine issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - undefine:machine
      - CookieAuth:
        - undefine:machine
      summary: Undefine machine
      tags:
      - machines
  /api/v2/machines/{machine}/snapshots:
    get:
      description: List snapshots of target machine
      operationId: list-snapshots
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
          description: List machine snapshots response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - read:machine
        - list_snapshots:machine
      - CookieAuth:
        - read:machine
        - list_snapshots:machine
      summary: List machine snapshots
      tags:
      - snapshots
    post:
      description: Create snapshots of target machine
      operationId: create-snapshot
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResponse'
          description: Create machine snapshot response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - read:machine
        - list_snapshots:machine
        - create_snapshots:machine
      - CookieAuth:
        - read:machine
        - list_snapshots:machine
        - create_snapshots:machine
      summary: Create snapshot
      tags:
      - snapshots
  /api/v2/machines/{machine}/snapshots/{snapshot}:
    delete:
      description: Remove target machine snapshot
      operationId: remove-snapshot
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      - example: example-snapshot
        explode: false
        in: path
        name: snapshot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Snapshot removed successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - read:machine
        - list_snapshots:machine
        - create_snapshots:machine
      - CookieAuth:
        - read:machine
        - list_snapshots:machine
        - create_snapshots:machine
      summary: Remove snapshot
      tags:
      - snapshots
    post:
      description: Revert machine to snapshot
      operationId: revert-to-snapshot
      parameters:
      - example: example-machine
        explode: false
        in: path
        name: machine
        required: true
        schema:
          type: string
        style: simple
      - example: example-snapshot
        explode: false
        in: path
        name: snapshot
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Revert machine to snapshot issued successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Machine not found
        "422":
          description: Action not supported on target machine
      security:
      - ApiKeyAuth:
        - read:machine
        - list_snapshots:machine
        - revert_to_snapshots:machine
      - CookieAuth:
        - read:machine
        - list_snapshots:machine
        - revert_to_snapshots:machine
      summary: Revert to snapshot
      tags:
      - snapshots
  /api/v2/networks:
    get:
      description: List networks owned by the active org. READ permission required
        on network & cloud.
      operationId: list-networks
      parameters:
      - examples:
          Filter by cloud id:
            value: 0194030499e74b02bdf68fa7130fb0b2
          Filter by cloud name:
            value: OSP10-new
          Filter by cloud provider:
            value: provider:digitalocean
        explode: true
        in: query
        name: cloud
        required: false
        schema:
          type: string
        style: form
      - description: Only return results matching search filter
        examples:
          Filter by network name:
            value: cinet3
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
          description: List networks response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:network
        - read:cloud
      - CookieAuth:
        - read:network
        - read:cloud
      summary: List networks
      tags:
      - networks
      x-cli-table-default:
      - name
      - cloud
      - machines
      - tags
      x-cli-table-extended:
      - id
      - name
      - cloud
      - external_id
      - machines
      - tags
      - owned_by
      - created_by
    post:
      description: Creates one or more networks on the specified cloud. If async is
        true, a jobId will be returned. READ permission required on cloud. CREATE_RESOURCES
        permission required on cloud. CREATE permission required on network.
      operationId: create-network
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNetworkResponse'
          description: Network provisioning started
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - create:network
        - read:cloud
        - create_resources:cloud
      - CookieAuth:
        - create:network
        - read:cloud
        - create_resources:cloud
      summary: Create network
      tags:
      - networks
  /api/v2/networks/{network}:
    get:
      description: Get details about target network
      operationId: get-network
      parameters:
      - example: example-network
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkResponse'
          description: Network returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Network not found
      security:
      - ApiKeyAuth:
        - read:network
        - read:cloud
      - CookieAuth:
        - read:network
        - read:cloud
      summary: Get network
      tags:
      - networks
      x-cli-table-default:
      - name
      - cloud
      - machines
      - tags
      x-cli-table-extended:
      - id
      - name
      - cloud
      - location
      - external_id
      - subnets
      - machines
      - tags
      - owned_by
      - created_by
    put:
      description: Edit target network
      operationId: edit-network
      parameters:
      - example: example-network
        explode: false
        in: path
        name: network
        required: true
        schema:
          type: string
        style: simple
      - description: New network name
        example: renamed-example-network
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Network successfully updated
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Network not found
      security:
      - ApiKeyAuth:
        - edit:network
      - CookieAuth:
        - edit:network
      summary: Edit network
      tags:
      - networks
  /api/v2/orgs:
    get:
      description: List orgs owned by the requester. If parameter allorgs is true
        and requester is an admin then all orgs will be listed.
      operationId: list-orgs
      parameters:
      - description: Return all existing organizations
        explode: true
        in: query
        name: allorgs
        required: false
        schema:
          type: string
        style: form
      - description: Only return results matching search filter
        examples:
          Filter by orgs by name:
            value: name:Acme
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 100 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return name, id, teams:
            value: name,id,teams
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          (default) Automatically replace all foreign key ids with referenced resource name:
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference teams:
            value: teams:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgsResponse'
          description: List orgs response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - ""
      - CookieAuth:
        - ""
      summary: List orgs
      tags:
      - orgs
      x-cli-table-default:
      - name
      - clouds_count
      - teams_count
      x-cli-table-extended:
      - name
      - id
      - clouds_count
      - teams_count
      - last_active
  /api/v2/orgs/{org}:
    get:
      description: Get details about target org
      operationId: get-org
      parameters:
      - example: example-org
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return name, id, teams:
            value: name,id,teams
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          (default) Automatically replace all foreign key ids with referenced resource name:
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference teams by name:
            value: teams:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrgResponse'
          description: Organization returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Org not found
      security:
      - ApiKeyAuth:
        - ""
      - CookieAuth:
        - ""
      summary: Get Org
      tags:
      - orgs
      - name
      - clouds_count
      - total_machine_count
      x-cli-table-extended:
      - name
      - id
      - clouds_count
      - total_machine_count
      - last_active
  /api/v2/orgs/{org}/members:
    get:
      description: List org members owned by the requester. The requester must be
        a member of the org.
      operationId: list-org-members
      parameters:
      - example: example-org
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: Only return results matching search filter
        examples:
          Filter by orgs by email:
            value: email:dev@mist.io
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return email, last name, registration date:
            value: email,last_name,registration_date
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgMembersResponse'
          description: List org members response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - ""
      - CookieAuth:
        - ""
      summary: List org members
      tags:
      - orgs
      - members
      x-cli-table-default:
      - email
      x-cli-table-extended:
      - email
      - id
      - last_login
      - registration_date
  /api/v2/orgs/{org}/members/{member}:
    get:
      description: Get details about target member
      operationId: get-member
      parameters:
      - example: example-org
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - example: example-member
        explode: false
        in: path
        name: member
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return email, last_name:
            value: email,last_name
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrgMemberResponse'
          description: member returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Org not found
      security:
      - ApiKeyAuth:
        - ""
      - CookieAuth:
        - ""
      summary: Get Org
      tags:
      - orgs
      x-cli-table-default:
      - email
      x-cli-table-extended:
      - email
      - id
      - last_login
      - registration_date
  /api/v2/orgs/{org}/teams:
    get:
      description: List teams in org.
      operationId: list-org-teams
      parameters:
      - description: Organization id
        example: example-org
        explode: false
        in: path
        name: org
        required: true
        schema:
          type: string
        style: simple
      - description: Only return results matching search filter
        examples:
          Filter by teams by name:
            value: name:finance
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return name, members:
            value: name,members
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          (default) Automatically replace all foreign key ids with referenced resource name:
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference members by email:
            value: members:email
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgTeamsResponse'
          description: List org teams response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - ""
      - CookieAuth:
        - ""
      summary: List org teams
      tags:
      - orgs
      - teams
      x-cli-table-default:
      - name
      - members_count
      x-cli-table-extended:
      - id
      - name
      - members_count
      - members
      - description
      - policy
  /api/v2/rules:
    get:
      description: Return a filtered list of rules
      operationId: list-rules
      parameters:
      - description: Only return results matching search filter
        examples:
          Filter by total_run_count:
            value: total_run_count:5
          Filter by name:
            value: rule-disk*
          Composite filter:
            value: provider:packet AND total_run_count:5
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
          description: List rules response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:rule
      - CookieAuth:
        - read:rule
      summary: List rules
      tags:
      - rules
      x-cli-table-default:
      - name
      - queries
      - actions
      - tags
      x-cli-table-extended:
      - id
      - name
      - resource_type
      - selectors
      - queries
      - actions
      - window
      - frequency
      - tags
    post:
      description: Add a new rule, READ permission required on target resource, ADD
        permission required on Rule
      operationId: add-rule
      parameters:
      - explode: true
        in: query
        name: queries
        required: true
        schema:
          $ref: '#/components/schemas/Queries'
        style: form
      - explode: true
        in: query
        name: window
        required: true
        schema:
          $ref: '#/components/schemas/Window'
        style: form
      - explode: true
        in: query
        name: frequency
        required: true
        schema:
          $ref: '#/components/schemas/Frequency'
        style: form
      - explode: true
        in: query
        name: trigger_after
        required: true
        schema:
          $ref: '#/components/schemas/TriggerAfter'
        style: form
      - explode: true
        in: query
        name: actions
        required: true
        schema:
          $ref: '#/components/schemas/RuleActions'
        style: form
      - explode: true
        in: query
        name: selectors
        required: true
        schema:
          $ref: '#/components/schemas/Selector'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: Rule added succesfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - add:rule
      - CookieAuth:
        - add:rule
      summary: Add rule
      tags:
      - rules
  /api/v2/rules/{rule}:
    delete:
      description: Delete a rule given its UUID.
      operationId: delete-rule
      parameters:
      - example: example-rule
        explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Rule deleted successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Rule not found
      security:
      - ApiKeyAuth:
        - delete:rule
      - CookieAuth:
        - delete:rule
      summary: Delete rule
      tags:
      - rules
    get:
      description: Get details about target rule
      operationId: get-rule
      parameters:
      - example: example-rule
        explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRuleResponse'
          description: Rule returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Rule not found
      security:
      - ApiKeyAuth:
        - read:rule
      - CookieAuth:
        - read:rule
      summary: Get rule
      tags:
      - rules
      x-cli-table-default:
      - name
      - queries
      - actions
      - tags
      x-cli-table-extended:
      - id
      - name
      - resource_type
      - selectors
      - queries
      - actions
      - window
      - frequency
      - tags
    patch:
      description: Rename a rule
      operationId: rename-rule
      parameters:
      - example: example-rule
        explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      - example: renamed-example-rule
        explode: true
        in: query
        name: action
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Rule renamed successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Rule not found
      security:
      - ApiKeyAuth:
        - write:rule
      - CookieAuth:
        - write:rule
      summary: Rename rule
      tags:
      - rules
    post:
      description: Update a rule given its UUID, EDIT permission required on rule
      operationId: update-rule
      parameters:
      - explode: true
        in: query
        name: queries
        required: false
        schema:
          $ref: '#/components/schemas/Queries'
        style: form
      - explode: true
        in: query
        name: window
        required: false
        schema:
          $ref: '#/components/schemas/Window'
        style: form
      - explode: true
        in: query
        name: frequency
        required: false
        schema:
          $ref: '#/components/schemas/Frequency'
        style: form
      - explode: true
        in: query
        name: trigger_after
        required: false
        schema:
          $ref: '#/components/schemas/TriggerAfter'
        style: form
      - explode: true
        in: query
        name: actions
        required: false
        schema:
          $ref: '#/components/schemas/RuleActions'
        style: form
      - explode: true
        in: query
        name: selectors
        required: false
        schema:
          $ref: '#/components/schemas/Selector'
        style: form
      - example: example-rule
        explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: Rule updated succesfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Rule not found
      security:
      - ApiKeyAuth:
        - read:cloud
        - edit:rule
      - CookieAuth:
        - read:cloud
        - edit:rule
      summary: Update rule
      tags:
      - rules
    put:
      description: Enable or disable a rule
      operationId: toggle-rule
      parameters:
      - example: example-rule
        explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      - example: example-action
        explode: true
        in: query
        name: action
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Rule toggled successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Rule not found
      security:
      - ApiKeyAuth:
        - write:rule
      - CookieAuth:
        - write:rule
      summary: Toggle rule
      tags:
      - rules
  /api/v2/scripts:
    get:
      description: List scripts owned by the active org. READ permission required
        on script.
      operationId: list-scripts
      parameters:
      - description: Only return results matching search filter
        examples:
          Filter by script name:
            value: install-tensorflow
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 3rd result:
            value: "3"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & created_by:
            value: id,name,created_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference creator by email, owner by name:
            value: creator:email, owned_by:name'
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScriptsResponse'
          description: List scripts response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:script
      - CookieAuth:
        - read:script
      summary: List scripts
      tags:
      - scripts
      x-cli-table-default:
      - name
      - tags
      x-cli-table-extended:
      - id
      - name
      - description
      - tags
      - owned_by
      - created_by
  /api/v2/scripts/{script}:
    delete:
      description: Delete target script
      operationId: delete-script
      parameters:
      - example: example-script
        explode: false
        in: path
        name: script
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Script deleted successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Script not found
      security:
      - ApiKeyAuth:
        - delete:script
      - CookieAuth:
        - delete:script
      summary: Delete script
      tags:
      - scripts
    get:
      description: Get details about target script
      operationId: get-script
      parameters:
      - example: example-script
        explode: false
        in: path
        name: script
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference creator by email, owner by name:
            value: creator:email, owned_by:name'
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScriptResponse'
          description: Script returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Script not found
      security:
      - ApiKeyAuth:
        - read:script
      - CookieAuth:
        - read:script
      summary: Get script
      tags:
      - scripts
      x-cli-table-default:
      - name
      - tags
      x-cli-table-extended:
      - id
      - name
      - description
      - tags
      - owned_by
      - created_by
    put:
      description: Edit target script
      operationId: edit-script
      parameters:
      - example: example-script
        explode: false
        in: path
        name: script
        required: true
        schema:
          type: string
        style: simple
      - description: New script name
        example: example-script
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: New script description
        explode: true
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Script successfully updated
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Script not found
      security:
      - ApiKeyAuth:
        - edit:script
      - CookieAuth:
        - edit:script
      summary: Edit script
      tags:
      - scripts
  /api/v2/sizes:
    get:
      description: List sizes owned by the active org. READ permission required on
        size & cloud.
      operationId: list-sizes
      parameters:
      - examples:
          Filter by cloud id:
            value: 0194030499e74b02bdf68fa7130fb0b2
          Filter by cloud name:
            value: OSP10-new
          Filter by cloud provider:
            value: provider:digitalocean
        explode: true
        in: query
        name: cloud
        required: false
        schema:
          type: string
        style: form
      - description: Only return results matching search filter
        examples:
          Filter by size name:
            value: cinet3
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSizesResponse'
          description: List sizes response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:cloud
      - CookieAuth:
        - read:cloud
      summary: List sizes
      tags:
      - sizes
      x-cli-table-default:
      - name
      - cloud
      x-cli-table-extended:
      - id
      - name
      - cloud
      - external_id
      - machines
  /api/v2/sizes/{size}:
    get:
      description: Get details about target size
      operationId: get-size
      parameters:
      - example: example-size
        explode: false
        in: path
        name: size
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSizeResponse'
          description: Size returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Size not found
      security:
      - ApiKeyAuth:
        - read:cloud
      - CookieAuth:
        - read:cloud
      summary: Get size
      tags:
      - sizes
      x-cli-table-default:
      - name
      - cloud
      x-cli-table-extended:
      - id
      - name
      - cloud
      - locations
      - external_id
      - machines
  /api/v2/users:
    get:
      description: Return current user if requester is not admin. Return all users
        for admin.
      operationId: list-users
      parameters:
      - description: Only return results matching search filter
        examples:
          Filter by email:
            value: email:dev@mist.io
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return email, last_login & registration_date:
            value: email,last_login,registration_date
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: List users response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - ""
      - CookieAuth:
        - ""
      summary: List users
      tags:
      - users
      x-cli-table-default:
      - email
      x-cli-table-extended:
      - email
      - id
      - last_login
      - registration_date
  /api/v2/volumes:
    get:
      description: List volumes owned by the active org. READ permission required
        on volume & cloud.
      operationId: list-volumes
      parameters:
      - examples:
          Filter by cloud id:
            value: 0194030499e74b02bdf68fa7130fb0b2
          Filter by cloud name:
            value: OSP10-new
          Filter by cloud provider:
            value: provider:digitalocean
        explode: true
        in: query
        name: cloud
        required: false
        schema:
          type: string
        style: form
      - description: Only return results matching search filter
        examples:
          Filter by volume location:
            value: location:Amsterdam
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumesResponse'
          description: List volumes response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:volume
        - read:cloud
      - CookieAuth:
        - read:volume
        - read:cloud
      summary: List volumes
      tags:
      - volumes
      x-cli-table-default:
      - name
      - size
      - cloud
      - location
      - attached_to
      - tags
      x-cli-table-extended:
      - id
      - name
      - size
      - cloud
      - location
      - external_id
      - attached_to
      - tags
      - owned_by
      - created_by
    post:
      description: Creates one or more volumes on the specified cloud. If async is
        true, a jobId will be returned. READ permission required on cloud. CREATE_RESOURCES
        permission required on cloud. READ permission required on location. CREATE_RESOURCES
        permission required on location. CREATE permission required on volume.
      operationId: create-volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVolumeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVolumeResponse'
          description: Volume provisioning started
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - create:volume
        - read:cloud
        - create_resources:cloud
        - read:location
        - create_resources:location
      - CookieAuth:
        - create:volume
        - read:cloud
        - create_resources:cloud
        - read:location
        - create_resources:location
      summary: Create volume
      tags:
      - volumes
  /api/v2/volumes/{volume}:
    delete:
      description: Delete target volume
      operationId: delete-volume
      parameters:
      - example: example-volume
        explode: false
        in: path
        name: volume
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Volume successfully deleted
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Volume not found
      security:
      - ApiKeyAuth:
        - read:volume
        - delete:volume
        - read:cloud
      - CookieAuth:
        - read:volume
        - delete:volume
        - read:cloud
      summary: Delete volume
      tags:
      - volumes
    get:
      description: Get details about target volume
      operationId: get-volume
      parameters:
      - example: example-volume
        explode: false
        in: path
        name: volume
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVolumeResponse'
          description: Volume returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Volume not found
      security:
      - ApiKeyAuth:
        - read:volume
        - read:cloud
      - CookieAuth:
        - read:volume
        - read:cloud
      summary: Get volume
      tags:
      - volumes
      x-cli-table-default:
      - name
      - size
      - cloud
      - location
      - attached_to
      - tags
      x-cli-table-extended:
      - id
      - name
      - size
      - cloud
      - location
      - external_id
      - attached_to
      - tags
      - owned_by
      - created_by
    put:
      description: Edit target volume
      operationId: edit-volume
      parameters:
      - example: example-volume
        explode: false
        in: path
        name: volume
        required: true
        schema:
          type: string
        style: simple
      - description: New volume name
        example: renamed-example-volume
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Volume successfully updated
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Volume not found
      security:
      - ApiKeyAuth:
        - edit:volume
        - read:cloud
      - CookieAuth:
        - edit:volume
        - read:cloud
      summary: Edit volume
      tags:
      - volumes
  /api/v2/zones:
    get:
      description: List zones owned by the active org. READ permission required on
        zone & cloud.
      operationId: list-zones
      parameters:
      - examples:
          Filter by cloud id:
            value: 0194030499e74b02bdf68fa7130fb0b2
          Filter by cloud name:
            value: OSP10-new
          Filter by cloud provider:
            value: provider:digitalocean
        explode: true
        in: query
        name: cloud
        required: false
        schema:
          type: string
        style: form
      - description: Only return results matching search filter
        examples:
          Filter by zone name:
            value: cinet3
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Order results by
        examples:
          Sort by name, descending:
            value: -name
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Start results from index or id
        examples:
          Start from the 50th result:
            value: "50"
          Start from item with id xyz:
            value: xyz
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: Limit number of results, 1000 max
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListZonesResponse'
          description: List zones response
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - read:zone
        - read:cloud
      - CookieAuth:
        - read:zone
        - read:cloud
      summary: List zones
      tags:
      - zones
      x-cli-table-default:
      - name
      - cloud
      - machines
      - tags
      x-cli-table-extended:
      - id
      - name
      - cloud
      - external_id
      - machines
      - tags
      - owned_by
      - created_by
    post:
      description: Creates one or more zones on the specified cloud. If async is true,
        a jobId will be returned. READ permission required on cloud. CREATE_RESOURCES
        permission required on cloud. CREATE permission required on zone.
      operationId: create-zone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateZoneRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateZoneResponse'
          description: Zone provisioning started
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
      security:
      - ApiKeyAuth:
        - create:zone
        - read:cloud
        - create_resources:cloud
      - CookieAuth:
        - create:zone
        - read:cloud
        - create_resources:cloud
      summary: Create zone
      tags:
      - zones
  /api/v2/zones/{zone}:
    get:
      description: Get details about target zone
      operationId: get-zone
      parameters:
      - example: example-zone
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: Only return these fields
        examples:
          Only return id:
            value: id
          Return id, name & owned_by:
            value: id,name,owned_by
        explode: true
        in: query
        name: only
        required: false
        schema:
          type: string
        style: form
      - description: Dereference foreign keys
        examples:
          '(default) Automatically replace all foreign key ids with referenced resource name ':
            value: auto
          Do not dereference anything, just return ids:
            value: none
          Dereference cloud id to cloud provider:
            value: cloud:provider
          Dereference cloud by provider, creator by email, owner by name:
            value: cloud:provider, creator:email, owned_by:name
        explode: true
        in: query
        name: deref
        required: false
        schema:
          default: auto
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZoneResponse'
          description: Zone returned successfully
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Zone not found
      security:
      - ApiKeyAuth:
        - read:zone
        - read:cloud
      - CookieAuth:
        - read:zone
        - read:cloud
      summary: Get zone
      tags:
      - zones
      x-cli-table-default:
      - name
      - cloud
      - machines
      - tags
      x-cli-table-extended:
      - id
      - name
      - cloud
      - location
      - external_id
      - subnets
      - machines
      - tags
      - owned_by
      - created_by
    put:
      description: Edit target zone
      operationId: edit-zone
      parameters:
      - example: example-zone
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: New zone name
        example: renamed-example-zone
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Zone successfully updated
        "401":
          description: Authentication failed
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Zone not found
      security:
      - ApiKeyAuth:
        - edit:zone
      - CookieAuth:
        - edit:zone
      summary: Edit zone
      tags:
      - zones
components:
  callbacks: {}
  examples: {}
  headers: {}
  links: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    AddCloudRequest:
      allOf:
      - $ref: '#/components/schemas/AddCloudRequest_allOf'
      - discriminator:
          mapping:
            amazon: '#/components/schemas/AmazonCloudRequest'
            azure: '#/components/schemas/AzureCloudRequest'
            google: '#/components/schemas/GoogleCloudRequest'
            cloudsigma: '#/components/schemas/CloudSigmaCloudRequest'
            alibaba: '#/components/schemas/AlibabaCloudRequest'
            equinix: '#/components/schemas/EquinixCloudRequest'
            ibm: '#/components/schemas/IbmCloudRequest'
            linode: '#/components/schemas/LinodeCloudRequest'
            rackspace: '#/components/schemas/RackspaceCloudRequest'
            maxihost: '#/components/schemas/MaxihostCloudRequest'
            vultr: '#/components/schemas/VultrCloudRequest'
            openstack: '#/components/schemas/OpenstackCloudRequest'
            onapp: '#/components/schemas/OnappCloudRequest'
            vsphere: '#/components/schemas/VsphereCloudRequest'
            kvm: '#/components/schemas/KvmCloudRequest'
            lxd: '#/components/schemas/LxdCloudRequest'
            docker: '#/components/schemas/DockerCloudRequest'
            kubernetes: '#/components/schemas/KubernetesCloudRequest'
            kubevirt: '#/components/schemas/KubevirtCloudRequest'
            openshift: '#/components/schemas/OpenshiftCloudRequest'
            other: '#/components/schemas/OtherCloudRequest'
          propertyName: provider
        oneOf:
        - $ref: '#/components/schemas/AmazonCloudRequest'
        - $ref: '#/components/schemas/AzureCloudRequest'
        - $ref: '#/components/schemas/GoogleCloudRequest'
        - $ref: '#/components/schemas/AlibabaCloudRequest'
        - $ref: '#/components/schemas/CloudSigmaCloudRequest'
        - $ref: '#/components/schemas/EquinixCloudRequest'
        - $ref: '#/components/schemas/IbmCloudRequest'
        - $ref: '#/components/schemas/DigitaloceanCloudRequest'
        - $ref: '#/components/schemas/LinodeCloudRequest'
        - $ref: '#/components/schemas/RackspaceCloudRequest'
        - $ref: '#/components/schemas/MaxihostCloudRequest'
        - $ref: '#/components/schemas/VultrCloudRequest'
        - $ref: '#/components/schemas/OpenstackCloudRequest'
        - $ref: '#/components/schemas/OnappCloudRequest'
        - $ref: '#/components/schemas/VsphereCloudRequest'
        - $ref: '#/components/schemas/KvmCloudRequest'
        - $ref: '#/components/schemas/LxdCloudRequest'
        - $ref: '#/components/schemas/DockerCloudRequest'
        - $ref: '#/components/schemas/KubernetesCloudRequest'
        - $ref: '#/components/schemas/KubevirtCloudRequest'
        - $ref: '#/components/schemas/OpenshiftCloudRequest'
        - $ref: '#/components/schemas/OtherCloudRequest'
      example:
        name: example-cloud
        provider: google
        credentials:
          projectId: projectId
          privateKey: privateKey
          email: email
    AddKeyRequest:
      anyOf:
      - $ref: '#/components/schemas/AddKeyRequest_anyOf'
      - $ref: '#/components/schemas/AddKeyRequest_anyOf_1'
      - $ref: '#/components/schemas/AddKeyRequest_anyOf_2'
      example:
        name: example-key
        private: '-----BEGIN RSA PRIVATE KEY----- MIICXAIBAAKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri0cb2JZfXJ/DgYSF6vUp
          wmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/3j+skZ6UtW+5u09lHNsj6tQ5
          1s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQABAoGAFijko56+qGyN8M0RVyaRAXz++xTqHBLh
          3tx4VgMtrQ+WEgCjhoTwo23KMBAuJGSYnRmoBZM3lMfTKevIkAidPExvYCdm5dYq3XToLkkLv5L2
          pIIVOFMDG+KESnAFV7l2c+cnzRMW0+b6f8mR1CJzZuxVLL6Q02fvLi55/mbSYxECQQDeAw6fiIQX
          GukBI4eMZZt4nscy2o12KyYner3VpoeE+Np2q+Z3pvAMd/aNzQ/W9WaI+NRfcxUJrmfPwIGm63il
          AkEAxCL5HQb2bQr4ByorcMWm/hEP2MZzROV73yF41hPsRC9m66KrheO9HPTJuo3/9s5p+sqGxOlF
          L0NDt4SkosjgGwJAFklyR1uZ/wPJjj611cdBcztlPdqoxssQGnh85BzCj/u3WqBpE2vjvyyvyI5k
          X6zk7S0ljKtt2jny2+00VsBerQJBAJGC1Mg5Oydo5NwD6BiROrPxGo2bpTbu/fhrT8ebHkTz2epl
          U9VQQSQzY1oZMVX8i1m5WUTLPz2yLJIBQVdXqhMCQBGoiuSoSjafUhV7i1cEGpb88h5NBYZzWXGZ
          37sJ5QsW+sJyoNde3xH8vdXhzU7eT82D6X/scw9RZz+/6rCJ4p0= -----END RSA PRIVATE
          KEY-----'
      type: object
    AddKeyResponse:
      example:
        private: private
        public: public
        id: id
      properties:
        id:
          type: string
        private:
          type: string
        public:
          type: string
      type: object
    AlibabaCloudRequest:
      properties:
        provider:
          enum:
          - alibaba
          type: string
        credentials:
          $ref: '#/components/schemas/AlibabaCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    AlibabaCredentials:
      properties:
        apikey:
          description: Your Alibaba Cloud API key
          type: string
        apisecret:
          description: Your Alibaba Cloud API secret
          type: string
        region:
          description: Your Alibaba Cloud region
          type: string
      required:
      - apikey
      - apisecret
      - region
      type: object
    AlibabaNet:
      properties:
        network:
          description: Name or ID of an existing network to associate the machine
            with. If not provided, one existing network will be selected.
          type: string
        subnet:
          description: Name or ID of an existing or new subnet(switch) to launch the
            machine into. If not provided a default 'mistio' subnet will be created.
          type: string
        security_group:
          description: Name of the security group to assign to the machine. If not
            provided a default 'mistio' security group will be created.
          type: string
      title: Alibaba net parameter
      type: object
    AlibabaVolumes:
      items:
        oneOf:
        - properties:
            volume:
              description: Name or ID of an existing volume to attach
              type: string
            delete_on_termination:
              description: Delete the volume when the machine is deleted. Defaults
                to false
              type: boolean
          required:
          - volume
        - properties:
            name:
              description: Name of the volume to be created
              type: string
            size:
              description: Size of the volume in GBs. The minimum size depends on
                the volume type
              type: integer
            delete_on_termination:
              description: Delete the volume when the machine is deleted. Defaults
                to false
              type: boolean
            type:
              description: Type of the volume to create, defaults to 'cloud'
              enum:
              - cloud
              - cloud_efficiency
              - cloud_ssd
              - cloud_essd
              type: string
          required:
          - name
          - size
        type: object
      title: Alibaba volumes parameter
      type: array
    AmazonCloudRequest:
      properties:
        provider:
          enum:
          - amazon
          type: string
        credentials:
          $ref: '#/components/schemas/AmazonCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    AmazonClusterRequest:
      properties:
        provider:
          enum:
          - amazon
          type: string
        role_arn:
          description: The Amazon Resource Name (ARN) of the IAM role that provides
            permissions for the Kubernetes control plane to make calls to AWS API
            operations on your behalf
          type: string
        vpc_id:
          description: The VPC associated with the cluster
          type: string
        subnet_ids:
          description: The subnets associated with the cluster
          items:
            type: string
          type: array
        security_group_ids:
          description: The security groups associated with the cross-account elastic
            network interfaces that are used to allow communication between your nodes
            and the Kubernetes control plane
          items:
            type: string
          type: array
      required:
      - provider
      - role_arn
      - security_group_ids
      - subnet_ids
      - vpc_id
      type: object
    AmazonCredentials:
      properties:
        apikey:
          description: Your AWS API key
          type: string
        apisecret:
          description: Your AWS API secret
          type: string
        region:
          description: Your AWS region
          type: string
      required:
      - apikey
      - apisecret
      - region
      type: object
    AmazonNet:
      properties:
        security_group:
          description: Security group to assign to the machine
          type: string
        subnet:
          description: Name or ID of the subnet to launch the machine into
          type: string
      title: Amazon net parameter
      type: object
    AmazonVolumes:
      items:
        oneOf:
        - properties:
            volume:
              description: Name or ID of the volume
              type: string
            device:
              description: The device name (for example, /dev/sdh or xvdh)
              type: string
          required:
          - device
          - volume
        - properties:
            name:
              description: The device name (for example, /dev/sdh or xvdh)
              type: string
            size:
              description: Size of the volume in GBs
              type: integer
            volume_type:
              enum:
              - gp2
              - io1
              - st1
              - sc1
              - standard
              type: string
            iops:
              description: Number of I/O operations per second
              type: integer
            delete_on_termination:
              description: Delete volume when machine is deleted
              type: boolean
          required:
          - name
          - size
        type: object
      title: Amazon volumes parameter
      type: array
    AzureCloudRequest:
      properties:
        provider:
          enum:
          - azure
          type: string
        credentials:
          $ref: '#/components/schemas/AzureCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    AzureCredentials:
      properties:
        tenantId:
          description: Your Azure tenant ID
          type: string
        subscriptionId:
          description: Your Azure subscription ID
          type: string
        key:
          description: Your Azure key
          type: string
        secret:
          description: Your Azure secret
          type: string
      required:
      - key
      - secret
      - subscriptionId
      - tenantId
      type: object
    AzureExtra:
      properties:
        resource_group:
          description: A new or existing resource group. If not provided a `mist`
            resource group will be used.
          type: string
        storage_account_type:
          description: Specifies the storage account type for the OS disk. Defaults
            to `StandardSSD_LRS`
          enum:
          - Premium_LRS
          - Premium_ZRS
          - StandardSSD_LRS
          - StandardSSD_ZRS
          - Standard_LRS
          type: string
        user:
          description: The machine username. Defaults to azureuser
          type: string
        password:
          description: The machine password. Only used on Microsoft images
          type: string
      title: Azure extra parameter
      type: object
    AzureNet:
      properties:
        network:
          description: A new or existing network If not provided a `mist-resource_group-location`
            network will be used.
          type: string
      title: Azure net parameter
      type: object
    AzureVolumes:
      items:
        oneOf:
        - properties:
            volume:
              description: Name or ID of the volume to attach
              type: string
          required:
          - volume
        - properties:
            name:
              description: Name of the volume to be created
              type: string
            size:
              description: Size of the volume to be created in GBs
              type: integer
            caching_type:
              description: Specifies the caching requirements
              enum:
              - None
              - ReadOnly
              - ReadWrite
              type: string
            storage_account_type:
              description: Specifies the storage account type for the managed volume.
                Defaults to `StandardSSD_LRS`
              enum:
              - Premium_LRS
              - Premium_ZRS
              - StandardSSD_LRS
              - StandardSSD_ZRS
              - Standard_LRS
              - UltraSSD_LRS
              type: string
          required:
          - name
          - size
        type: object
      title: Azure volumes parameter
      type: array
    Cloud:
      example:
        features:
          compute: true
          container: false
          dns: false
        name: name
        owned_by: owned_by
        id: id
        config: '{}'
        created_by: created_by
        tags: '{}'
      properties:
        id:
          type: string
        name:
          type: string
        provider:
          $ref: '#/components/schemas/SupportedProviders'
        config:
          type: object
        features:
          $ref: '#/components/schemas/CloudFeatures'
        tags:
          type: object
        created_by:
          type: string
        owned_by:
          type: string
      type: object
    CloudFeatures:
      description: The cloud features that should be enabled
      example:
        compute: true
        container: false
        dns: false
      properties:
        compute:
          default: true
          description: Enable compute services
          type: boolean
        dns:
          default: false
          description: Enable DNS services
          type: boolean
        container:
          default: false
          description: Enable container services
          type: boolean
      type: object
    CloudSigmaCloudRequest:
      properties:
        provider:
          enum:
          - cloudsigma
          type: string
        credentials:
          $ref: '#/components/schemas/CloudSigmaCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    CloudSigmaCredentials:
      properties:
        username:
          description: Your CloudSigma username
          type: string
        password:
          description: Your CloudSigma password
          type: string
        region:
          description: Your CloudSigma region
          type: string
      required:
      - password
      - region
      - username
      type: object
    Cluster:
      example:
        credentials: '{}'
        total_cpus: 6
        owned_by: owned_by
        created_by: created_by
        tags: '{}'
        cloud: cloud
        total_memory: 1
        extra: '{}'
        name: name
        total_nodes: 0
        location: location
        id: id
        config: '{}'
      properties:
        id:
          type: string
        name:
          type: string
        cloud:
          type: string
        provider:
          $ref: '#/components/schemas/ClusterProviders'
        total_nodes:
          type: integer
        total_cpus:
          type: integer
        total_memory:
          type: integer
        location:
          type: string
        credentials:
          type: object
        config:
          type: object
        tags:
          type: object
        created_by:
          type: string
        owned_by:
          type: string
        extra:
          type: object
      type: object
    ClusterProviders:
      description: The cloud provider of the cluster
      enum:
      - amazon
      - azure
      - digitalocean
      - google
      - kubernetes
      - openshift
      - linode
      type: string
    CreateClusterRequest:
      allOf:
      - $ref: '#/components/schemas/CreateClusterRequest_allOf'
      - discriminator:
          mapping:
            amazon: '#/components/schemas/AmazonClusterRequest'
            google: '#/components/schemas/GoogleClusterRequest'
          propertyName: provider
        oneOf:
        - $ref: '#/components/schemas/AmazonClusterRequest'
        - $ref: '#/components/schemas/GoogleClusterRequest'
      example:
        name: example-cluster
        cloud: example-cloud
        provider: google
        location: example-location
    CreateMachineRequest:
      example:
        name: example-machine
        size: example-size
        image: example-image
      properties:
        name:
          description: Specify machine name
          type: string
        provider:
          $ref: '#/components/schemas/SupportedProviders'
        cloud:
          description: Specify cloud to provision on
          type: string
        location:
          description: Where to provision e.g. region, datacenter, rack
          type: string
        size:
          description: Machine sizing spec e.g. cpu/ram/flavor
          oneOf:
          - properties:
              cpus:
                description: Number of cpu cores. Mutually exclusive with 'size'
                minimum: 1
                type: integer
              ram:
                description: Ram size in MBs. Mutually exclusive with 'size'
                minimum: 256
                type: integer
              size:
                description: Name or ID of the size to select for this machine. Mutually
                  exclusive with 'cpus' and 'ram'
                type: string
              accelerators:
                description: Google specific parameter
                properties:
                  accelerator_type:
                    description: Accelerator type to attach to this machine. e.g.
                      'nvidia-tesla-p100'
                    type: string
                  accelerator_count:
                    description: The number of the accelerator cards exposed to this
                      instance
                    type: integer
                type: object
            type: object
          - description: Name or ID of the size to select for this machine
            type: string
        image:
          description: Operating System image to boot from
          oneOf:
          - type: object
          - description: Name or ID of the image to boot from
            type: string
        net:
          anyOf:
          - $ref: '#/components/schemas/AlibabaNet'
          - $ref: '#/components/schemas/AmazonNet'
          - $ref: '#/components/schemas/AzureNet'
          - $ref: '#/components/schemas/EquinixMetalNet'
          - $ref: '#/components/schemas/GoogleNet'
          - $ref: '#/components/schemas/KVMNet'
          - $ref: '#/components/schemas/LinodeNet'
          - $ref: '#/components/schemas/OpenstackNet'
          - $ref: '#/components/schemas/VSphereNet'
          - $ref: '#/components/schemas/VultrNet'
          description: Specify network configuration parameters
        key:
          description: Associate SSH key
          oneOf:
          - properties:
              key:
                description: Name or ID of the SSH key to deploy
                type: string
              user:
                description: SSH user, supported on Google
                type: string
            type: object
          - description: Name or ID of the SSH key to deploy
            type: string
        disks:
          $ref: '#/components/schemas/CreateMachineRequest_disks'
        volumes:
          anyOf:
          - $ref: '#/components/schemas/AlibabaVolumes'
          - $ref: '#/components/schemas/AmazonVolumes'
          - $ref: '#/components/schemas/AzureVolumes'
          - $ref: '#/components/schemas/DigitalOceanVolumes'
          - $ref: '#/components/schemas/EquinixMetalVolumes'
          - $ref: '#/components/schemas/GoogleVolumes'
          - $ref: '#/components/schemas/LinodeVolumes'
          - $ref: '#/components/schemas/OpenstackVolumes'
          - $ref: '#/components/schemas/VultrVolumes'
          description: Configure of attached storage volumes, e.g. cloud disks
        fqdn:
          description: Add DNS A Record that points machine's public IP to this Fully
            Qualified Domain Name. Zone needs to be managed by a configured Cloud
            DNS provider
          type: string
        cloudinit:
          description: Run this Cloud Init script on first boot
          type: string
        scripts:
          description: Run post deploy scripts over SSH
          items:
            allOf:
            - type: object
            - oneOf:
              - $ref: '#/components/schemas/InlineScript'
              - $ref: '#/components/schemas/PostDeployScript'
          type: array
        schedules:
          description: Configure scheduled actions for the provisioned machine
          items:
            allOf:
            - properties:
                schedule_type:
                  enum:
                  - one_off
                  - crontab
                  - interval
                  type: string
                script:
                  $ref: '#/components/schemas/PostDeployScript'
                action:
                  enum:
                  - start
                  - stop
                  - reboot
                  - destroy
                  type: string
                description:
                  type: string
              required:
              - schedule_type
              type: object
            - discriminator:
                mapping:
                  one_off: '#/components/schemas/OneOffSchedule'
                  crontab: '#/components/schemas/CronSchedule'
                  interval: '#/components/schemas/IntervalSchedule'
                propertyName: schedule_type
              oneOf:
              - $ref: '#/components/schemas/OneOffSchedule'
              - $ref: '#/components/schemas/CronSchedule'
              - $ref: '#/components/schemas/IntervalSchedule'
          type: array
        tags:
          description: Assign tags to provisioned machine
          type: object
        expiration:
          $ref: '#/components/schemas/Expiration'
        extra:
          anyOf:
          - $ref: '#/components/schemas/AzureExtra'
          - $ref: '#/components/schemas/EquinixMetalExtra'
          - $ref: '#/components/schemas/LinodeExtra'
          - $ref: '#/components/schemas/VSphereExtra'
          - $ref: '#/components/schemas/VultrExtra'
          description: Configure additional parameters
        monitoring:
          description: Enable monitoring of this machine
          type: boolean
        quantity:
          description: Provision multiple machines of this type
          type: number
        template:
          type: object
        dry:
          description: Return provisioning plan and exit without executing it
          type: boolean
        save:
          description: Save provisioning plan as template
          type: boolean
      required:
      - image
      - name
      - size
      type: object
    CreateMachineResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateMachineResponse_oneOf'
      - $ref: '#/components/schemas/CreateMachineResponse_oneOf_1'
      type: object
    CreateNetworkRequest:
      example:
        name: example-network
        cloud: example-cloud
      properties:
        name:
          description: Specify network name
          type: string
        cloud:
          description: Specify cloud to provision on
          type: string
        tags:
          description: Assign tags to provisioned network
          type: object
        extra:
          description: Configure additional parameters
          type: object
        template:
          type: object
        dry:
          description: Return provisioning plan and exit without executing it
          type: boolean
        save:
          description: Save provisioning plan as template
          type: boolean
      required:
      - cloud
      - name
      type: object
    CreateNetworkResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateMachineResponse_oneOf'
      - $ref: '#/components/schemas/CreateMachineResponse_oneOf_1'
      type: object
    CreateSnapshotResponse:
      type: object
    CreateVolumeRequest:
      example:
        name: example-volume
        size: example-size
      properties:
        name:
          description: Specify volume name
          type: string
        provider:
          $ref: '#/components/schemas/SupportedProviders'
        cloud:
          description: Specify cloud to provision on
          type: string
        location:
          description: Where to provision e.g. region, datacenter, rack
          type: string
        size:
          description: Volume sizing spec
          type: object
        tags:
          description: Assign tags to provisioned volume
          type: object
        extra:
          description: Configure additional parameters
          type: object
        quantity:
          description: Provision multiple volumes of this type
          type: number
        template:
          type: object
        dry:
          description: Return provisioning plan and exit without executing it
          type: boolean
        save:
          description: Save provisioning plan as template
          type: boolean
      required:
      - name
      - size
      type: object
    CreateVolumeResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateMachineResponse_oneOf'
      - $ref: '#/components/schemas/CreateMachineResponse_oneOf_1'
      type: object
    CreateZoneRequest:
      example:
        name: example-zone
        cloud: example-cloud
      properties:
        name:
          description: Specify zone name
          type: string
        cloud:
          description: Specify cloud to provision on
          type: string
        tags:
          description: Assign tags to provisioned zone
          type: object
        extra:
          description: Configure additional parameters
          type: object
        template:
          type: object
        dry:
          description: Return provisioning plan and exit without executing it
          type: boolean
        save:
          description: Save provisioning plan as template
          type: boolean
      required:
      - cloud
      - name
      type: object
    CreateZoneResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateMachineResponse_oneOf'
      - $ref: '#/components/schemas/CreateMachineResponse_oneOf_1'
      type: object
    CronSchedule:
      description: crontab schedule
      properties:
        schedule_type:
          enum:
          - crontab
          type: string
        minute:
          type: string
        hour:
          type: string
        day_of_month:
          type: string
        month_of_year:
          type: string
        day_of_week:
          type: string
        start_after:
          description: The datetime when schedule should start running, e.g 2021-09-22T18:19:28Z
          format: date-time
          type: string
        expires:
          description: The datetime when schedule should expire, e.g 2021-09-22T18:19:28Z
          format: date-time
          type: string
        max_run_count:
          minimum: 1
          type: integer
      required:
      - day_of_month
      - day_of_week
      - hour
      - minute
      - month_of_year
      - schedule_type
      title: Cron
      type: object
    Datapoints:
      example:
        data:
          result:
          - null
          - null
          resultType: resultType
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/Datapoints_data'
      type: object
    DatapointsValuesItem:
      anyOf:
      - type: string
      - type: number
    DatapointsValuesTuple:
      items:
        $ref: '#/components/schemas/DatapointsValuesItem'
      type: array
    DigitalOceanVolumes:
      items:
        oneOf:
        - properties:
            volume:
              description: Name or ID of the volume to attach
              type: string
          required:
          - volume
        - properties:
            name:
              description: Name of the volume to be created
              type: string
            size:
              description: Size of the volume in GBs
              type: integer
            filesystem_type:
              description: The name of the filesystem type to be used on the volume
              enum:
              - ext4
              - xfs
              type: string
          required:
          - name
          - size
        type: object
      title: DigitalOcean volumes parameter
      type: array
    DigitaloceanCloudRequest:
      properties:
        provider:
          enum:
          - digitalocean
          type: string
        credentials:
          $ref: '#/components/schemas/DigitaloceanCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    DigitaloceanCredentials:
      properties:
        token:
          description: Your DigitalOcean API token
          type: string
      required:
      - token
      type: object
    DockerCloudRequest:
      properties:
        provider:
          enum:
          - docker
          type: string
        credentials:
          $ref: '#/components/schemas/DockerCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    DockerCredentials:
      properties:
        host:
          description: Your Docker host
          type: string
        port:
          description: Your Docker port
          type: string
        username:
          description: Your Docker username
          type: string
        password:
          description: Your Docker password
          type: string
        tlsKey:
          description: Your TLS auth key
          type: string
        tlsCert:
          description: Your TLS auth certificate
          type: string
        tlsCaCert:
          description: Your TLS CA certifcate
          type: string
        showAll:
          description: Show all containers, including stopped
          type: boolean
      required:
      - host
      - port
      type: object
    EditCloudRequest:
      anyOf:
      - $ref: '#/components/schemas/EditCloudRequest_anyOf'
      - allOf:
        - properties:
            provider:
              $ref: '#/components/schemas/SupportedProviders'
          required:
          - provider
          type: object
        - discriminator:
            mapping:
              amazon: '#/components/schemas/AmazonCloudRequest'
              azure: '#/components/schemas/AzureCloudRequest'
              google: '#/components/schemas/GoogleCloudRequest'
              cloudsigma: '#/components/schemas/CloudSigmaCloudRequest'
              alibaba: '#/components/schemas/AlibabaCloudRequest'
              equinix: '#/components/schemas/EquinixCloudRequest'
              ibm: '#/components/schemas/IbmCloudRequest'
              linode: '#/components/schemas/LinodeCloudRequest'
              rackspace: '#/components/schemas/RackspaceCloudRequest'
              maxihost: '#/components/schemas/MaxihostCloudRequest'
              vultr: '#/components/schemas/VultrCloudRequest'
              openstack: '#/components/schemas/OpenstackCloudRequest'
              onapp: '#/components/schemas/OnappCloudRequest'
              vsphere: '#/components/schemas/VsphereCloudRequest'
              kvm: '#/components/schemas/KvmCloudRequest'
              lxd: '#/components/schemas/LxdCloudRequest'
              docker: '#/components/schemas/DockerCloudRequest'
              kubernetes: '#/components/schemas/KubernetesCloudRequest'
              kubevirt: '#/components/schemas/KubevirtCloudRequest'
              openshift: '#/components/schemas/OpenshiftCloudRequest'
              other: '#/components/schemas/OtherCloudRequest'
            propertyName: provider
          oneOf:
          - $ref: '#/components/schemas/AmazonCloudRequest'
          - $ref: '#/components/schemas/AzureCloudRequest'
          - $ref: '#/components/schemas/GoogleCloudRequest'
          - $ref: '#/components/schemas/AlibabaCloudRequest'
          - $ref: '#/components/schemas/CloudSigmaCloudRequest'
          - $ref: '#/components/schemas/EquinixCloudRequest'
          - $ref: '#/components/schemas/IbmCloudRequest'
          - $ref: '#/components/schemas/DigitaloceanCloudRequest'
          - $ref: '#/components/schemas/LinodeCloudRequest'
          - $ref: '#/components/schemas/RackspaceCloudRequest'
          - $ref: '#/components/schemas/MaxihostCloudRequest'
          - $ref: '#/components/schemas/VultrCloudRequest'
          - $ref: '#/components/schemas/OpenstackCloudRequest'
          - $ref: '#/components/schemas/OnappCloudRequest'
          - $ref: '#/components/schemas/VsphereCloudRequest'
          - $ref: '#/components/schemas/KvmCloudRequest'
          - $ref: '#/components/schemas/LxdCloudRequest'
          - $ref: '#/components/schemas/DockerCloudRequest'
          - $ref: '#/components/schemas/KubernetesCloudRequest'
          - $ref: '#/components/schemas/KubevirtCloudRequest'
          - $ref: '#/components/schemas/OpenshiftCloudRequest'
          - $ref: '#/components/schemas/OtherCloudRequest'
      example:
        name: renamed-example-cloud
    EditCloudRequest_anyOf:
      additionalProperties: false
      properties:
        name:
          description: Updated name
          type: string
      required:
      - name
      type: object
    EquinixCloudRequest:
      properties:
        provider:
          enum:
          - equinix
          type: string
        credentials:
          $ref: '#/components/schemas/EquinixCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    EquinixCredentials:
      additionalProperties: false
      properties:
        apikey:
          description: Your Equinix Metal API key
          type: string
      required:
      - apikey
      type: object
    EquinixMetalExtra:
      properties:
        project_id:
          description: Project UUID, if not given the first one available will be
            selected
          type: string
      title: Equnix Metal extra parameter
      type: object
    EquinixMetalNet:
      properties:
        ip_addresses:
          description: Specify addresses to be created with your machine.By default
            Equinix configures public IPv4, public IPv6, and private IPv4
          items:
            $ref: '#/components/schemas/EquinixMetalNet_ip_addresses'
          type: array
      title: Equnix Metal net parameter
      type: object
    EquinixMetalVolumes:
      items:
        oneOf:
        - properties:
            volume:
              description: Name or ID of the volume to attach
              type: string
          required:
          - volume
        - properties:
            size:
              description: Size of the volume to be created
              minimum: 100
              type: integer
            plan:
              description: Type of volume to create, defaults to standard
              enum:
              - standard
              - performance
              type: string
          required:
          - size
        type: object
      title: Equnix Metal volumes parameter
      type: array
    Expiration:
      properties:
        action:
          enum:
          - stop
          - destroy
          type: string
        date:
          description: When machine should expire, e.g 2021-09-22T18:19:28Z
          format: date-time
          type: string
        notify:
          $ref: '#/components/schemas/Expiration_notify'
        notify_msg:
          type: string
      required:
      - action
      - date
      type: object
    Frequency:
      properties:
        every:
          description: |
            a positive integer denoting how often the rule must be evaluated
          type: integer
        period:
          description: units of time, e.g. "seconds"
          type: string
      required:
      - every
      - period
      type: object
    GetCloudResponse:
      example:
        data:
          features:
            compute: true
            container: false
            dns: false
          name: name
          owned_by: owned_by
          id: id
          config: '{}'
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Cloud'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetClusterResponse:
      example:
        data:
          credentials: '{}'
          total_cpus: 6
          owned_by: owned_by
          created_by: created_by
          tags: '{}'
          cloud: cloud
          total_memory: 1
          extra: '{}'
          name: name
          total_nodes: 0
          location: location
          id: id
          config: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Cluster'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetDatapointsResponse:
      example:
        data:
          data:
            result:
            - null
            - null
            resultType: resultType
          status: status
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Datapoints'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetImageResponse:
      example:
        data:
          cloud: cloud
          starred: true
          os_type: os_type
          extra: '{}'
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Image'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetJobResponse:
      example:
        data:
          finished_at: 6.027456183070403
          org: org
          job_id: job_id
          started_at: 0.8008281904610115
          action: action
          machine_id: machine_id
          cloud_id: cloud_id
          error: true
          logs:
          - org: org
            job_id: job_id
          - org: org
            job_id: job_id
          user: user
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Job'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetKeyResponse:
      example:
        data:
          default: true
          name: name
          owned_by: owned_by
          id: id
          type: ssh
          config: '{}'
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Key'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetLocationResponse:
      example:
        data:
          cloud: cloud
          extra: '{}'
          name: name
          external_id: external_id
          id: id
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Location'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetMachineResponse:
      example:
        data:
          cloud: cloud
          default: true
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Machine'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetNetworkResponse:
      example:
        data:
          cloud: cloud
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Network'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetOrgMemberResponse:
      example:
        data:
          registration_date: registration_date
          last_login: last_login
          pending: true
          last_name: last_name
          id: id
          first_name: first_name
          email: email
          username: username
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Member'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetOrgResponse:
      example:
        data:
          enterprise_plan: '{}'
          total_machine_count: total_machine_count
          selected_plan: selected_plan
          created: true
          name: name
          id: id
          last_active: last_active
          clouds_count: clouds_count
          teams_count: teams_count
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Org'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetRuleResponse:
      example:
        data:
          triggered_after: '{}'
          name: name
          data_type: data_type
          disabled: disabled
          id: id
          window: '{}'
          queries: '{}'
          actions: '{}'
          frequency: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Rule'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetScriptResponse:
      example:
        data:
          name: name
          description: description
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Script'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetSizeResponse:
      example:
        data:
          cloud: cloud
          extra: '{}'
          name: name
          external_id: external_id
          id: id
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Size'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetVolumeResponse:
      example:
        data:
          cloud: cloud
          default: true
          size: size
          name: name
          external_id: external_id
          location: location
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Volume'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GetZoneResponse:
      example:
        data:
          cloud: cloud
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          $ref: '#/components/schemas/Zone'
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    GoogleCloudRequest:
      properties:
        provider:
          enum:
          - google
          type: string
        credentials:
          $ref: '#/components/schemas/GoogleCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    GoogleClusterRequest:
      properties:
        provider:
          enum:
          - google
          type: string
        location:
          description: The name of the location to create the cluster in
          type: string
      required:
      - location
      - provider
      type: object
    GoogleCredentials:
      properties:
        projectId:
          description: The Id of your GCP project
          type: string
        privateKey:
          description: Your GCP private key
          type: string
        email:
          description: Your GCP client email
          type: string
      required:
      - email
      - privateKey
      - projectId
      type: object
    GoogleNet:
      properties:
        network:
          description: The network to associate with the machine
          type: string
        subnetwork:
          description: The subnetwork resource for this machine
          type: string
      title: Google net parameter
      type: object
    GoogleVolumes:
      items:
        oneOf:
        - properties:
            volume:
              description: Name or ID of the volume to attach
              type: string
            boot:
              description: Whether this volume should be used as the boot drive. Up
                to one volume must set this parameter
              type: boolean
          required:
          - volume
        - properties:
            name:
              description: Name of the volume to be created, mandatory on non-boot
                volumes
              type: string
            size:
              description: Size of the volume to be created
              minimum: 1
              type: integer
            boot:
              description: Whether this volume should be used as the boot drive. Up
                to one volume must set this parameter
              type: boolean
            type:
              description: Type of the volume to create, defaults to 'pd-standard'
              enum:
              - pd-standard
              - pd-ssd
              type: string
          required:
          - size
        type: object
      title: Google volumes parameter
      type: array
    IbmCloudRequest:
      properties:
        provider:
          enum:
          - ibm
          type: string
        credentials:
          $ref: '#/components/schemas/IbmCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    IbmCredentials:
      properties:
        provider:
          enum:
          - ibm
          type: string
        username:
          description: Your IBM Cloud username
          type: string
        apikey:
          description: Your IBM Cloud API key
          type: string
      required:
      - apikey
      type: object
    Image:
      example:
        cloud: cloud
        starred: true
        os_type: os_type
        extra: '{}'
        name: name
        external_id: external_id
        owned_by: owned_by
        id: id
        created_by: created_by
        tags: '{}'
      properties:
        id:
          type: string
        external_id:
          type: string
        name:
          type: string
        cloud:
          type: string
        starred:
          type: boolean
        os_type:
          type: string
        tags:
          type: object
        created_by:
          type: string
        owned_by:
          type: string
        extra:
          type: object
      type: object
    InlineScript:
      properties:
        inline:
          type: string
      required:
      - inline
      type: object
    InstantVector:
      properties:
        metric:
          type: object
        values:
          items:
            $ref: '#/components/schemas/DatapointsValuesItem'
          type: array
      type: object
    IntervalSchedule:
      description: interval schedule
      properties:
        schedule_type:
          enum:
          - interval
          type: string
        every:
          type: integer
        period:
          enum:
          - minutes
          - hours
          - days
          type: string
        start_after:
          description: The datetime when schedule should start running, e.g 2021-09-22T18:19:28Z
          format: date-time
          type: string
        expires:
          description: The datetime when schedule should expire, e.g 2021-09-22T18:19:28Z
          format: date-time
          type: string
        max_run_count:
          minimum: 1
          type: integer
      required:
      - every
      - period
      - schedule_type
      title: Interval
      type: object
    Job:
      example:
        finished_at: 6.027456183070403
        org: org
        job_id: job_id
        started_at: 0.8008281904610115
        action: action
        machine_id: machine_id
        cloud_id: cloud_id
        error: true
        logs:
        - org: org
          job_id: job_id
        - org: org
          job_id: job_id
        user: user
      properties:
        logs:
          items:
            $ref: '#/components/schemas/Log'
          type: array
        error:
          type: boolean
        started_at:
          type: number
        finished_at:
          type: number
        org:
          type: string
        machine_id:
          type: string
        job_id:
          type: string
        cloud_id:
          type: string
        action:
          type: string
        user:
          type: string
      required:
      - action
      - error
      - finished_at
      - job_id
      - logs
      - org
      - started_at
      type: object
    KVMNet:
      properties:
        networks:
          items:
            $ref: '#/components/schemas/KVMNet_networks'
          type: array
        vnfs:
          items:
            type: string
          type: array
      title: KVM net parameter
      type: object
    Key:
      example:
        default: true
        name: name
        owned_by: owned_by
        id: id
        type: ssh
        config: '{}'
        created_by: created_by
        tags: '{}'
      properties:
        id:
          type: string
        name:
          type: string
        config:
          type: object
        tags:
          type: object
        created_by:
          type: string
        owned_by:
          type: string
        default:
          type: boolean
        type:
          enum:
          - ssh
          - signed_ssh
          type: string
      type: object
    KeyMachineAssociation:
      example:
        port: 0
        user: user
        key: key
      properties:
        key:
          description: Name or ID of the SSH key to associate
          type: string
        port:
          description: SSH port
          type: integer
        user:
          description: SSH user
          type: string
      type: object
    KeyMachineDisassociation:
      example:
        key: key
      properties:
        key:
          description: Name or ID of the SSH key to disassociate
          type: string
      type: object
    KubernetesCloudRequest:
      properties:
        provider:
          enum:
          - kubernetes
          type: string
        credentials:
          $ref: '#/components/schemas/KubernetesCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    KubernetesCredentials:
      properties:
        host:
          description: Your Kubernetes API host
          type: string
        port:
          description: Your Kubernetes API port
          type: string
        username:
          description: Your Kubernetes API username
          type: string
        password:
          description: Your Kubernetes API password
          type: string
        token:
          description: Your Kubernetes API bearer token
          type: string
        tlsKey:
          description: Your TLS auth key
          type: string
        tlsCert:
          description: Your TLS auth certificate
          type: string
        tlsCaCert:
          description: Your TLS CA certifcate
          type: string
        showAll:
          description: Show all containers, including stopped
          type: boolean
      required:
      - host
      - port
      type: object
    KubevirtCloudRequest:
      properties:
        provider:
          enum:
          - kubevirt
          type: string
        credentials:
          $ref: '#/components/schemas/KubernetesCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    KvmCloudRequest:
      properties:
        provider:
          enum:
          - kvm
          type: string
        credentials:
          type: object
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    KvmCredentials:
      type: object
    LinodeCloudRequest:
      properties:
        provider:
          enum:
          - linode
          type: string
        credentials:
          $ref: '#/components/schemas/LinodeCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    LinodeCredentials:
      properties:
        apikey:
          description: You Linode API key
          type: string
      required:
      - apikey
      type: object
    LinodeExtra:
      properties:
        root_pass:
          description: Set root password. If not given a secure password will be generated
          type: string
      title: Linode extra parameter
      type: object
    LinodeNet:
      properties:
        private_ip:
          description: Assign a private IPv4 address, defaults to True
          type: boolean
      title: Linode net parameter
      type: object
    LinodeVolumes:
      items:
        oneOf:
        - properties:
            volume:
              description: Name or ID of the volume to attach
              type: string
            persist_across_boots:
              description: Whether the volume should be attached to node across reboots,
                defaults to True
              type: boolean
          required:
          - volume
        - properties:
            name:
              description: Name of the volume to be created
              type: string
            size:
              description: Size of the volume to be created in GBs
              type: integer
          required:
          - name
          - size
        type: object
      title: Linode volumes parameter
      type: array
    ListCloudsResponse:
      example:
        data:
        - features:
            compute: true
            container: false
            dns: false
          name: name
          owned_by: owned_by
          id: id
          config: '{}'
          created_by: created_by
          tags: '{}'
        - features:
            compute: true
            container: false
            dns: false
          name: name
          owned_by: owned_by
          id: id
          config: '{}'
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Cloud'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListClustersResponse:
      example:
        data:
        - credentials: '{}'
          total_cpus: 6
          owned_by: owned_by
          created_by: created_by
          tags: '{}'
          cloud: cloud
          total_memory: 1
          extra: '{}'
          name: name
          total_nodes: 0
          location: location
          id: id
          config: '{}'
        - credentials: '{}'
          total_cpus: 6
          owned_by: owned_by
          created_by: created_by
          tags: '{}'
          cloud: cloud
          total_memory: 1
          extra: '{}'
          name: name
          total_nodes: 0
          location: location
          id: id
          config: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListImagesResponse:
      example:
        data:
        - cloud: cloud
          starred: true
          os_type: os_type
          extra: '{}'
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        - cloud: cloud
          starred: true
          os_type: os_type
          extra: '{}'
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Image'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListKeysResponse:
      example:
        data:
        - default: true
          name: name
          owned_by: owned_by
          id: id
          type: ssh
          config: '{}'
          created_by: created_by
          tags: '{}'
        - default: true
          name: name
          owned_by: owned_by
          id: id
          type: ssh
          config: '{}'
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Key'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListLocationsResponse:
      example:
        data:
        - cloud: cloud
          extra: '{}'
          name: name
          external_id: external_id
          id: id
        - cloud: cloud
          extra: '{}'
          name: name
          external_id: external_id
          id: id
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Location'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListMachinesResponse:
      example:
        data:
        - cloud: cloud
          default: true
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        - cloud: cloud
          default: true
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Machine'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListNetworksResponse:
      example:
        data:
        - cloud: cloud
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        - cloud: cloud
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Network'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListOrgMembersResponse:
      example:
        data:
        - registration_date: registration_date
          last_login: last_login
          pending: true
          last_name: last_name
          id: id
          first_name: first_name
          email: email
          username: username
        - registration_date: registration_date
          last_login: last_login
          pending: true
          last_name: last_name
          id: id
          first_name: first_name
          email: email
          username: username
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Member'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListOrgTeamsResponse:
      example:
        data:
        - members:
          - registration_date: registration_date
            last_login: last_login
            pending: true
            last_name: last_name
            id: id
            first_name: first_name
            email: email
            username: username
          - registration_date: registration_date
            last_login: last_login
            pending: true
            last_name: last_name
            id: id
            first_name: first_name
            email: email
            username: username
          name: name
          description: description
          members_count: members_count
          id: id
          policy: '{}'
        - members:
          - registration_date: registration_date
            last_login: last_login
            pending: true
            last_name: last_name
            id: id
            first_name: first_name
            email: email
            username: username
          - registration_date: registration_date
            last_login: last_login
            pending: true
            last_name: last_name
            id: id
            first_name: first_name
            email: email
            username: username
          name: name
          description: description
          members_count: members_count
          id: id
          policy: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Team'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListOrgsResponse:
      example:
        data:
        - enterprise_plan: '{}'
          total_machine_count: total_machine_count
          selected_plan: selected_plan
          created: true
          name: name
          id: id
          last_active: last_active
          clouds_count: clouds_count
          teams_count: teams_count
        - enterprise_plan: '{}'
          total_machine_count: total_machine_count
          selected_plan: selected_plan
          created: true
          name: name
          id: id
          last_active: last_active
          clouds_count: clouds_count
          teams_count: teams_count
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Org'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListRulesResponse:
      example:
        data:
        - triggered_after: '{}'
          name: name
          data_type: data_type
          disabled: disabled
          id: id
          window: '{}'
          queries: '{}'
          actions: '{}'
          frequency: '{}'
        - triggered_after: '{}'
          name: name
          data_type: data_type
          disabled: disabled
          id: id
          window: '{}'
          queries: '{}'
          actions: '{}'
          frequency: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListScriptsResponse:
      example:
        data:
        - name: name
          description: description
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        - name: name
          description: description
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Script'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListSizesResponse:
      example:
        data:
        - cloud: cloud
          extra: '{}'
          name: name
          external_id: external_id
          id: id
        - cloud: cloud
          extra: '{}'
          name: name
          external_id: external_id
          id: id
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Size'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListSnapshotsResponse:
      example:
        data:
        - null
        - null
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Snapshot'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListUsersResponse:
      example:
        data:
        - registration_date: registration_date
          last_login: last_login
          last_name: last_name
          id: id
          first_name: first_name
          email: email
          username: username
        - registration_date: registration_date
          last_login: last_login
          last_name: last_name
          id: id
          first_name: first_name
          email: email
          username: username
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListVolumesResponse:
      example:
        data:
        - cloud: cloud
          default: true
          size: size
          name: name
          external_id: external_id
          location: location
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        - cloud: cloud
          default: true
          size: size
          name: name
          external_id: external_id
          location: location
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Volume'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    ListZonesResponse:
      example:
        data:
        - cloud: cloud
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        - cloud: cloud
          name: name
          external_id: external_id
          owned_by: owned_by
          id: id
          created_by: created_by
          tags: '{}'
        meta:
          total: 0
          start: 1
          sort: sort
          returned: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/Zone'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetadata'
      type: object
    Location:
      example:
        cloud: cloud
        extra: '{}'
        name: name
        external_id: external_id
        id: id
      properties:
        id:
          type: string
        external_id:
          type: string
        name:
          type: string
        cloud:
          type: string
        extra:
          type: object
      type: object
    Log:
      example:
        org: org
        job_id: job_id
      properties:
        job_id:
          type: string
        org:
          type: string
      required:
      - job_id
      - org
      type: object
    LxdCloudRequest:
      properties:
        provider:
          enum:
          - lxd
          type: string
        credentials:
          $ref: '#/components/schemas/LxdCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    LxdCredentials:
      properties:
        host:
          description: Your LXD host
          type: string
        port:
          description: Your LXD port
          type: string
        username:
          description: Your LXD username
          type: string
        password:
          description: Your LXD password
          type: string
        tlsKey:
          description: Your TLS auth key
          type: string
        tlsCert:
          description: Your TLS auth certificate
          type: string
        tlsCaCert:
          description: Your TLS CA certifcate
          type: string
        showAll:
          description: Show all containers, including stopped
          type: boolean
      required:
      - host
      - port
      type: object
    Machine:
      example:
        cloud: cloud
        default: true
        name: name
        external_id: external_id
        owned_by: owned_by
        id: id
        created_by: created_by
        tags: '{}'
      properties:
        id:
          type: string
        external_id:
          type: string
        name:
          type: string
        cloud:
          type: string
        tags:
          type: object
        created_by:
          type: string
        owned_by:
          type: string
        default:
          type: boolean
        state:
          $ref: '#/components/schemas/MachineState'
      type: object
    MachineState:
      enum:
      - running
      - starting
      - stopping
      - stopped
      - pending
      - suspended
      - terminated
      - error
      - rebooting
      - paused
      - reconfiguring
      - unknown
      type: string
    MaxihostCloudRequest:
      properties:
        provider:
          enum:
          - maxihost
          type: string
        credentials:
          $ref: '#/components/schemas/MaxihostCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    MaxihostCredentials:
      properties:
        token:
          description: Your Maxihost API token
          type: string
      required:
      - token
      type: object
    Member:
      example:
        registration_date: registration_date
        last_login: last_login
        pending: true
        last_name: last_name
        id: id
        first_name: first_name
        email: email
        username: username
      properties:
        email:
          type: string
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        last_login:
          type: string
        username:
          type: string
        registration_date:
          type: string
        pending:
          type: boolean
      type: object
    Network:
      example:
        cloud: cloud
        name: name
        external_id: external_id
        owned_by: owned_by
        id: id
        created_by: created_by
        tags: '{}'
      properties:
        id:
          type: string
        external_id:
          type: string
        name:
          type: string
        cloud:
          type: string
        tags:
          type: object
        created_by:
          type: string
        owned_by:
          type: string
      type: object
    OnappCloudRequest:
      properties:
        provider:
          enum:
          - onapp
          type: string
        credentials:
          $ref: '#/components/schemas/OnappCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    OnappCredentials:
      properties:
        authUrl:
          type: string
        username:
          type: string
        apikey:
          type: string
        host:
          type: string
        verify:
          type: boolean
      required:
      - apikey
      - host
      - username
      type: object
    OneOffSchedule:
      description: one_off schedule
      properties:
        schedule_type:
          enum:
          - one_off
          type: string
        datetime:
          description: When one_off schedule should run, e.g 2021-09-22T18:19:28Z
          format: date-time
          type: string
      required:
      - datetime
      - schedule_type
      title: OneOff
      type: object
    OpenshiftCloudRequest:
      properties:
        provider:
          enum:
          - openshift
          type: string
        credentials:
          $ref: '#/components/schemas/OpenshiftCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    OpenshiftCredentials:
      properties:
        host:
          description: Your OpenShift API host
          type: string
        port:
          description: Your OpenShift API port
          type: string
        username:
          description: Your OpenShift API username
          type: string
        password:
          description: Your OpenShift API password
          type: string
      required:
      - host
      - password
      - port
      - username
      type: object
    OpenstackCloudRequest:
      properties:
        provider:
          enum:
          - openstack
          type: string
        credentials:
          $ref: '#/components/schemas/OpenstackCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    OpenstackCredentials:
      properties:
        authUrl:
          type: string
        user:
          type: string
        password:
          type: string
        tenant:
          type: string
        domain:
          type: string
        region:
          type: string
        computeEndpoint:
          type: string
      required:
      - authUrl
      - password
      - user
      type: object
    OpenstackNet:
      properties:
        security_groups:
          description: Name or Openstack UUID of the security groups to assign to
            the machine
          items:
            type: string
          type: array
        networks:
          description: Name or ID of the networks to launch the machine into. Required
            parameter when there are multiple networks defined for the tenant
          items:
            type: string
          type: array
        associate_floating_ip:
          description: Assign a floating IP to the machine, defaults to True for Openstack
            and False for Vexxhost
          type: boolean
      title: Openstack & Vexxhost net parameter
      type: object
    OpenstackVolumes:
      items:
        oneOf:
        - properties:
            volume:
              description: Name or ID of an existing volume to attach
              type: string
            boot:
              description: Use as boot volume, up to one volume can be used as boot.
                Defaults to false
              type: boolean
            delete_on_termination:
              description: Delete the volume when the machine is deleted. Defaults
                to false
              type: boolean
          required:
          - volume
        - properties:
            size:
              description: Size of the volume to be created
              minimum: 1
              type: integer
            boot:
              description: Use as boot volume, up to one volume can be used as boot.
                Defaults to false
              type: boolean
            delete_on_termination:
              description: Delete the  volume when the machine is deleted. Defaults
                to false
              type: boolean
          required:
          - size
        type: object
      title: Openstack & Vexxhost volumes parameter
      type: array
    Org:
      example:
        enterprise_plan: '{}'
        total_machine_count: total_machine_count
        selected_plan: selected_plan
        created: true
        name: name
        id: id
        last_active: last_active
        clouds_count: clouds_count
        teams_count: teams_count
      properties:
        id:
          type: string
        name:
          type: string
        clouds_count:
          type: string
        teams_count:
          type: string
        total_machine_count:
          type: string
        created:
          type: boolean
        enterprise_plan:
          type: object
        selected_plan:
          type: string
        last_active:
          type: string
      type: object
    OtherCloudRequest:
      properties:
        provider:
          enum:
          - other
          type: string
        credentials:
          type: object
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    OtherCredentials:
      type: object
    PostDeployScript:
      properties:
        script:
          description: Name or ID of the script to run
          type: string
        params:
          type: string
      required:
      - script
      type: object
    Queries:
      items:
        $ref: '#/components/schemas/Query'
      type: array
    Query:
      properties:
        target:
          description: the metric's name, e.g. "load.shortterm"
          type: string
        operator:
          description: |
            the operator used to compare the computed value with the given
            threshold
          type: string
        threshold:
          description: the value over/under which an alert will be raised
          type: string
        aggregation:
          description: |
            the function to be applied on the computed series. Must be one
            of: all, any, avg
          type: string
      required:
      - aggregation
      - operator
      - target
      - threshold
      type: object
    RackspaceCloudRequest:
      properties:
        provider:
          enum:
          - rackspace
          type: string
        credentials:
          $ref: '#/components/schemas/RackspaceCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    RackspaceCredentials:
      properties:
        provider:
          enum:
          - rackspace
          type: string
        username:
          description: Your Rackspace Cloud username
          type: string
        apikey:
          description: Your Rackspace Cloud API key
          type: string
        region:
          description: Your Rackspace Cloud region
          type: string
      required:
      - apikey
      - region
      - username
      type: object
    RangeVector:
      properties:
        metric:
          type: object
        value:
          items:
            $ref: '#/components/schemas/DatapointsValuesTuple'
          type: array
      type: object
    ResponseMetadata:
      example:
        total: 0
        start: 1
        sort: sort
        returned: 6
      properties:
        total:
          description: Total items matching the query
          type: integer
        returned:
          description: Number of items in response
          type: integer
        sort:
          description: Sort order of results
          type: string
        start:
          description: Index of first response item in total matching items
          type: integer
      type: object
    Rule:
      example:
        triggered_after: '{}'
        name: name
        data_type: data_type
        disabled: disabled
        id: id
        window: '{}'
        queries: '{}'
        actions: '{}'
        frequency: '{}'
      properties:
        id:
          type: string
        name:
          type: string
        queries:
          type: object
        window:
          type: object
        frequency:
          type: object
        triggered_after:
          type: object
        actions:
          type: object
        disabled:
          type: string
        data_type:
          type: string
      type: object
    RuleAction:
      properties:
        type:
          description: |
            the action's type: notification, machine_action, command
          type: string
        users:
          description: |
            a list of user to be notified, denoted by their UUIDs. Can be
            used by a notification action (optional)
          items:
            type: string
          type: array
        teams:
          description: |
            a list of teams, denoted by their UUIDs, whose users will be
            notified. Can be used by a notification action (optional)
          items:
            type: string
          type: array
        emails:
          description: |
            a list of e-mails to send a notification to. Can be used by a
            notification action (optional)
          items:
            type: string
          type: array
        action:
          description: |
            the action to be performed. Required by machine_action type
          type: string
        command:
          description: |
            the command to be executed. Required by the command type
          type: string
      required:
      - type
      type: object
    RuleActions:
      items:
        $ref: '#/components/schemas/RuleAction'
      type: array
    Script:
      example:
        name: name
        description: description
        owned_by: owned_by
        id: id
        created_by: created_by
        tags: '{}'
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        tags:
          type: object
        created_by:
          type: string
        owned_by:
          type: string
      type: object
    Selector:
      properties:
        type:
          description: one of "machines" or "tags"
          type: string
        ids:
          description: a list of UUIDs in case type is "machines"
          items:
            type: string
          type: array
        include:
          description: a list of tags in case type is "tags"
          items:
            type: string
          type: array
      required:
      - type
      type: object
    Selectors:
      items:
        $ref: '#/components/schemas/Selector'
      type: array
    Size:
      example:
        cloud: cloud
        extra: '{}'
        name: name
        external_id: external_id
        id: id
      properties:
        id:
          type: string
        external_id:
          type: string
        name:
          type: string
        cloud:
          type: string
        extra:
          type: object
      type: object
    Snapshot:
      type: object
    SupportedProviders:
      enum:
      - amazon
      - azure
      - google
      - alibaba
      - cloudsigma
      - equinix
      - ibm
      - digitalocean
      - linode
      - rackspace
      - maxihost
      - vultr
      - openstack
      - onapp
      - vsphere
      - vexxhost
      - kvm
      - lxd
      - docker
      - kubevirt
      - kubernetes
      - openshift
      - other
      type: string
    Team:
      example:
        members:
        - registration_date: registration_date
          last_login: last_login
          pending: true
          last_name: last_name
          id: id
          first_name: first_name
          email: email
          username: username
        - registration_date: registration_date
          last_login: last_login
          pending: true
          last_name: last_name
          id: id
          first_name: first_name
          email: email
          username: username
        name: name
        description: description
        members_count: members_count
        id: id
        policy: '{}'
      properties:
        id:
          type: string
        name:
          type: string
        members:
          items:
            $ref: '#/components/schemas/Member'
          type: array
        members_count:
          type: string
        description:
          type: string
        policy:
          type: object
      type: object
    TriggerAfter:
      properties:
        offset:
          description: a positive integer denoting the tolerance period
          type: integer
        period:
          description: units of time, e.g. "seconds"
          type: string
      required:
      - offset
      - period
      type: object
    User:
      example:
        registration_date: registration_date
        last_login: last_login
        last_name: last_name
        id: id
        first_name: first_name
        email: email
        username: username
      properties:
        email:
          type: string
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        last_login:
          type: string
        username:
          type: string
        registration_date:
          type: string
      type: object
    VSphereExtra:
      properties:
        folder:
          description: Name or ID of the Vsphere folder to place the machine into.
            Required for Vsphere 6.7
          type: string
        datastore:
          description: Name or ID of a VSphere datastore
          type: string
      title: VSphere extra parameter
      type: object
    VSphereNet:
      properties:
        network:
          description: Name or ID of the network to launch the machine into
          type: string
      title: VSphere net parameter
      type: object
    Vector:
      oneOf:
      - $ref: '#/components/schemas/InstantVector'
      - $ref: '#/components/schemas/RangeVector'
      type: object
    Volume:
      example:
        cloud: cloud
        default: true
        size: size
        name: name
        external_id: external_id
        location: location
        owned_by: owned_by
        id: id
        created_by: created_by
        tags: '{}'
      properties:
        id:
          type: string
        external_id:
          type: string
        name:
          type: string
        cloud:
          type: string
        location:
          type: string
        size:
          type: string
        tags:
          type: object
        created_by:
          type: string
        owned_by:
          type: string
        default:
          type: boolean
      type: object
    VsphereCloudRequest:
      properties:
        provider:
          enum:
          - vsphere
          type: string
        credentials:
          $ref: '#/components/schemas/VsphereCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    VsphereCredentials:
      properties:
        host:
          description: Your vSphere/vCenter host
          type: string
        username:
          description: Your username
          type: string
        password:
          description: Your password
          type: string
        ca_cert_file:
          description: CA certificate
          type: string
      required:
      - host
      - password
      - username
      type: object
    VultrCloudRequest:
      properties:
        provider:
          enum:
          - vultr
          type: string
        credentials:
          $ref: '#/components/schemas/VultrCredentials'
        features:
          $ref: '#/components/schemas/CloudFeatures'
      required:
      - credentials
      - provider
      type: object
    VultrCredentials:
      properties:
        apikey:
          description: Your Vultr API key
          type: string
      required:
      - apikey
      type: object
    VultrExtra:
      properties:
        backups:
          description: Enable automatic backups for the machine, invalid for "Bare
            Metal" & "Dedicated Cloud" size types. There is an additional charge depending
            on the size selected
          type: boolean
        ddos_protection:
          description: Enable DDoS protection, invalid for "Bare Metal" size type.
            There is an additional charge depending on the type of the size selected
          type: boolean
      title: Vultr extra parameter
      type: object
    VultrNet:
      properties:
        networks:
          description: An array of network names or IDs to attach to this machine,
            invalid for "Bare Metal" machines
          items:
            type: string
          type: array
        ipv6:
          description: Enable IPv6, defaults to false
          type: boolean
        hostname:
          description: The hostname to use when deploying this machine, defaults to
            machine name
          type: string
      title: Vultr net parameter
      type: object
    VultrVolumes:
      items:
        oneOf:
        - properties:
            volume:
              description: Name or ID of an existing volume to attach
              type: string
          required:
          - volume
        - properties:
            name:
              description: Name of the volume to be created
              type: string
            size:
              description: Size of the volume in GBs
              minimum: 10
              type: integer
          required:
          - name
          - size
        type: object
      title: Vultr volumes parameter
      type: array
    Window:
      properties:
        start:
          description: |
            a positive integer denoting the start of the search window in
            terms of "now() - start"
          type: integer
        stop:
          default: 0
          description: |
            a positive integer, where stop < start, denoting the end of the
            search window. Defaults to now
          type: integer
        period:
          description: units of time, e.g. "seconds"
          type: string
      required:
      - period
      - start
      type: object
    Zone:
      example:
        cloud: cloud
        name: name
        external_id: external_id
        owned_by: owned_by
        id: id
        created_by: created_by
        tags: '{}'
      properties:
        id:
          type: string
        external_id:
          type: string
        name:
          type: string
        cloud:
          type: string
        tags:
          type: object
        created_by:
          type: string
        owned_by:
          type: string
      type: object
    inline_response_200:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    AddCloudRequest_allOf:
      properties:
        name:
          description: The name of the cloud to add
          type: string
        provider:
          $ref: '#/components/schemas/SupportedProviders'
      required:
      - name
      - provider
      type: object
    AddKeyRequest_anyOf:
      properties:
        name:
          description: The key's name
          type: string
        private:
          description: The private key
          type: string
        certificate:
          description: The signed public key, when using signed ssh keys
          type: string
      required:
      - name
      - private
    AddKeyRequest_anyOf_1:
      properties:
        name:
          description: The key's name
          type: string
        generate:
          description: Generate a keypair instead of providing one
          type: boolean
        dry:
          description: Return generated key without actually adding it
          type: boolean
      required:
      - generate
      - name
    AddKeyRequest_anyOf_2:
      properties:
        generate:
          description: Generate a keypair instead of providing one
          type: boolean
        dry:
          description: Return generated key without actually adding it
          type: boolean
      required:
      - dry
      - generate
    CreateClusterRequest_allOf:
      properties:
        name:
          description: The name of the cluster to create
          type: string
        cloud:
          description: The cloud the cluster belongs to
          type: string
        provider:
          $ref: '#/components/schemas/ClusterProviders'
      required:
      - cloud
      - name
      - provider
      type: object
    CreateMachineRequest_disks:
      description: Configure local disks
      properties:
        disk_size:
          description: KVM specific parameter. The VM's size will be the size of the
            image plus the number in GBs provided here
          type: integer
        disk_path:
          description: KVM specific parameter. Where the VM disk file will be created
          type: string
      type: object
    CreateMachineResponse_oneOf:
      properties:
        jobId:
          type: string
        plan:
          type: object
    CreateMachineResponse_oneOf_1:
      properties:
        plan:
          type: object
    Datapoints_data:
      example:
        result:
        - null
        - null
        resultType: resultType
      properties:
        resultType:
          type: string
        result:
          items:
            $ref: '#/components/schemas/Vector'
          type: array
      type: object
    EquinixMetalNet_ip_addresses:
      properties:
        address_family:
          description: Address Family for IP Address(IPv4, IPv6)
          enum:
          - 4
          - 6
          type: integer
        public:
          description: Address Type for IP Address
          type: boolean
        cidr:
          description: Cidr Size for the IP Block created. Valid values depend on
            the operating system being provisioned. (28..32 for IPv4 addresses, 124..127
            for IPv6 addresses)
          type: integer
      required:
      - address_family
      - cidr
      - public
      type: object
    Expiration_notify:
      description: Notify user before machine expiration
      properties:
        value:
          minimum: 1
          type: integer
        period:
          enum:
          - minutes
          - hours
          - days
          type: string
      required:
      - period
      - value
      type: object
    KVMNet_networks:
      properties:
        network:
          description: Name or ID of the network, if only this field is provided a
            dynamic IP address will be assigned
          type: string
        ip:
          description: The IPv4 address to statically assign to the interface
          type: string
        gateway:
          description: The IPv4 address for the default Gateway
          type: string
        primary:
          description: The primary interface, which will be assigned a routing rule
            for the default GW
          type: string
      required:
      - network
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
    CookieAuth:
      in: cookie
      name: session.id
      type: apiKey
x-cli-waiters:
  job-finished:
    short: Wait job
    long: Wait until job finishes
    delay: 2
    attempts: 900
    retryCodes:
    - 404
    operationId: get-job
    matchers:
    - select: response.body#data.finished_at
      test: notEqual
      expected: 0
      state: success
    - select: response.body#data.error
      test: notEqual
      expected: false
      state: failure
    updates: response.body#data.logs[:].action
    after:
      create-machine:
        job_id: response.body#jobId
