/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// CreateVolumeRequest struct for CreateVolumeRequest
type CreateVolumeRequest struct {
	// Specify cloud to provision on
	Cloud string `json:"cloud"`
	// Return provisioning plan and exit without executing it
	Dry *bool `json:"dry,omitempty"`
	// GCE-specific
	ExDiskType *string `json:"ex_disk_type,omitempty"`
	// EC2-specific. Needs to be specified if volume_type='io1'
	ExIops *string `json:"ex_iops,omitempty"`
	// EC2-specific
	ExVolumeType *string `json:"ex_volume_type,omitempty"`
	// Configure additional parameters
	Extra *map[string]interface{} `json:"extra,omitempty"`
	// Where to provision e.g. region, datacenter, rack
	Location string `json:"location"`
	// Specify volume name
	Name string `json:"name"`
	Provider *SupportedProviders `json:"provider,omitempty"`
	// Provision multiple volumes of this type
	Quantity *int32 `json:"quantity,omitempty"`
	// Save provisioning plan as template
	Save *bool `json:"save,omitempty"`
	// Volume sizing spec
	Size int32 `json:"size"`
	// Assign tags to provisioned volume
	Tags *map[string]interface{} `json:"tags,omitempty"`
	Template *map[string]interface{} `json:"template,omitempty"`
}

// NewCreateVolumeRequest instantiates a new CreateVolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVolumeRequest(cloud string, location string, name string, size int32, ) *CreateVolumeRequest {
	this := CreateVolumeRequest{}
	this.Cloud = cloud
	this.Location = location
	this.Name = name
	this.Size = size
	return &this
}

// NewCreateVolumeRequestWithDefaults instantiates a new CreateVolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVolumeRequestWithDefaults() *CreateVolumeRequest {
	this := CreateVolumeRequest{}
	return &this
}

// GetCloud returns the Cloud field value
func (o *CreateVolumeRequest) GetCloud() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetCloudOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *CreateVolumeRequest) SetCloud(v string) {
	o.Cloud = v
}

// GetDry returns the Dry field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetDry() bool {
	if o == nil || o.Dry == nil {
		var ret bool
		return ret
	}
	return *o.Dry
}

// GetDryOk returns a tuple with the Dry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetDryOk() (*bool, bool) {
	if o == nil || o.Dry == nil {
		return nil, false
	}
	return o.Dry, true
}

// HasDry returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasDry() bool {
	if o != nil && o.Dry != nil {
		return true
	}

	return false
}

// SetDry gets a reference to the given bool and assigns it to the Dry field.
func (o *CreateVolumeRequest) SetDry(v bool) {
	o.Dry = &v
}

// GetExDiskType returns the ExDiskType field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetExDiskType() string {
	if o == nil || o.ExDiskType == nil {
		var ret string
		return ret
	}
	return *o.ExDiskType
}

// GetExDiskTypeOk returns a tuple with the ExDiskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetExDiskTypeOk() (*string, bool) {
	if o == nil || o.ExDiskType == nil {
		return nil, false
	}
	return o.ExDiskType, true
}

// HasExDiskType returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasExDiskType() bool {
	if o != nil && o.ExDiskType != nil {
		return true
	}

	return false
}

// SetExDiskType gets a reference to the given string and assigns it to the ExDiskType field.
func (o *CreateVolumeRequest) SetExDiskType(v string) {
	o.ExDiskType = &v
}

// GetExIops returns the ExIops field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetExIops() string {
	if o == nil || o.ExIops == nil {
		var ret string
		return ret
	}
	return *o.ExIops
}

// GetExIopsOk returns a tuple with the ExIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetExIopsOk() (*string, bool) {
	if o == nil || o.ExIops == nil {
		return nil, false
	}
	return o.ExIops, true
}

// HasExIops returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasExIops() bool {
	if o != nil && o.ExIops != nil {
		return true
	}

	return false
}

// SetExIops gets a reference to the given string and assigns it to the ExIops field.
func (o *CreateVolumeRequest) SetExIops(v string) {
	o.ExIops = &v
}

// GetExVolumeType returns the ExVolumeType field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetExVolumeType() string {
	if o == nil || o.ExVolumeType == nil {
		var ret string
		return ret
	}
	return *o.ExVolumeType
}

// GetExVolumeTypeOk returns a tuple with the ExVolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetExVolumeTypeOk() (*string, bool) {
	if o == nil || o.ExVolumeType == nil {
		return nil, false
	}
	return o.ExVolumeType, true
}

// HasExVolumeType returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasExVolumeType() bool {
	if o != nil && o.ExVolumeType != nil {
		return true
	}

	return false
}

// SetExVolumeType gets a reference to the given string and assigns it to the ExVolumeType field.
func (o *CreateVolumeRequest) SetExVolumeType(v string) {
	o.ExVolumeType = &v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetExtra() map[string]interface{} {
	if o == nil || o.Extra == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetExtraOk() (*map[string]interface{}, bool) {
	if o == nil || o.Extra == nil {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasExtra() bool {
	if o != nil && o.Extra != nil {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string]interface{} and assigns it to the Extra field.
func (o *CreateVolumeRequest) SetExtra(v map[string]interface{}) {
	o.Extra = &v
}

// GetLocation returns the Location field value
func (o *CreateVolumeRequest) GetLocation() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *CreateVolumeRequest) SetLocation(v string) {
	o.Location = v
}

// GetName returns the Name field value
func (o *CreateVolumeRequest) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateVolumeRequest) SetName(v string) {
	o.Name = v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetProvider() SupportedProviders {
	if o == nil || o.Provider == nil {
		var ret SupportedProviders
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetProviderOk() (*SupportedProviders, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given SupportedProviders and assigns it to the Provider field.
func (o *CreateVolumeRequest) SetProvider(v SupportedProviders) {
	o.Provider = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetQuantity() int32 {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetQuantityOk() (*int32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *CreateVolumeRequest) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetSave returns the Save field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetSave() bool {
	if o == nil || o.Save == nil {
		var ret bool
		return ret
	}
	return *o.Save
}

// GetSaveOk returns a tuple with the Save field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetSaveOk() (*bool, bool) {
	if o == nil || o.Save == nil {
		return nil, false
	}
	return o.Save, true
}

// HasSave returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasSave() bool {
	if o != nil && o.Save != nil {
		return true
	}

	return false
}

// SetSave gets a reference to the given bool and assigns it to the Save field.
func (o *CreateVolumeRequest) SetSave(v bool) {
	o.Save = &v
}

// GetSize returns the Size field value
func (o *CreateVolumeRequest) GetSize() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *CreateVolumeRequest) SetSize(v int32) {
	o.Size = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetTags() map[string]interface{} {
	if o == nil || o.Tags == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetTagsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]interface{} and assigns it to the Tags field.
func (o *CreateVolumeRequest) SetTags(v map[string]interface{}) {
	o.Tags = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *CreateVolumeRequest) GetTemplate() map[string]interface{} {
	if o == nil || o.Template == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeRequest) GetTemplateOk() (*map[string]interface{}, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *CreateVolumeRequest) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given map[string]interface{} and assigns it to the Template field.
func (o *CreateVolumeRequest) SetTemplate(v map[string]interface{}) {
	o.Template = &v
}

func (o CreateVolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cloud"] = o.Cloud
	}
	if o.Dry != nil {
		toSerialize["dry"] = o.Dry
	}
	if o.ExDiskType != nil {
		toSerialize["ex_disk_type"] = o.ExDiskType
	}
	if o.ExIops != nil {
		toSerialize["ex_iops"] = o.ExIops
	}
	if o.ExVolumeType != nil {
		toSerialize["ex_volume_type"] = o.ExVolumeType
	}
	if o.Extra != nil {
		toSerialize["extra"] = o.Extra
	}
	if true {
		toSerialize["location"] = o.Location
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.Save != nil {
		toSerialize["save"] = o.Save
	}
	if true {
		toSerialize["size"] = o.Size
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVolumeRequest struct {
	value *CreateVolumeRequest
	isSet bool
}

func (v NullableCreateVolumeRequest) Get() *CreateVolumeRequest {
	return v.value
}

func (v *NullableCreateVolumeRequest) Set(val *CreateVolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVolumeRequest(val *CreateVolumeRequest) *NullableCreateVolumeRequest {
	return &NullableCreateVolumeRequest{value: val, isSet: true}
}

func (v NullableCreateVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


