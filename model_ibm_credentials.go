/*
 * Mist API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 * Contact: api@mist.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mist_sdk

import (
	"encoding/json"
)

// IbmCredentials struct for IbmCredentials
type IbmCredentials struct {
	// Your IBM Cloud API key
	Apikey string `json:"apikey"`
	Provider *string `json:"provider,omitempty"`
	// Your IBM Cloud username
	Username *string `json:"username,omitempty"`
}

// NewIbmCredentials instantiates a new IbmCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIbmCredentials(apikey string, ) *IbmCredentials {
	this := IbmCredentials{}
	this.Apikey = apikey
	return &this
}

// NewIbmCredentialsWithDefaults instantiates a new IbmCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIbmCredentialsWithDefaults() *IbmCredentials {
	this := IbmCredentials{}
	return &this
}

// GetApikey returns the Apikey field value
func (o *IbmCredentials) GetApikey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Apikey
}

// GetApikeyOk returns a tuple with the Apikey field value
// and a boolean to check if the value has been set.
func (o *IbmCredentials) GetApikeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Apikey, true
}

// SetApikey sets field value
func (o *IbmCredentials) SetApikey(v string) {
	o.Apikey = v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *IbmCredentials) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbmCredentials) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *IbmCredentials) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *IbmCredentials) SetProvider(v string) {
	o.Provider = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *IbmCredentials) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbmCredentials) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *IbmCredentials) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *IbmCredentials) SetUsername(v string) {
	o.Username = &v
}

func (o IbmCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["apikey"] = o.Apikey
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableIbmCredentials struct {
	value *IbmCredentials
	isSet bool
}

func (v NullableIbmCredentials) Get() *IbmCredentials {
	return v.value
}

func (v *NullableIbmCredentials) Set(val *IbmCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableIbmCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableIbmCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIbmCredentials(val *IbmCredentials) *NullableIbmCredentials {
	return &NullableIbmCredentials{value: val, isSet: true}
}

func (v NullableIbmCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIbmCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


